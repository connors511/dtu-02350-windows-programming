%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: DTU Informatics A UK.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Nanna Obel
%%CreationDate: 12/11/08
%%BoundingBox: 0 0 290 37
%%HiResBoundingBox: 0 0 289.7715 36.7451
%%CropBox: 0 0 289.7715 36.7451
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 16 8%%BeginData: 3250 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4552287D53527D7DA8A87DFF7D7DFD04FF27A8FD04FFA8FD05FFA8FF%FFA8FF7DA8FFA8FFA8FD58FF27FF52FF52FF52A8527DFF7D527D27527D27%7D52277D277D2E522752A87D27A8F87D52A8527D7D277DFD57FF52FF52A8%52FF7DA87D7DFF7D7D7DA852A852A8597D7D7DFF7D52FD047D52A859FFA8%7D52FFFF52A8FD57FF275252FF52FF7D5252A8FF7E7DA87D7D8452A82727%A852FF527D537E5252278452A87D7E527DA85252FD57FFA9A8FD05FFA8FD%09FFA8FFA8FD09FFA8FFA8FFA8FFFFFFA8FFA8FDD8FFA87DA8FD17FFA8FD%05FFA8A8FFA8FD04FFA8A8FD0DFFA8FD0EFFA8A8FF7DFFA8A8FD04FFA8A8%FD0CFFA8FFA8FD05FFA8FFFF7DFFA8A8FD04FFA8A8FFFFFFA8A8A8FD06FF%7DFF7DA87DA8A884A8FF7DA87DA87DA87D847DA87DA8A8A87DA853A8FFA8%7DA87DA8FFA87DA87DA87DA87DA8A8A8847D7D7EA8A87DA87DFD05A87DFF%FFA87DA87DA8A8A87DAFFFFD047DFF7DA87DA87DA8A8A87DA87D847DFD04%A87D84FD08A8FF528452A87D84A8A87DA87DA8A8A87DA8A87D7DA87D7DA8%FFA87DFD07A87DA8FFFD05A87DFD04A8FFA8A8FFFFA8FFA8FFFFFFFD05A8%FFA8A9FD0FA8FFA8A8FFFFA8A87DFD06A8FFFD07A8FFFD04A87DA87DFFA8%A87DFF7DA8A8FF7DA8FFFFA8A8A8FFFFA8A8A87DA8A87DA8FF7DFD09A87D%A87D7DA884A87DFF7DA87D7D7DA8A8FF7DFD05A87DFD05A87DFFFFA87DA8%A8FFFFA87DFD04A8FF7DA87DFFFD04A87D7D7DAF7DA87DA8A8FF7DFFFF7D%7DA8A8A87DA87DFFFFA8FFFF7D847DA87DA8A8A87DFD07A87DA8A8A87DA8%7DA87D7D84A8A8FF7DFFA8A87DA87DA87DA87DA8A8A87DA87DA8A8A87DA8%FFA8FFFFFD04A8FFA8FD05FFA8FD05FFA8FD05FFA8FFA8FD0DFFA8FD07FF%A8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFAFFFFFFFA8FFA8FFFFFFA8FFA8FD09FFA8FFA8FFFFFF%A8FFFFFFA8FFFFFFA8A87DFD06FFA8FD77FFA8FDFCFFFD05FFC3A1C3A1C3%A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3A1C3%A1C3A1C3A0CAFD57FF686968696869686968696869686968696869686968%696869686968696869686968696869686968696FFD56FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-01-14T11:33:28+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-12-11T15:47:54+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-12-11T15:47:54+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>32</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAIAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AMPyq03yXqs/kfTNOSK8u&#xA;dR0u9k88W9vIzowj9N7Zr1Uaiy+uoKk/F49sKpn5Vt9E8v8AlT8u/MUrJp8FxrM/6a1OWQrHxWK+&#xA;hg9eRzxVQWCitBirOfIt0br8vvOF/FKZrW81PX7iwuQSySW7zymKSJu6EfZI2xVg7a/+YGl+S7K6&#xA;0XzJJbwad5L0vXVsp7W1njLxoqSxczGsvGVIySWctyOxA2xVdr93rHlnzV+YWv2utGC6OpaPpcus&#xA;Xdrbzmys7uCCR5RwiX4YQ/EKfhOxYM/xYqmvkvzT588x3HlqvmiT6pfz6tby3cFlaLHewaZMoiuo&#xA;1khZo2nVirUbiKbKDU4qkM3nj81VtL2SLzW3+i2XmC9jMlhZM5/QF2Y0RisaL+/jajEKKU2xVkF3&#xA;+aWpyfmhY6Pb64bPT5rpdM1LTrkWCMks2nmdLi0VlN1xEnEB5eSMzcadKqoPyjcard+X/KN3feYr&#xA;jWLmDzZdW13aXS2szRN6t0iB39L10dUTmnxigkI+xwCqrofzC8zXf5ZTeYIfO1lD5jM0Mmo6TM2m&#xA;WzWK+rJ6llD6yHhM6IQn1nnUrir13yZq8Os+VNJ1WG5lvIr22jnW5uI0ilcOtayJGqIG8eIp4bYF&#xA;TnFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWL6P5ntBHbT3Onx6Xaahbtd&#xA;QXKuhQrEvNlkoqFWCHl3HXfFUcfMflg2Y/fIbdmMfo+k5PJR6hBi48h8J5br03xVX/xBoUcttaC4&#xA;RfrKA2oCt6bpw5AI4Hpn4N6VxVBp5p8sySW8MdZIrqFjHKsD+l6UdNixX7PxfLxpiq+381+VLydb&#xA;aK7iklumWPgUYc2ZaopLKB8S/Zr17Yquj8z+VvSMsd1EI7biqsFIosjempj+H4lZhxqu2Krf8SeX&#xA;XuLG2jBmN+0sULJCxVTU+oslVHGrD4gR7nbfFVe71Py7FqAs7lovrjGP4SnL4mqIgW4kBj+yCa+G&#xA;KoGz8x2k+k6vqqWISDTnuJEWjK8xtw1ZDzjTizFD4kd99sVRH6a8sPcPayGL6y5HrQmIsTII/V4k&#xA;8aM/A1A6ntiqH03zrpEmnpc3hWwR5JEt4jzJ9KIgeow9NOC77n7I/mrsFUbcea/L9u0iy3gUwyCC&#xA;Siu1JCpcJspqeKk7Yq6281+X7qKaW2u/WSAI0ojSRmCyGiMFC8mB8QMVQ83nTRgUW3drgzWkt5BI&#xA;qt6LJFQUaSh41J8Nu+9AVUQfNOiRq3r3AjeKJZbigd0jDIJKM6rxrxNQOp8MVRceqWUli16jObda&#xA;1JjkDbf5BXn+GKoJvOHltYEnN6vpyCQrRXJpCwWTkoXkvAneoxV1x5o0yPUrTToX+sXFzMIX4V4x&#xA;hoWmBL0K1oo+Gtd64qhtQ86WGn6pe6fcxMr2lstxE4NRMzf7qQfzkkUHfFVay836TPa6fLO5tptR&#xA;iSWGFldhV1LBA4XiW2O3X2xVDjz3ovO2LCWO2uBc1mkjdShtWRT8AUkhvUrXtTf2VTI+YtEF4tn9&#xA;bQzsAQoqV+JPUA5gceRT4gK1piqGt/Ofli5nighv0aWZ1jiXi4q0gqgqVA+Lt44qtu/Oeg20E8pl&#xA;kka2aNZYUik9QeqeKtxYL8J/m6fhiqoPNOmJ6xuHEQSf0IQoeSST9ykxPpqvNSBJuKbfTirr3zVp&#xA;VuLuNJPUvLSFp2tSGjZkQ0JUsoBFdqiuKt6v5jttL1TTbK4jPp6iZB9ZrRIjGUVefs7yqtfHFUHp&#xA;3nvRLmya8uHNnEZ5YoA4LNIkQVvV4qCQvFwSTsPHFUZc+adJivoLKOUTSyyCORlrwjDRNKGaShT7&#xA;K1pyrQ1xV0fmnSrgRGylFz6k0ULAckKiavB6MBVTxNCNjiqF07zpp1xaJdXQFpHJHbvGORkYvcoz&#xA;qnFV6/Bt44qiZvN/lyGGOZ71THKnqqUV3+DkU5MFUlRzBX4u+2KpKPI+o3Ok22m395EIbG1e2szA&#xA;jVMjqF9WQs3YD7Ip164q4eXdatL/AE+e0itvrXqzPPNWeSMA2/pqXMru5NelDhV1v5Fv4JrVBfrN&#xA;Z2ot/SEgk5p6MPpsEUP6YDNV/s13pgVMG8t3yWGkW0M8VbCzaxuC6tR1eJIyyUOxBjrviqink2UC&#xA;MNcKQp08tRTU/UkKt/wddsVQ+n+Rp7aG2ieWFmtHtfSuB65d47adJSrLJI6JyEY2UUr7bYqj4/Ld&#xA;5Df293FPGTFf3N3Ijq28V0CpUEH7Sg/LFV975fvp9TkljuYlsbi5tbudGjJlD2hRlVG5AUcxLWo2&#xA;3xVWfQ5W8vajpXqqJL769xloaL9cllkWo/yfV3xVDReWJkk5Gdf+OlHqFKH7MdssHD51SuKoa48p&#xA;aj9WjjtbqFJGtJ7C5MqM6+lO/PmlGX4l8DscVRFp5Ve2a3Czgpb6ib4VBqU+rNAE+fxVriqDm8ma&#xA;kIbYWt6kMlva29swo4WQQymRlYoyOFYHscVdB5Mv7ezggiuYeQttQtJyUcLwvpvWUxjkSChAHxE4&#xA;qi7Xy7qdpBeWUb2txYXg5SR3COTzMKxMpo1Ch4V8RXFV8egawvlaXSjqPG9Yn0bkcyET1OSxci3q&#xA;FePwcuXKmKoGw8k3cBvHkuYi13BewkIr8Va89Gh+NnY8fRNaneuKq1l5Tv7a8tqXMTWMF2t8V4N6&#xA;vq/Vjbsla8eO/IGle2KpmPL9q+sXWoXUcdwJTbyW6ugYxSW6sOYJ7/HtTFUisvJOqW8mnq99HNbW&#xA;QtKIwlqptacxGof0xz61K1xVGw+V74SL6txEUhTUIoeKsCVvpEkUtU9U4kGmKoWy8jS21wrNJDPD&#xA;+5kJf1gySxQJDVFVxGd4wwLLUdN8VRCeUJ1MRNwlUXSgfhPXTZWdv+DDUGKoKHyNqwt7oXGoRz3M&#xA;tvHCk7LKxZop/XDy83c/F0IWlO2FUcvlvV4b9tTt7i3+uvPLK0ciuYuM9vBE42Iaoe3qD4YFQr+T&#xA;NVmubyW4vo5vXS7SGRhKZAtyysqtydkCxheICKMVTzU9Dg1DUrW4uVSW1hguIJbaReQf12iI67be&#xA;jiqUS+T7+K5uLnT7mCJ7j61EY5I2ZFguliHwhWX4kMHyOKrV8lXccf1BLpDpZk9Yko31gMbU2xFQ&#xA;eFP2untiqppXlC4tBCZXhM0ElufWQzszx2/LY+q8gWpeoC7DfFVmmeSrmy+phrlH+rNZM1FIr9Ui&#xA;kjan+t6m2KpLrHljWbW8428D30LxOGhTmsNx6t7POYZWSSMpxWYbuGU1O3XCqX/9DJ/l7/vnUP8A&#xA;kTH/ANVcx/zA7i7z/Q/qO+Pz/Y7/AKGT/L3/AHzqH/ImP/qrj+YHcV/0P6jvj8/2O/6GT/L3/fOo&#xA;f8iY/wDqrj+YHcV/0P6jvj8/2O/6GT/L3/fOof8AImP/AKq4/mB3Ff8AQ/qO+Pz/AGO/6GT/AC9/&#xA;3zqH/ImP/qrj+YHcV/0P6jvj8/2O/wChk/y9/wB86h/yJj/6q4/mB3Ff9D+o74/P9jv+hk/y9/3z&#xA;qH/ImP8A6q4/mB3Ff9D+o74/P9jv+hk/y9/3zqH/ACJj/wCquP5gdxX/AEP6jvj8/wBjv+hk/wAv&#xA;f986h/yJj/6q4/mB3Ff9D+o74/P9jv8AoZP8vf8AfOof8iY/+quP5gdxX/Q/qO+Pz/Y9J0PWLTWd&#xA;Hs9VtA4tb6JZ4RIAr8XFRyAJ3+nLYysW6jNiOOZgeYKNyTU7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:AD68926F26C4DC11B0F7C948713094C1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:2168A1BB2CC9DD11B78ECA896BCDADF0</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:AC68926F26C4DC11B0F7C948713094C1</stRef:instanceID>
            <stRef:documentID>uuid:AB68926F26C4DC11B0F7C948713094C1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609398</xapG:cyan>
                           <xapG:magenta>67.578102</xapG:magenta>
                           <xapG:yellow>66.796898</xapG:yellow>
                           <xapG:black>89.843796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890602</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953102</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796898</xapG:cyan>
                           <xapG:magenta>97.656296</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390601</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296898</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046898</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765602</xapG:magenta>
                           <xapG:yellow>86.718796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656296</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843796</xapG:cyan>
                           <xapG:magenta>33.203102</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781296</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531296</xapG:cyan>
                           <xapG:magenta>14.843798</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109398</xapG:cyan>
                           <xapG:magenta>52.343796</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828102</xapG:cyan>
                           <xapG:magenta>96.093796</xapG:magenta>
                           <xapG:yellow>3.515601</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171898</xapG:yellow>
                           <xapG:black>24.609398</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218796</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>1.171899</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765602</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109398</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718798</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218796</xapG:yellow>
                           <xapG:black>0.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484398</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>27.343798</xapG:magenta>
                           <xapG:yellow>39.843796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843796</xapG:cyan>
                           <xapG:magenta>42.578102</xapG:magenta>
                           <xapG:yellow>52.343796</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390602</xapG:cyan>
                           <xapG:magenta>52.734398</xapG:magenta>
                           <xapG:yellow>60.546898</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421898</xapG:cyan>
                           <xapG:magenta>60.156296</xapG:magenta>
                           <xapG:yellow>63.671898</xapG:yellow>
                           <xapG:black>41.796898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>38.281296</xapG:magenta>
                           <xapG:yellow>63.281296</xapG:yellow>
                           <xapG:black>1.171899</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640602</xapG:cyan>
                           <xapG:magenta>48.828102</xapG:magenta>
                           <xapG:yellow>73.828102</xapG:yellow>
                           <xapG:black>9.765601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031296</xapG:magenta>
                           <xapG:yellow>83.593796</xapG:yellow>
                           <xapG:black>22.656298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671898</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>35.546898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406296</xapG:cyan>
                           <xapG:magenta>69.531296</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>48.828102</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656296</xapG:cyan>
                           <xapG:magenta>73.046898</xapG:magenta>
                           <xapG:yellow>83.203102</xapG:yellow>
                           <xapG:black>67.968796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781298</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328102</xapG:magenta>
                           <xapG:yellow>33.593796</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -36.7451 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 36.7451 li
289.771 36.7451 li
289.771 0 li
cp
clp
[1 0 0 1 0 0 ]ct
91.8145 33.1738 mo
91.8145 36.7451 li
0 36.7451 li
0 33.1738 li
91.8145 33.1738 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0.91 0.72 0.23 cmyk
f
5.4165 8.39746 mo
4.77783 9.02734 3.81543 9.31348 2.64746 9.31348 cv
1.76367 9.31348 0.723633 9.24023 0.368652 9.18066 cv
0.188477 9.15039 0.0859375 9.05371 0.0859375 8.84375 cv
0.0859375 0.666992 li
0.0859375 0.463867 0.188477 0.360352 0.368652 0.331055 cv
0.723633 0.270508 1.76367 0.198242 2.64746 0.198242 cv
3.80469 0.198242 4.76025 0.475586 5.39844 1.0918 cv
6.15723 1.8252 6.35645 2.83105 6.35645 4.19238 cv
6.35645 5.31934 li
6.35645 6.66504 6.16455 7.66016 5.4165 8.39746 cv
cp
4.97998 4.24902 mo
4.97998 3.08887 4.82715 2.37207 4.31201 1.89551 cv
3.89404 1.50879 3.31006 1.37109 2.64746 1.37109 cv
2.14258 1.37109 1.79932 1.38867 1.4751 1.40723 cv
1.4751 8.11035 li
1.79346 8.12793 2.14258 8.13965 2.64746 8.13965 cv
3.33691 8.13965 3.94141 7.99023 4.3623 7.56543 cv
4.84668 7.0752 4.97998 6.3877 4.97998 5.2627 cv
4.97998 4.24902 li
cp
17.7031 9.31348 mo
15.7612 9.31348 14.5103 8.375 14.5103 5.94629 cv
14.5103 0.517578 li
14.5103 0.390625 14.6128 0.288086 14.7451 0.288086 cv
15.665 0.288086 li
15.791 0.288086 15.8994 0.384766 15.8994 0.517578 cv
15.8994 5.94629 li
15.8994 7.40723 16.3081 8.15234 17.7031 8.15234 cv
19.0977 8.15234 19.5059 7.41309 19.5059 5.94629 cv
19.5059 0.517578 li
19.5059 0.390625 19.6084 0.288086 19.7402 0.288086 cv
20.6602 0.288086 li
20.7871 0.288086 20.8945 0.384766 20.8945 0.517578 cv
20.8945 5.94629 li
20.8945 8.375 19.6445 9.31348 17.7031 9.31348 cv
cp
13.1436 1.45508 mo
10.9194 1.45508 li
10.9194 8.98242 li
10.9194 9.1084 10.8232 9.22266 10.6909 9.22266 cv
9.76514 9.22266 li
9.63867 9.22266 9.53662 9.11426 9.53662 8.98242 cv
9.53662 1.45508 li
7.31201 1.45508 li
7.18018 1.45508 7.07178 1.38281 7.07178 1.25098 cv
7.07178 0.510742 li
7.07178 0.384766 7.18018 0.288086 7.31201 0.288086 cv
13.1436 0.288086 li
13.2764 0.288086 13.3784 0.378906 13.3784 0.510742 cv
13.3784 1.25098 li
13.3784 1.37695 13.2764 1.45508 13.1436 1.45508 cv
cp
55.3359 8.97559 mo
55.3359 9.1084 55.4336 9.22168 55.5586 9.22168 cv
56.4316 9.22168 li
56.5625 9.22168 56.6602 9.10254 56.6602 8.97559 cv
56.6602 4.00977 li
57.1582 3.75098 57.6035 3.57715 57.9453 3.57715 cv
58.5957 3.57715 58.8242 3.80566 58.8242 4.79199 cv
58.8242 8.97559 li
58.8242 9.1084 58.9199 9.22168 59.0469 9.22168 cv
59.918 9.22168 li
60.0508 9.22168 60.1465 9.10254 60.1465 8.97559 cv
60.1465 4.79199 li
60.1465 4.46094 60.123 4.1543 60.0684 3.88965 cv
60.5195 3.68555 61 3.57715 61.3301 3.57715 cv
61.9805 3.57715 62.3105 3.83496 62.3105 4.80371 cv
62.3105 8.97559 li
62.3105 9.1084 62.418 9.22168 62.5508 9.22168 cv
63.3926 9.22168 li
63.5254 9.22168 63.6328 9.1084 63.6328 8.97559 cv
63.6328 4.66113 li
63.6328 3.12207 62.8691 2.43457 61.6621 2.43457 cv
60.9336 2.43457 60.3086 2.62695 59.6719 2.95215 cv
59.3828 2.60938 58.9688 2.43457 58.3672 2.43457 cv
57.6816 2.43457 57.1211 2.69043 56.5723 3.0459 cv
56.5625 2.76563 li
56.5586 2.63379 56.4512 2.52441 56.3203 2.52441 cv
54.1797 2.52441 li
54.0605 2.52441 53.9688 2.63379 53.9688 2.76563 cv
53.9688 2.76563 53.9688 2.71191 53.9688 2.84277 cv
53.9688 2.97461 54.0488 3.08496 54.1797 3.12793 cv
55.3359 3.49316 li
55.3359 8.97559 li
cp
87.8125 8.08691 mo
87.6914 8.08105 87.5918 8.16992 87.5918 8.27246 cv
87.5918 8.84375 li
87.5918 8.98145 87.6816 9.06543 87.832 9.10254 cv
88.4648 9.25879 89.4004 9.3125 89.8594 9.3125 cv
91.3184 9.3125 92.1602 8.63965 92.1602 7.50293 cv
92.1602 6.8418 91.9258 6.28223 90.9219 5.68066 cv
89.5391 4.8457 li
89.1133 4.59277 88.8848 4.41895 88.8848 4.14258 cv
88.8848 3.64941 89.2324 3.54102 89.8594 3.54102 cv
90.5371 3.54102 91.4023 3.63965 91.7813 3.66113 cv
91.7949 3.66211 91.8066 3.66113 91.8242 3.66113 cv
91.9453 3.66113 92.0215 3.58887 92.0215 3.44434 cv
92.0215 2.89746 li
92.0215 2.75879 91.9512 2.66895 91.8008 2.63965 cv
91.2109 2.52344 90.6152 2.44043 89.793 2.44043 cv
88.4102 2.44043 87.5625 2.91602 87.5625 4.14258 cv
87.5625 4.87012 88.0176 5.42871 88.6797 5.83105 cv
90.1113 6.69727 li
90.6465 7.02246 90.8262 7.20801 90.8262 7.50293 cv
90.8262 7.98926 90.5684 8.21777 89.8047 8.21777 cv
89.4082 8.21777 88.4414 8.11816 87.8594 8.08984 cv
87.8125 8.08691 li
cp
85.7734 8.09766 mo
85.2715 8.13477 84.9492 8.17676 84.2637 8.17676 cv
83.4941 8.17676 82.9355 7.68945 82.9355 6.39063 cv
82.9355 5.3623 li
82.9355 4.05762 83.5 3.57715 84.2637 3.57715 cv
84.9492 3.57715 85.2695 3.63379 85.7773 3.6582 cv
85.8203 3.66016 li
85.9336 3.66504 86.0371 3.60059 86.0371 3.48145 cv
86.0371 2.87402 li
86.0371 2.69336 85.9883 2.62695 85.791 2.58496 cv
85.4531 2.5127 84.9063 2.44043 84.2637 2.44043 cv
82.6582 2.44043 81.6133 3.49902 81.6133 5.3623 cv
81.6133 6.39063 li
81.6133 8.25488 82.6641 9.3125 84.2637 9.3125 cv
84.9121 9.3125 85.4531 9.24023 85.791 9.16797 cv
85.9883 9.12598 86.0371 9.05371 86.0371 8.87988 cv
86.0371 8.27246 li
86.0371 8.15234 85.9277 8.08594 85.8145 8.09473 cv
85.7734 8.09766 li
cp
78.4043 3.49316 mo
77.1484 3.12793 li
77.002 3.08496 76.9141 2.97461 76.9141 2.84277 cv
76.9141 2.71191 76.9141 2.76563 76.9141 2.76563 cv
76.9141 2.63379 77.0156 2.52441 77.1484 2.52441 cv
79.4863 2.52441 li
79.6191 2.52441 79.7266 2.63379 79.7266 2.76563 cv
79.7266 8.97559 li
79.7266 9.1084 79.6191 9.22168 79.4863 9.22168 cv
78.6445 9.22168 li
78.5117 9.22168 78.4043 9.1084 78.4043 8.97559 cv
78.4043 3.49316 li
cp
79.7578 1.30469 mo
79.7578 0.293945 li
79.7578 0.162109 79.6484 0.0537109 79.5156 0.0537109 cv
78.627 0.0537109 li
78.4941 0.0537109 78.3809 0.162109 78.3809 0.293945 cv
78.3809 1.30469 li
78.3809 1.43652 78.4941 1.54492 78.627 1.54492 cv
79.5156 1.54492 li
79.6484 1.54492 79.7578 1.43652 79.7578 1.30469 cv
cp
70.3887 8.2627 mo
70.3887 4.71973 li
70.3887 3.24023 69.584 2.44043 67.8945 2.44043 cv
67.0703 2.44043 66.4453 2.52441 65.957 2.61523 cv
65.7949 2.64551 65.7168 2.72363 65.7168 2.85547 cv
65.7168 3.45117 li
65.7168 3.61328 65.8262 3.65625 65.9414 3.64746 cv
66 3.64355 li
66.4414 3.6123 67.1172 3.55273 67.8945 3.55273 cv
68.7168 3.55273 69.0664 3.82324 69.0664 4.71973 cv
69.0664 5.22461 li
68.2422 5.22461 li
66.127 5.22461 65.3262 5.90332 65.3262 7.23828 cv
65.3262 7.33496 li
65.3262 8.89746 66.3359 9.3125 67.3457 9.3125 cv
67.9727 9.3125 68.6367 9.05664 69.1777 8.71387 cv
69.1855 8.98145 li
69.1914 9.11426 69.3027 9.22168 69.4355 9.22168 cv
71.4668 9.22168 li
71.5996 9.22168 71.709 9.11426 71.709 8.98145 cv
71.709 8.98145 71.709 9.05371 71.709 8.92285 cv
71.709 8.78418 71.6035 8.6543 71.4668 8.61035 cv
70.3887 8.2627 li
cp
69.0664 7.83887 mo
68.6035 8.0918 68.1348 8.24902 67.6406 8.24902 cv
66.9922 8.24902 66.6543 8.05566 66.6543 7.3291 cv
66.6543 7.23242 li
66.6543 6.46875 66.9688 6.13184 68.2422 6.13184 cv
69.0664 6.13184 li
69.0664 7.83887 li
cp
30.8457 8.97559 mo
30.8457 9.1084 30.9551 9.22168 31.0801 9.22168 cv
31.9297 9.22168 li
32.0605 9.22168 32.1699 9.10254 32.1699 8.97559 cv
32.1699 4.02246 li
32.6992 3.75098 33.2031 3.57129 33.6602 3.57129 cv
34.5801 3.57129 34.832 3.90723 34.832 5.03809 cv
34.832 8.97559 li
34.832 9.1084 34.9414 9.22168 35.0723 9.22168 cv
35.9141 9.22168 li
36.0469 9.22168 36.1543 9.1084 36.1543 8.97559 cv
36.1543 4.89551 li
36.1543 3.56055 35.6934 2.44043 34.0684 2.44043 cv
33.3184 2.44043 32.8145 2.59473 32.082 3.0459 cv
32.0723 2.76563 li
32.0684 2.63379 31.9629 2.52441 31.8301 2.52441 cv
29.5977 2.52441 li
29.4648 2.52441 29.3633 2.63379 29.3633 2.76563 cv
29.3633 2.76563 29.3633 2.71191 29.3633 2.84277 cv
29.3633 2.97461 29.4512 3.08496 29.5977 3.12793 cv
30.8457 3.49316 li
30.8457 8.97559 li
cp
48.8965 2.52441 mo
48.7637 2.52441 48.6621 2.63379 48.6621 2.76563 cv
48.6621 2.76563 48.6621 2.71191 48.6621 2.84277 cv
48.6621 2.97461 48.75 3.08496 48.8965 3.12793 cv
50.1035 3.49316 li
50.1035 8.97559 li
50.1035 9.1084 50.2109 9.22168 50.3379 9.22168 cv
51.1855 9.22168 li
51.3164 9.22168 51.4258 9.10254 51.4258 8.97559 cv
51.4258 4.04004 li
51.9785 3.72754 52.4824 3.57129 53.084 3.57129 cv
53.2344 3.57129 53.3301 3.48145 53.3301 3.34863 cv
53.3301 2.66895 li
53.3301 2.53027 53.2344 2.44043 53.084 2.44043 cv
52.5742 2.44043 51.9961 2.56543 51.3203 3.05762 cv
51.3105 2.76563 li
51.3066 2.63379 51.1992 2.52441 51.0684 2.52441 cv
48.8965 2.52441 li
cp
73.2227 7.55078 mo
73.2227 9.01855 73.7637 9.3125 74.9961 9.3125 cv
75.2422 9.3125 75.5313 9.28223 75.7949 9.24023 cv
75.9512 9.21582 76.0176 9.14355 76.0176 9.03027 cv
76.0176 8.44043 li
76.0176 8.32031 75.9277 8.2666 75.7656 8.2666 cv
75.1113 8.2666 li
74.6543 8.2666 74.5508 8.18262 74.5508 7.55078 cv
74.5508 3.56543 li
75.7422 3.56543 li
75.875 3.56543 75.9824 3.45703 75.9824 3.3252 cv
75.9824 2.76563 li
75.9824 2.63379 75.875 2.52441 75.7422 2.52441 cv
74.5508 2.52441 li
74.5508 1.25098 li
74.5508 1.11523 74.4395 1.03906 74.3223 1.05762 cv
73.4512 1.20215 li
73.3145 1.22559 73.2227 1.32617 73.2227 1.44238 cv
73.2227 2.52441 li
71.9473 2.52441 li
71.8145 2.52441 71.7129 2.62109 71.7129 2.75293 cv
71.7129 2.84961 li
71.7129 2.98145 71.8145 3.08203 71.9473 3.12891 cv
73.2227 3.50293 li
73.2227 7.55078 li
cp
48.0039 6.34863 mo
48.0039 5.40527 li
48.0039 3.66113 47.0527 2.44043 45.2246 2.44043 cv
43.3984 2.44043 42.4531 3.66113 42.4531 5.40527 cv
42.4531 6.34863 li
42.4531 8.0918 43.3984 9.3125 45.2246 9.3125 cv
47.0527 9.3125 48.0039 8.0918 48.0039 6.34863 cv
cp
46.6797 6.34863 mo
46.6797 7.46094 46.2051 8.16406 45.2246 8.16406 cv
44.2402 8.16406 43.7773 7.4541 43.7773 6.34863 cv
43.7773 5.40527 li
43.7773 4.29199 44.2461 3.58887 45.2246 3.58887 cv
46.2109 3.58887 46.6797 4.29785 46.6797 5.40527 cv
46.6797 6.34863 li
cp
38.709 8.97559 mo
38.709 9.10254 38.8223 9.22168 38.9551 9.22168 cv
39.7969 9.22168 li
39.9219 9.22168 40.0313 9.10254 40.0313 8.97559 cv
40.0313 3.56543 li
41.2383 3.56543 li
41.3711 3.56543 41.4727 3.47559 41.4727 3.34863 cv
41.4727 2.75293 li
41.4727 2.62695 41.3711 2.52441 41.2383 2.52441 cv
40.0313 2.52441 li
40.0313 1.79785 li
40.0313 1.17285 40.1816 1.02246 40.752 1.02246 cv
41.3105 1.02246 li
41.4199 1.02246 41.5098 0.967773 41.5098 0.829102 cv
41.5098 0.276367 li
41.5098 0.168945 41.4023 0.112305 41.2871 0.0839844 cv
41.0957 0.0380859 40.8965 0 40.5898 0 cv
39.4355 0 38.709 0.378906 38.709 1.79785 cv
38.709 2.52441 li
37.3477 2.52441 li
37.2148 2.52441 37.1133 2.62109 37.1133 2.75293 cv
37.1133 2.84961 li
37.1133 2.98145 37.2148 3.08203 37.3477 3.12891 cv
38.709 3.53906 li
38.709 8.97559 li
cp
28.0117 9.22168 mo
27.0859 9.22168 li
26.9609 9.22168 26.8574 9.11426 26.8574 8.98145 cv
26.8574 0.516602 li
26.8574 0.390625 26.9531 0.288086 27.0859 0.288086 cv
28.0117 0.288086 li
28.1387 0.288086 28.2402 0.384766 28.2402 0.516602 cv
28.2402 8.98145 li
28.2402 9.1084 28.1445 9.22168 28.0117 9.22168 cv
cp
0 0 0 1 cmyk
f
75.9707 14.6572 mo
75.3945 14.6572 li
74.8281 14.6572 74.6602 14.8252 74.6602 15.4863 cv
74.6602 16.3525 li
75.9238 16.3525 li
76.0547 16.3525 76.1523 16.4482 76.1523 16.5693 cv
76.1523 17.0381 li
76.1523 17.1582 76.0547 17.2422 75.9238 17.2422 cv
74.6602 17.2422 li
74.6602 22.7256 li
74.6602 22.8457 74.5527 22.9668 74.4316 22.9668 cv
73.8418 22.9668 li
73.7109 22.9668 73.6016 22.8457 73.6016 22.7256 cv
73.6016 17.2422 li
72.4355 17.1104 li
72.3027 17.0977 72.207 17.0137 72.207 16.8936 cv
72.207 16.5693 li
72.207 16.4482 72.3027 16.3525 72.4355 16.3525 cv
73.6016 16.3525 li
73.6016 15.4863 li
73.6016 14.2002 74.2266 13.8154 75.2852 13.8154 cv
75.6094 13.8154 75.8027 13.8506 75.959 13.8867 cv
76.0918 13.9229 76.1875 13.9717 76.1875 14.0791 cv
76.1875 14.4756 li
76.1875 14.6084 76.1035 14.6572 75.9707 14.6572 cv
cp
70.2461 19.2021 mo
70.2461 17.9756 69.7539 17.1943 68.623 17.1943 cv
67.5059 17.1943 67.0117 17.9639 67.0117 19.2021 cv
67.0117 20.1162 li
67.0117 21.3428 67.4941 22.124 68.623 22.124 cv
69.7422 22.124 70.2461 21.3545 70.2461 20.1162 cv
70.2461 19.2021 li
cp
68.623 23.0498 mo
66.8555 23.0498 65.9531 21.8838 65.9531 20.1162 cv
65.9531 19.2021 li
65.9531 17.4346 66.8555 16.2676 68.623 16.2676 cv
70.3906 16.2676 71.3047 17.4346 71.3047 19.2021 cv
71.3047 20.1162 li
71.3047 21.8838 70.3906 23.0498 68.623 23.0498 cv
cp
61.9219 22.9902 mo
61.6816 23.0264 61.3691 23.0498 61.1406 23.0498 cv
60.0332 23.0498 59.5059 22.7617 59.5059 21.4385 cv
59.5059 17.2422 li
58.3379 17.1104 li
58.207 17.0977 58.1094 17.0254 58.1094 16.8936 cv
58.1094 16.5693 li
58.1094 16.4365 58.207 16.3525 58.3379 16.3525 cv
59.5059 16.3525 li
59.5059 15.1738 li
59.5059 15.0537 59.5898 14.957 59.7207 14.9326 cv
60.3457 14.8369 li
60.3594 14.8369 60.3711 14.8369 60.3828 14.8369 cv
60.4785 14.8369 60.5625 14.9209 60.5625 15.042 cv
60.5625 16.3525 li
61.8613 16.3525 li
61.9941 16.3525 62.1016 16.4609 62.1016 16.5928 cv
62.1016 17.002 li
62.1016 17.1338 61.9941 17.2422 61.8613 17.2422 cv
60.5625 17.2422 li
60.5625 21.4385 li
60.5625 22.1006 60.7305 22.1963 61.2129 22.1963 cv
61.8867 22.1963 li
62.0547 22.1963 62.1387 22.2451 62.1387 22.3643 cv
62.1387 22.7861 li
62.1387 22.8936 62.0781 22.9668 61.9219 22.9902 cv
cp
56.752 22.9668 mo
56.1738 22.9668 li
56.041 22.9668 55.9336 22.8584 55.9336 22.7256 cv
55.9336 18.7695 li
55.9336 17.5547 55.5254 17.1826 54.6113 17.1826 cv
54.1055 17.1826 53.541 17.374 52.9863 17.6514 cv
52.9863 22.7256 li
52.9863 22.8457 52.8789 22.9668 52.7461 22.9668 cv
52.1582 22.9668 li
52.0371 22.9668 51.9297 22.8584 51.9297 22.7256 cv
51.9297 16.5928 li
51.9297 16.4609 52.0254 16.3525 52.1582 16.3525 cv
52.7578 16.3525 li
52.8906 16.3525 52.9863 16.4609 52.9863 16.5928 cv
52.9863 16.8213 li
53.6484 16.4482 54.1895 16.2676 54.8984 16.2676 cv
56.3418 16.2676 56.9922 17.1699 56.9922 18.7695 cv
56.9922 22.7256 li
56.9922 22.8584 56.8828 22.9668 56.752 22.9668 cv
cp
49.416 19.082 mo
49.416 17.7236 48.8984 17.1943 47.8398 17.1943 cv
46.8066 17.1943 46.2285 17.7832 46.2285 19.082 cv
46.2285 19.1904 li
49.416 19.1904 li
49.416 19.082 li
cp
50.2578 19.9961 mo
46.2285 19.9961 li
46.2285 20.165 li
46.2285 21.5947 46.7949 22.124 47.9004 22.124 cv
48.5977 22.124 49.4883 22.0762 50.041 21.9922 cv
50.0645 21.9922 50.0762 21.9922 50.1016 21.9922 cv
50.1973 21.9922 50.293 22.04 50.293 22.1602 cv
50.293 22.5693 li
50.293 22.7256 50.2461 22.8096 50.0527 22.8457 cv
49.3672 22.9785 48.707 23.0498 47.9004 23.0498 cv
46.5176 23.0498 45.1699 22.4014 45.1699 20.165 cv
45.1699 19.082 li
45.1699 17.3623 46.1211 16.2676 47.8398 16.2676 cv
49.5957 16.2676 50.4863 17.374 50.4863 19.082 cv
50.4863 19.7314 li
50.4863 19.8877 50.4023 19.9961 50.2578 19.9961 cv
cp
43.5117 22.9668 mo
42.9336 22.9668 li
42.8008 22.9668 42.6934 22.8584 42.6934 22.7256 cv
42.6934 18.4688 li
42.6934 17.459 42.2246 17.1826 41.5996 17.1826 cv
41.166 17.1826 40.6621 17.3262 40.1934 17.5068 cv
40.2656 17.7715 40.3008 18.084 40.3008 18.4443 cv
40.3008 22.7256 li
40.3008 22.8457 40.2168 22.9668 40.084 22.9668 cv
39.4473 22.9668 li
39.3262 22.9668 39.2422 22.8584 39.2422 22.7256 cv
39.2422 18.4443 li
39.2422 17.3984 38.9414 17.1826 38.3164 17.1826 cv
37.8828 17.1826 37.3535 17.3984 36.8496 17.6514 cv
36.8496 22.7256 li
36.8496 22.8457 36.7656 22.9668 36.6328 22.9668 cv
35.9961 22.9668 li
35.875 22.9668 35.791 22.8584 35.791 22.7256 cv
35.791 16.5928 li
35.791 16.4609 35.8867 16.3525 36.0195 16.3525 cv
36.6211 16.3525 li
36.7539 16.3525 36.8496 16.4609 36.8496 16.5928 cv
36.8496 16.8213 li
37.3301 16.5205 37.9434 16.2568 38.6055 16.2568 cv
39.123 16.2568 39.5078 16.4004 39.8086 16.749 cv
40.4688 16.4365 41.1777 16.2568 41.8047 16.2568 cv
42.8867 16.2568 43.752 16.7979 43.752 18.4688 cv
43.752 22.7256 li
43.752 22.8584 43.6445 22.9668 43.5117 22.9668 cv
cp
34.457 22.9902 mo
34.2168 23.0264 33.9023 23.0498 33.6738 23.0498 cv
32.5684 23.0498 32.0391 22.7617 32.0391 21.4385 cv
32.0391 17.2422 li
30.873 17.1104 li
30.7402 17.0977 30.6445 17.0254 30.6445 16.8936 cv
30.6445 16.5693 li
30.6445 16.4365 30.7402 16.3525 30.873 16.3525 cv
32.0391 16.3525 li
32.0391 15.1738 li
32.0391 15.0537 32.123 14.957 32.2559 14.9326 cv
32.8809 14.8369 li
32.8926 14.8369 32.9043 14.8369 32.918 14.8369 cv
33.0137 14.8369 33.0977 14.9209 33.0977 15.042 cv
33.0977 16.3525 li
34.3965 16.3525 li
34.5293 16.3525 34.6367 16.4609 34.6367 16.5928 cv
34.6367 17.002 li
34.6367 17.1338 34.5293 17.2422 34.3965 17.2422 cv
33.0977 17.2422 li
33.0977 21.4385 li
33.0977 22.1006 33.2656 22.1963 33.7461 22.1963 cv
34.4199 22.1963 li
34.5879 22.1963 34.6719 22.2451 34.6719 22.3643 cv
34.6719 22.7861 li
34.6719 22.8936 34.6133 22.9668 34.457 22.9902 cv
cp
29.7656 17.1826 mo
29.2129 17.1826 28.709 17.3262 28.1074 17.6875 cv
28.1074 22.7256 li
28.1074 22.8457 27.998 22.9668 27.8672 22.9668 cv
27.2773 22.9668 li
27.1563 22.9668 27.0488 22.8584 27.0488 22.7256 cv
27.0488 16.5928 li
27.0488 16.4609 27.1445 16.3525 27.2773 16.3525 cv
27.8418 16.3525 li
27.9746 16.3525 28.0703 16.4609 28.0703 16.5928 cv
28.0703 16.8447 li
28.6719 16.4248 29.2246 16.2676 29.7656 16.2676 cv
29.9355 16.2676 30.0195 16.3408 30.0195 16.4844 cv
30.0195 16.9775 li
30.0195 17.1104 29.9355 17.1826 29.7656 17.1826 cv
cp
24.3555 19.7676 mo
23.4648 19.7676 li
22.0098 19.7676 21.625 20.0928 21.625 20.9463 cv
21.625 21.0908 li
21.625 21.9561 22.0332 22.1846 22.7324 22.1846 cv
23.2852 22.1846 23.7773 22.0166 24.3555 21.7041 cv
24.3555 19.7676 li
cp
25.1719 22.9668 mo
24.6191 22.9668 li
24.4883 22.9668 24.3789 22.8584 24.3789 22.7256 cv
24.3789 22.4609 li
23.8027 22.7979 23.2012 23.0498 22.5273 23.0498 cv
21.5049 23.0498 20.5664 22.6055 20.5664 21.1025 cv
20.5664 20.958 li
20.5664 19.6592 21.3242 19.0098 23.4648 19.0098 cv
24.3555 19.0098 li
24.3555 18.5293 li
24.3555 17.5186 24.0059 17.1699 23.0684 17.1699 cv
22.2871 17.1699 21.709 17.2178 21.2285 17.2666 cv
21.2041 17.2666 21.1924 17.2666 21.168 17.2666 cv
21.0605 17.2666 20.9512 17.2295 20.9512 17.0732 cv
20.9512 16.6533 li
20.9512 16.5205 21.0352 16.4482 21.2041 16.4248 cv
21.6973 16.3408 22.25 16.2676 23.0684 16.2676 cv
24.7402 16.2676 25.4141 17.1104 25.4141 18.5293 cv
25.4141 22.7256 li
25.4141 22.8584 25.3047 22.9668 25.1719 22.9668 cv
cp
18.3301 19.2383 mo
18.3301 17.9756 17.9575 17.1582 16.7671 17.1582 cv
16.2617 17.1582 15.6963 17.2178 15.3599 17.2783 cv
15.3599 22.04 li
15.7568 22.1123 16.3823 22.1602 16.7671 22.1602 cv
17.9453 22.1602 18.3301 21.3906 18.3301 20.1045 cv
18.3301 19.2383 li
cp
16.7671 23.0498 mo
16.394 23.0498 15.8291 23.0029 15.3599 22.918 cv
15.3599 25.0947 li
15.3599 25.2148 15.2637 25.3232 15.1313 25.3232 cv
14.5181 25.3232 li
14.3979 25.3232 14.3018 25.2275 14.3018 25.0947 cv
14.3018 16.8213 li
14.3018 16.665 14.3379 16.5928 14.5547 16.5439 cv
15.1914 16.3887 16.0337 16.2676 16.7671 16.2676 cv
18.5586 16.2676 19.3887 17.4346 19.3887 19.2383 cv
19.3887 20.1045 li
19.3887 21.9922 18.5225 23.0498 16.7671 23.0498 cv
cp
11.7886 19.082 mo
11.7886 17.7236 11.2715 17.1943 10.2129 17.1943 cv
9.17871 17.1943 8.60156 17.7832 8.60156 19.082 cv
8.60156 19.1904 li
11.7886 19.1904 li
11.7886 19.082 li
cp
12.6304 19.9961 mo
8.60156 19.9961 li
8.60156 20.165 li
8.60156 21.5947 9.16699 22.124 10.2734 22.124 cv
10.9707 22.124 11.8608 22.0762 12.4141 21.9922 cv
12.4375 21.9922 12.4497 21.9922 12.4741 21.9922 cv
12.5703 21.9922 12.6665 22.04 12.6665 22.1602 cv
12.6665 22.5693 li
12.6665 22.7256 12.6182 22.8096 12.4258 22.8457 cv
11.7402 22.9785 11.0791 23.0498 10.2734 23.0498 cv
8.89063 23.0498 7.54346 22.4014 7.54346 20.165 cv
7.54346 19.082 li
7.54346 17.3623 8.49365 16.2676 10.2129 16.2676 cv
11.9688 16.2676 12.8589 17.374 12.8589 19.082 cv
12.8589 19.7314 li
12.8589 19.8877 12.7749 19.9961 12.6304 19.9961 cv
cp
5.1626 17.6875 mo
5.1626 15.5107 4.05615 14.8848 2.61328 14.8848 cv
2.04785 14.8848 1.67529 14.8975 1.27832 14.9209 cv
1.27832 22.0889 li
1.66309 22.1123 2.04785 22.1123 2.61328 22.1123 cv
4.05615 22.1123 5.1626 21.4756 5.1626 19.3105 cv
5.1626 17.6875 li
cp
2.61328 23.0498 mo
1.69922 23.0498 0.773438 22.9902 0.424316 22.9307 cv
0.268555 22.9063 0.171875 22.8096 0.171875 22.6299 cv
0.171875 14.3682 li
0.171875 14.2002 0.268555 14.0908 0.424316 14.0674 cv
0.773438 14.0068 1.69922 13.9473 2.61328 13.9473 cv
4.83789 13.9473 6.25684 15.0898 6.25684 17.6875 cv
6.25684 19.3105 li
6.25684 21.8838 4.83789 23.0498 2.61328 23.0498 cv
cp
288.484 18.4814 mo
288.484 17.7598 288.16 17.1953 286.861 17.1953 cv
285.514 17.1953 285.238 17.8086 285.238 18.4814 cv
285.238 18.5781 li
285.238 19.1074 285.479 19.8047 286.861 19.8047 cv
288.16 19.8047 288.484 19.2988 288.484 18.5781 cv
288.484 18.4814 li
cp
288.582 23.4121 mo
288.582 22.9434 288.197 22.75 287.115 22.4746 cv
285.756 22.125 li
285.406 22.4258 285.166 22.7266 285.166 23.3516 cv
285.166 23.46 li
285.166 24.1338 285.563 24.5547 286.898 24.5547 cv
288.27 24.5547 288.582 24.1699 288.582 23.5078 cv
288.582 23.4121 li
cp
289.555 17.1592 mo
289.123 17.2432 li
289.338 17.4717 289.531 17.832 289.531 18.4814 cv
289.531 18.5781 li
289.531 19.9004 288.713 20.6348 286.861 20.6348 cv
286.225 20.6348 285.814 20.5381 285.467 20.3936 cv
285.262 20.4902 285.166 20.6221 285.166 20.8027 cv
285.166 21.0068 285.262 21.1152 285.539 21.1875 cv
287.33 21.6445 li
288.51 21.9453 289.639 22.2813 289.639 23.4121 cv
289.639 23.5078 li
289.639 24.6631 288.869 25.3721 286.898 25.3721 cv
284.998 25.3721 284.131 24.6387 284.131 23.46 cv
284.131 23.3516 li
284.131 22.6787 284.492 22.125 284.889 21.8242 cv
284.805 21.7891 li
284.42 21.6201 284.252 21.2236 284.252 20.8506 cv
284.252 20.8389 li
284.252 20.5137 284.408 20.165 284.744 19.9727 cv
284.371 19.624 284.191 19.1914 284.191 18.5781 cv
284.191 18.4814 li
284.191 17.4111 284.793 16.3535 286.861 16.3535 cv
289.496 16.3535 li
289.639 16.3535 289.771 16.4736 289.771 16.6172 cv
289.771 16.9297 li
289.771 17.0869 289.688 17.1348 289.555 17.1592 cv
cp
282.51 22.9668 mo
281.932 22.9668 li
281.799 22.9668 281.691 22.8594 281.691 22.7266 cv
281.691 18.7705 li
281.691 17.5557 281.283 17.1836 280.369 17.1836 cv
279.863 17.1836 279.299 17.375 278.744 17.6523 cv
278.744 22.7266 li
278.744 22.8467 278.637 22.9668 278.504 22.9668 cv
277.916 22.9668 li
277.795 22.9668 277.688 22.8594 277.688 22.7266 cv
277.688 16.5938 li
277.688 16.4609 277.783 16.3535 277.916 16.3535 cv
278.516 16.3535 li
278.648 16.3535 278.744 16.4609 278.744 16.5938 cv
278.744 16.8223 li
279.406 16.4492 279.947 16.2695 280.656 16.2695 cv
282.1 16.2695 282.75 17.1709 282.75 18.7705 cv
282.75 22.7266 li
282.75 22.8594 282.641 22.9668 282.51 22.9668 cv
cp
275.582 22.9668 mo
275.004 22.9668 li
274.871 22.9668 274.764 22.8594 274.764 22.7266 cv
274.764 16.5938 li
274.764 16.4609 274.871 16.3535 275.004 16.3535 cv
275.582 16.3535 li
275.713 16.3535 275.822 16.4609 275.822 16.5938 cv
275.822 22.7266 li
275.822 22.8594 275.713 22.9668 275.582 22.9668 cv
cp
275.605 15.2949 mo
274.992 15.2949 li
274.859 15.2949 274.752 15.1865 274.752 15.0547 cv
274.752 14.0918 li
274.752 13.96 274.859 13.8516 274.992 13.8516 cv
275.605 13.8516 li
275.738 13.8516 275.846 13.96 275.846 14.0918 cv
275.846 15.0547 li
275.846 15.1865 275.738 15.2949 275.605 15.2949 cv
cp
272.66 22.9668 mo
272.033 22.9668 li
271.914 22.9668 271.818 22.8594 271.818 22.7266 cv
271.818 14.1523 li
271.818 14.0322 271.902 13.9238 272.033 13.9238 cv
272.66 13.9238 li
272.779 13.9238 272.875 14.0205 272.875 14.1523 cv
272.875 22.7266 li
272.875 22.8467 272.791 22.9668 272.66 22.9668 cv
cp
269.707 22.9668 mo
269.08 22.9668 li
268.961 22.9668 268.865 22.8594 268.865 22.7266 cv
268.865 14.1523 li
268.865 14.0322 268.949 13.9238 269.08 13.9238 cv
269.707 13.9238 li
269.826 13.9238 269.922 14.0205 269.922 14.1523 cv
269.922 22.7266 li
269.922 22.8467 269.838 22.9668 269.707 22.9668 cv
cp
266.23 19.083 mo
266.23 17.7246 265.715 17.1953 264.656 17.1953 cv
263.621 17.1953 263.045 17.7842 263.045 19.083 cv
263.045 19.1914 li
266.23 19.1914 li
266.23 19.083 li
cp
267.072 19.9971 mo
263.045 19.9971 li
263.045 20.165 li
263.045 21.5957 263.609 22.125 264.717 22.125 cv
265.414 22.125 266.303 22.0771 266.855 21.9932 cv
266.881 21.9932 266.893 21.9932 266.916 21.9932 cv
267.014 21.9932 267.109 22.041 267.109 22.1611 cv
267.109 22.5703 li
267.109 22.7266 267.061 22.8105 266.869 22.8467 cv
266.184 22.9795 265.521 23.0508 264.717 23.0508 cv
263.332 23.0508 261.986 22.4023 261.986 20.165 cv
261.986 19.083 li
261.986 17.3633 262.936 16.2695 264.656 16.2695 cv
266.412 16.2695 267.301 17.375 267.301 19.083 cv
267.301 19.7324 li
267.301 19.8887 267.217 19.9971 267.072 19.9971 cv
cp
259.51 17.2793 mo
259.111 17.207 258.486 17.1953 258.102 17.1953 cv
256.924 17.1953 256.539 17.9277 256.539 19.2148 cv
256.539 20.0811 li
256.539 21.3916 256.912 22.125 258.102 22.125 cv
258.512 22.125 259.1 22.0898 259.51 22.0527 cv
259.51 17.2793 li
cp
260.314 22.8467 mo
259.568 22.9912 258.836 23.0508 258.102 23.0508 cv
256.311 23.0508 255.48 21.8848 255.48 20.0811 cv
255.48 19.2148 li
255.48 17.3271 256.346 16.2695 258.102 16.2695 cv
258.475 16.2695 259.039 16.3047 259.51 16.3896 cv
259.51 14.1523 li
259.51 14.0322 259.605 13.9238 259.738 13.9238 cv
260.352 13.9238 li
260.471 13.9238 260.566 14.0205 260.566 14.1523 cv
260.566 22.5703 li
260.566 22.7266 260.531 22.8105 260.314 22.8467 cv
cp
253.221 19.2031 mo
253.221 17.9766 252.727 17.1953 251.596 17.1953 cv
250.479 17.1953 249.984 17.9648 249.984 19.2031 cv
249.984 20.1172 li
249.984 21.3438 250.467 22.125 251.596 22.125 cv
252.715 22.125 253.221 21.3555 253.221 20.1172 cv
253.221 19.2031 li
cp
251.596 23.0508 mo
249.828 23.0508 248.926 21.8848 248.926 20.1172 cv
248.926 19.2031 li
248.926 17.4355 249.828 16.2695 251.596 16.2695 cv
253.363 16.2695 254.277 17.4355 254.277 19.2031 cv
254.277 20.1172 li
254.277 21.8848 253.363 23.0508 251.596 23.0508 cv
cp
247.244 22.9668 mo
246.654 22.9668 li
246.523 22.9668 246.414 22.8594 246.414 22.7266 cv
246.414 15.5957 li
246.414 15.5713 246.414 15.5596 246.402 15.5596 cv
246.391 15.5596 246.391 15.5596 246.379 15.584 cv
244.658 19.1426 li
244.539 19.3838 244.418 19.4922 244.117 19.4922 cv
243.564 19.4922 li
243.264 19.4922 243.145 19.3838 243.023 19.1426 cv
241.305 15.584 li
241.291 15.5596 241.291 15.5596 241.279 15.5596 cv
241.268 15.5596 241.268 15.5713 241.268 15.5957 cv
241.268 22.7266 li
241.268 22.8594 241.16 22.9668 241.027 22.9668 cv
240.438 22.9668 li
240.307 22.9668 240.197 22.8594 240.197 22.7266 cv
240.197 14.3809 li
240.197 14.1885 240.354 14.0322 240.547 14.0322 cv
241.328 14.0322 li
241.545 14.0322 241.641 14.0801 241.713 14.2363 cv
243.697 18.3613 li
243.744 18.4697 243.781 18.4941 243.842 18.4941 cv
243.9 18.4941 243.938 18.4697 243.986 18.3613 cv
245.969 14.2363 li
246.041 14.0801 246.139 14.0322 246.355 14.0322 cv
247.137 14.0322 li
247.328 14.0322 247.484 14.1885 247.484 14.3809 cv
247.484 22.7266 li
247.484 22.8594 247.377 22.9668 247.244 22.9668 cv
cp
234.908 22.9668 mo
234.283 22.9668 li
234.162 22.9668 234.066 22.8594 234.066 22.7266 cv
234.066 14.1523 li
234.066 14.0322 234.15 13.9238 234.283 13.9238 cv
234.908 13.9238 li
235.027 13.9238 235.125 14.0205 235.125 14.1523 cv
235.125 22.7266 li
235.125 22.8467 235.039 22.9668 234.908 22.9668 cv
cp
231.252 19.7686 mo
230.361 19.7686 li
228.906 19.7686 228.521 20.0938 228.521 20.9473 cv
228.521 21.0908 li
228.521 21.957 228.932 22.1855 229.629 22.1855 cv
230.182 22.1855 230.674 22.0176 231.252 21.7051 cv
231.252 19.7686 li
cp
232.07 22.9668 mo
231.516 22.9668 li
231.385 22.9668 231.275 22.8594 231.275 22.7266 cv
231.275 22.4619 li
230.699 22.7988 230.098 23.0508 229.424 23.0508 cv
228.402 23.0508 227.465 22.6064 227.465 21.1035 cv
227.465 20.959 li
227.465 19.6602 228.221 19.0107 230.361 19.0107 cv
231.252 19.0107 li
231.252 18.5293 li
231.252 17.5195 230.902 17.1709 229.965 17.1709 cv
229.184 17.1709 228.605 17.2188 228.125 17.2676 cv
228.102 17.2676 228.09 17.2676 228.064 17.2676 cv
227.957 17.2676 227.848 17.2305 227.848 17.0742 cv
227.848 16.6543 li
227.848 16.5215 227.934 16.4492 228.102 16.4258 cv
228.594 16.3408 229.148 16.2695 229.965 16.2695 cv
231.637 16.2695 232.311 17.1113 232.311 18.5293 cv
232.311 22.7266 li
232.311 22.8594 232.201 22.9668 232.07 22.9668 cv
cp
226.203 22.9189 mo
225.805 22.9912 225.264 23.0508 224.699 23.0508 cv
223.064 23.0508 222.139 21.8965 222.139 20.1289 cv
222.139 19.1914 li
222.139 17.4238 223.053 16.2695 224.699 16.2695 cv
225.252 16.2695 225.805 16.3291 226.203 16.4014 cv
226.395 16.4375 226.443 16.498 226.443 16.666 cv
226.443 17.0986 li
226.443 17.2188 226.346 17.2793 226.238 17.2793 cv
226.215 17.2793 226.203 17.2793 226.191 17.2793 cv
225.662 17.2188 225.289 17.1953 224.699 17.1953 cv
223.736 17.1953 223.195 17.832 223.195 19.1914 cv
223.195 20.1289 li
223.195 21.4766 223.725 22.125 224.699 22.125 cv
225.289 22.125 225.662 22.1016 226.191 22.041 cv
226.203 22.041 226.215 22.041 226.238 22.041 cv
226.346 22.041 226.443 22.1016 226.443 22.2217 cv
226.443 22.6543 li
226.443 22.8105 226.395 22.8828 226.203 22.9189 cv
cp
220.334 22.9668 mo
219.756 22.9668 li
219.625 22.9668 219.516 22.8594 219.516 22.7266 cv
219.516 16.5938 li
219.516 16.4609 219.625 16.3535 219.756 16.3535 cv
220.334 16.3535 li
220.467 16.3535 220.574 16.4609 220.574 16.5938 cv
220.574 22.7266 li
220.574 22.8594 220.467 22.9668 220.334 22.9668 cv
cp
220.357 15.2949 mo
219.744 15.2949 li
219.613 15.2949 219.504 15.1865 219.504 15.0547 cv
219.504 14.0918 li
219.504 13.96 219.613 13.8516 219.744 13.8516 cv
220.357 13.8516 li
220.49 13.8516 220.598 13.96 220.598 14.0918 cv
220.598 15.0547 li
220.598 15.1865 220.49 15.2949 220.357 15.2949 cv
cp
217.992 22.9912 mo
217.752 23.0273 217.439 23.0508 217.211 23.0508 cv
216.104 23.0508 215.576 22.7627 215.576 21.4395 cv
215.576 17.2432 li
214.408 17.1113 li
214.277 17.0986 214.18 17.0264 214.18 16.8945 cv
214.18 16.5703 li
214.18 16.4375 214.277 16.3535 214.408 16.3535 cv
215.576 16.3535 li
215.576 15.1748 li
215.576 15.0547 215.66 14.958 215.791 14.9336 cv
216.418 14.8379 li
216.43 14.8379 216.441 14.8379 216.453 14.8379 cv
216.549 14.8379 216.633 14.9219 216.633 15.043 cv
216.633 16.3535 li
217.932 16.3535 li
218.064 16.3535 218.172 16.4609 218.172 16.5938 cv
218.172 17.002 li
218.172 17.1348 218.064 17.2432 217.932 17.2432 cv
216.633 17.2432 li
216.633 21.4395 li
216.633 22.1016 216.803 22.1973 217.283 22.1973 cv
217.957 22.1973 li
218.125 22.1973 218.209 22.2461 218.209 22.3652 cv
218.209 22.7871 li
218.209 22.8945 218.148 22.9668 217.992 22.9912 cv
cp
212.146 19.7686 mo
211.256 19.7686 li
209.801 19.7686 209.416 20.0938 209.416 20.9473 cv
209.416 21.0908 li
209.416 21.957 209.824 22.1855 210.523 22.1855 cv
211.076 22.1855 211.568 22.0176 212.146 21.7051 cv
212.146 19.7686 li
cp
212.963 22.9668 mo
212.41 22.9668 li
212.277 22.9668 212.17 22.8594 212.17 22.7266 cv
212.17 22.4619 li
211.592 22.7988 210.992 23.0508 210.318 23.0508 cv
209.297 23.0508 208.357 22.6064 208.357 21.1035 cv
208.357 20.959 li
208.357 19.6602 209.115 19.0107 211.256 19.0107 cv
212.146 19.0107 li
212.146 18.5293 li
212.146 17.5195 211.797 17.1709 210.859 17.1709 cv
210.078 17.1709 209.5 17.2188 209.02 17.2676 cv
208.996 17.2676 208.982 17.2676 208.959 17.2676 cv
208.852 17.2676 208.742 17.2305 208.742 17.0742 cv
208.742 16.6543 li
208.742 16.5215 208.826 16.4492 208.996 16.4258 cv
209.488 16.3408 210.041 16.2695 210.859 16.2695 cv
212.531 16.2695 213.205 17.1113 213.205 18.5293 cv
213.205 22.7266 li
213.205 22.8594 213.096 22.9668 212.963 22.9668 cv
cp
206.723 22.9668 mo
206.145 22.9668 li
206.014 22.9668 205.904 22.8594 205.904 22.7266 cv
205.904 18.4697 li
205.904 17.459 205.436 17.1836 204.811 17.1836 cv
204.377 17.1836 203.873 17.3271 203.404 17.5078 cv
203.475 17.7725 203.512 18.085 203.512 18.4453 cv
203.512 22.7266 li
203.512 22.8467 203.428 22.9668 203.295 22.9668 cv
202.658 22.9668 li
202.537 22.9668 202.453 22.8594 202.453 22.7266 cv
202.453 18.4453 li
202.453 17.3994 202.152 17.1836 201.527 17.1836 cv
201.094 17.1836 200.566 17.3994 200.061 17.6523 cv
200.061 22.7266 li
200.061 22.8467 199.977 22.9668 199.844 22.9668 cv
199.207 22.9668 li
199.086 22.9668 199.002 22.8594 199.002 22.7266 cv
199.002 16.5938 li
199.002 16.4609 199.098 16.3535 199.23 16.3535 cv
199.832 16.3535 li
199.965 16.3535 200.061 16.4609 200.061 16.5938 cv
200.061 16.8223 li
200.541 16.5215 201.154 16.2568 201.816 16.2568 cv
202.334 16.2568 202.719 16.4014 203.02 16.75 cv
203.68 16.4375 204.389 16.2568 205.016 16.2568 cv
206.098 16.2568 206.963 16.7988 206.963 18.4697 cv
206.963 22.7266 li
206.963 22.8594 206.855 22.9668 206.723 22.9668 cv
cp
196.488 19.083 mo
196.488 17.7246 195.973 17.1953 194.914 17.1953 cv
193.879 17.1953 193.303 17.7842 193.303 19.083 cv
193.303 19.1914 li
196.488 19.1914 li
196.488 19.083 li
cp
197.33 19.9971 mo
193.303 19.9971 li
193.303 20.165 li
193.303 21.5957 193.867 22.125 194.975 22.125 cv
195.672 22.125 196.561 22.0771 197.115 21.9932 cv
197.139 21.9932 197.15 21.9932 197.174 21.9932 cv
197.271 21.9932 197.367 22.041 197.367 22.1611 cv
197.367 22.5703 li
197.367 22.7266 197.318 22.8105 197.127 22.8467 cv
196.441 22.9795 195.779 23.0508 194.975 23.0508 cv
193.59 23.0508 192.244 22.4023 192.244 20.165 cv
192.244 19.083 li
192.244 17.3633 193.193 16.2695 194.914 16.2695 cv
196.67 16.2695 197.559 17.375 197.559 19.083 cv
197.559 19.7324 li
197.559 19.8887 197.475 19.9971 197.33 19.9971 cv
cp
190.584 22.9668 mo
190.008 22.9668 li
189.875 22.9668 189.768 22.8594 189.768 22.7266 cv
189.768 18.7705 li
189.768 17.5684 189.262 17.1953 188.48 17.1953 cv
188.107 17.1953 187.35 17.291 186.82 17.5313 cv
186.82 22.7266 li
186.82 22.8467 186.713 22.9668 186.58 22.9668 cv
185.99 22.9668 li
185.871 22.9668 185.762 22.8594 185.762 22.7266 cv
185.762 14.1641 li
185.762 14.0322 185.859 13.9238 185.99 13.9238 cv
186.592 13.9238 li
186.725 13.9238 186.82 14.0322 186.82 14.1641 cv
186.82 16.6416 li
187.398 16.3896 188.143 16.2695 188.66 16.2695 cv
189.936 16.2695 190.824 17.002 190.824 18.7705 cv
190.824 22.7266 li
190.824 22.8594 190.717 22.9668 190.584 22.9668 cv
cp
184.428 22.9912 mo
184.188 23.0273 183.875 23.0508 183.646 23.0508 cv
182.539 23.0508 182.01 22.7627 182.01 21.4395 cv
182.01 17.2432 li
180.844 17.1113 li
180.711 17.0986 180.615 17.0264 180.615 16.8945 cv
180.615 16.5703 li
180.615 16.4375 180.711 16.3535 180.844 16.3535 cv
182.01 16.3535 li
182.01 15.1748 li
182.01 15.0547 182.096 14.958 182.227 14.9336 cv
182.852 14.8379 li
182.865 14.8379 182.877 14.8379 182.889 14.8379 cv
182.984 14.8379 183.068 14.9219 183.068 15.043 cv
183.068 16.3535 li
184.367 16.3535 li
184.5 16.3535 184.607 16.4609 184.607 16.5938 cv
184.607 17.002 li
184.607 17.1348 184.5 17.2432 184.367 17.2432 cv
183.068 17.2432 li
183.068 21.4395 li
183.068 22.1016 183.236 22.1973 183.719 22.1973 cv
184.391 22.1973 li
184.561 22.1973 184.645 22.2461 184.645 22.3652 cv
184.645 22.7871 li
184.645 22.8945 184.584 22.9668 184.428 22.9912 cv
cp
178.582 19.7686 mo
177.691 19.7686 li
176.236 19.7686 175.852 20.0938 175.852 20.9473 cv
175.852 21.0908 li
175.852 21.957 176.26 22.1855 176.957 22.1855 cv
177.51 22.1855 178.004 22.0176 178.582 21.7051 cv
178.582 19.7686 li
cp
179.398 22.9668 mo
178.846 22.9668 li
178.713 22.9668 178.605 22.8594 178.605 22.7266 cv
178.605 22.4619 li
178.027 22.7988 177.426 23.0508 176.754 23.0508 cv
175.73 23.0508 174.793 22.6064 174.793 21.1035 cv
174.793 20.959 li
174.793 19.6602 175.551 19.0107 177.691 19.0107 cv
178.582 19.0107 li
178.582 18.5293 li
178.582 17.5195 178.232 17.1709 177.295 17.1709 cv
176.514 17.1709 175.936 17.2188 175.455 17.2676 cv
175.43 17.2676 175.418 17.2676 175.395 17.2676 cv
175.287 17.2676 175.178 17.2305 175.178 17.0742 cv
175.178 16.6543 li
175.178 16.5215 175.262 16.4492 175.43 16.4258 cv
175.924 16.3408 176.477 16.2695 177.295 16.2695 cv
178.967 16.2695 179.639 17.1113 179.639 18.5293 cv
179.639 22.7266 li
179.639 22.8594 179.531 22.9668 179.398 22.9668 cv
cp
173.049 22.9668 mo
172.461 22.9668 li
172.328 22.9668 172.221 22.8594 172.221 22.7266 cv
172.221 15.5957 li
172.221 15.5713 172.221 15.5596 172.207 15.5596 cv
172.195 15.5596 172.195 15.5596 172.184 15.584 cv
170.465 19.1426 li
170.344 19.3838 170.223 19.4922 169.924 19.4922 cv
169.369 19.4922 li
169.068 19.4922 168.949 19.3838 168.828 19.1426 cv
167.109 15.584 li
167.098 15.5596 167.098 15.5596 167.084 15.5596 cv
167.072 15.5596 167.072 15.5713 167.072 15.5957 cv
167.072 22.7266 li
167.072 22.8594 166.965 22.9668 166.832 22.9668 cv
166.244 22.9668 li
166.111 22.9668 166.002 22.8594 166.002 22.7266 cv
166.002 14.3809 li
166.002 14.1885 166.158 14.0322 166.352 14.0322 cv
167.133 14.0322 li
167.35 14.0322 167.445 14.0801 167.518 14.2363 cv
169.502 18.3613 li
169.551 18.4697 169.586 18.4941 169.646 18.4941 cv
169.707 18.4941 169.742 18.4697 169.791 18.3613 cv
171.775 14.2363 li
171.848 14.0801 171.943 14.0322 172.16 14.0322 cv
172.941 14.0322 li
173.135 14.0322 173.291 14.1885 173.291 14.3809 cv
173.291 22.7266 li
173.291 22.8594 173.182 22.9668 173.049 22.9668 cv
cp
159.879 17.2793 mo
159.482 17.207 158.855 17.1953 158.471 17.1953 cv
157.293 17.1953 156.908 17.9277 156.908 19.2148 cv
156.908 20.0811 li
156.908 21.3916 157.281 22.125 158.471 22.125 cv
158.881 22.125 159.469 22.0898 159.879 22.0527 cv
159.879 17.2793 li
cp
160.684 22.8467 mo
159.939 22.9912 159.205 23.0508 158.471 23.0508 cv
156.68 23.0508 155.85 21.8848 155.85 20.0811 cv
155.85 19.2148 li
155.85 17.3271 156.715 16.2695 158.471 16.2695 cv
158.844 16.2695 159.41 16.3047 159.879 16.3896 cv
159.879 14.1523 li
159.879 14.0322 159.975 13.9238 160.107 13.9238 cv
160.721 13.9238 li
160.84 13.9238 160.938 14.0205 160.938 14.1523 cv
160.938 22.5703 li
160.938 22.7266 160.9 22.8105 160.684 22.8467 cv
cp
154.191 22.9668 mo
153.613 22.9668 li
153.48 22.9668 153.373 22.8594 153.373 22.7266 cv
153.373 18.7705 li
153.373 17.5557 152.965 17.1836 152.051 17.1836 cv
151.545 17.1836 150.98 17.375 150.426 17.6523 cv
150.426 22.7266 li
150.426 22.8467 150.318 22.9668 150.186 22.9668 cv
149.598 22.9668 li
149.477 22.9668 149.369 22.8594 149.369 22.7266 cv
149.369 16.5938 li
149.369 16.4609 149.465 16.3535 149.598 16.3535 cv
150.197 16.3535 li
150.33 16.3535 150.426 16.4609 150.426 16.5938 cv
150.426 16.8223 li
151.088 16.4492 151.629 16.2695 152.338 16.2695 cv
153.781 16.2695 154.432 17.1709 154.432 18.7705 cv
154.432 22.7266 li
154.432 22.8594 154.322 22.9668 154.191 22.9668 cv
cp
146.674 19.7686 mo
145.785 19.7686 li
144.33 19.7686 143.945 20.0938 143.945 20.9473 cv
143.945 21.0908 li
143.945 21.957 144.354 22.1855 145.051 22.1855 cv
145.604 22.1855 146.098 22.0176 146.674 21.7051 cv
146.674 19.7686 li
cp
147.492 22.9668 mo
146.939 22.9668 li
146.807 22.9668 146.699 22.8594 146.699 22.7266 cv
146.699 22.4619 li
146.121 22.7988 145.52 23.0508 144.848 23.0508 cv
143.824 23.0508 142.887 22.6064 142.887 21.1035 cv
142.887 20.959 li
142.887 19.6602 143.645 19.0107 145.785 19.0107 cv
146.674 19.0107 li
146.674 18.5293 li
146.674 17.5195 146.326 17.1709 145.389 17.1709 cv
144.605 17.1709 144.029 17.2188 143.549 17.2676 cv
143.523 17.2676 143.512 17.2676 143.488 17.2676 cv
143.379 17.2676 143.271 17.2305 143.271 17.0742 cv
143.271 16.6543 li
143.271 16.5215 143.355 16.4492 143.523 16.4258 cv
144.018 16.3408 144.57 16.2695 145.389 16.2695 cv
147.059 16.2695 147.732 17.1113 147.732 18.5293 cv
147.732 22.7266 li
147.732 22.8594 147.625 22.9668 147.492 22.9668 cv
cp
136.328 23.0498 mo
135.883 23.0498 135.016 23.0146 134.428 22.8701 cv
134.271 22.834 134.174 22.7617 134.174 22.6299 cv
134.174 22.209 li
134.174 22.1006 134.271 22.0283 134.391 22.0283 cv
134.416 22.0283 134.428 22.0283 134.439 22.0283 cv
135.016 22.1006 135.895 22.1602 136.328 22.1602 cv
137.109 22.1602 137.518 21.9561 137.518 21.3066 cv
137.518 20.9463 137.301 20.7178 136.615 20.3086 cv
135.4 19.5869 li
134.668 19.1416 134.174 18.625 134.174 17.8672 cv
134.174 16.6162 135.113 16.2686 136.352 16.2686 cv
137.025 16.2686 137.662 16.3281 138.227 16.4248 cv
138.383 16.4482 138.455 16.5322 138.455 16.665 cv
138.455 17.0615 li
138.455 17.2061 138.371 17.2666 138.252 17.2666 cv
138.24 17.2666 138.227 17.2666 138.215 17.2666 cv
137.795 17.2295 137.025 17.1699 136.352 17.1699 cv
135.678 17.1699 135.232 17.2539 135.232 17.8672 cv
135.232 18.2285 135.51 18.4561 136.063 18.7813 cv
137.254 19.4912 li
138.252 20.0801 138.576 20.5967 138.576 21.3066 cv
138.576 22.5332 137.674 23.0498 136.328 23.0498 cv
cp
132.803 22.918 mo
132.406 22.9902 131.865 23.0498 131.301 23.0498 cv
129.666 23.0498 128.74 21.8955 128.74 20.1279 cv
128.74 19.1904 li
128.74 17.4229 129.652 16.2686 131.301 16.2686 cv
131.854 16.2686 132.406 16.3281 132.803 16.4004 cv
132.996 16.4365 133.045 16.4971 133.045 16.665 cv
133.045 17.0977 li
133.045 17.2178 132.947 17.2783 132.84 17.2783 cv
132.816 17.2783 132.803 17.2783 132.791 17.2783 cv
132.264 17.2178 131.891 17.1943 131.301 17.1943 cv
130.338 17.1943 129.797 17.8311 129.797 19.1904 cv
129.797 20.1279 li
129.797 21.4756 130.326 22.124 131.301 22.124 cv
131.891 22.124 132.264 22.1006 132.791 22.04 cv
132.803 22.04 132.816 22.04 132.84 22.04 cv
132.947 22.04 133.045 22.1006 133.045 22.2207 cv
133.045 22.6533 li
133.045 22.8096 132.996 22.8818 132.803 22.918 cv
cp
126.936 22.9658 mo
126.357 22.9658 li
126.227 22.9658 126.117 22.8584 126.117 22.7256 cv
126.117 16.5928 li
126.117 16.46 126.227 16.3525 126.357 16.3525 cv
126.936 16.3525 li
127.068 16.3525 127.176 16.46 127.176 16.5928 cv
127.176 22.7256 li
127.176 22.8584 127.068 22.9658 126.936 22.9658 cv
cp
126.959 15.2939 mo
126.346 15.2939 li
126.215 15.2939 126.105 15.1855 126.105 15.0537 cv
126.105 14.0908 li
126.105 13.959 126.215 13.8506 126.346 13.8506 cv
126.959 13.8506 li
127.092 13.8506 127.199 13.959 127.199 14.0908 cv
127.199 15.0537 li
127.199 15.1855 127.092 15.2939 126.959 15.2939 cv
cp
124.65 22.9902 mo
124.41 23.0264 124.098 23.0498 123.869 23.0498 cv
122.764 23.0498 122.234 22.7617 122.234 21.4385 cv
122.234 17.2422 li
121.066 17.1104 li
120.936 17.0977 120.838 17.0254 120.838 16.8936 cv
120.838 16.5693 li
120.838 16.4365 120.936 16.3525 121.066 16.3525 cv
122.234 16.3525 li
122.234 15.1738 li
122.234 15.0537 122.318 14.957 122.449 14.9326 cv
123.076 14.8369 li
123.088 14.8369 123.1 14.8369 123.111 14.8369 cv
123.207 14.8369 123.291 14.9209 123.291 15.042 cv
123.291 16.3525 li
124.59 16.3525 li
124.723 16.3525 124.832 16.46 124.832 16.5928 cv
124.832 17.001 li
124.832 17.1338 124.723 17.2422 124.59 17.2422 cv
123.291 17.2422 li
123.291 21.4385 li
123.291 22.1006 123.461 22.1963 123.941 22.1963 cv
124.615 22.1963 li
124.783 22.1963 124.867 22.2451 124.867 22.3643 cv
124.867 22.7861 li
124.867 22.8936 124.807 22.9658 124.65 22.9902 cv
cp
118.662 19.7676 mo
117.771 19.7676 li
116.316 19.7676 115.932 20.0928 115.932 20.9463 cv
115.932 21.0898 li
115.932 21.9561 116.342 22.1846 117.039 22.1846 cv
117.592 22.1846 118.086 22.0166 118.662 21.7041 cv
118.662 19.7676 li
cp
119.48 22.9658 mo
118.926 22.9658 li
118.795 22.9658 118.686 22.8584 118.686 22.7256 cv
118.686 22.4609 li
118.109 22.7979 117.508 23.0498 116.834 23.0498 cv
115.813 23.0498 114.875 22.6055 114.875 21.1025 cv
114.875 20.958 li
114.875 19.6592 115.631 19.0098 117.771 19.0098 cv
118.662 19.0098 li
118.662 18.5283 li
118.662 17.5186 118.313 17.1699 117.375 17.1699 cv
116.594 17.1699 116.016 17.2178 115.535 17.2666 cv
115.512 17.2666 115.5 17.2666 115.475 17.2666 cv
115.367 17.2666 115.26 17.2295 115.26 17.0732 cv
115.26 16.6533 li
115.26 16.5205 115.344 16.4482 115.512 16.4248 cv
116.004 16.3398 116.559 16.2686 117.375 16.2686 cv
119.047 16.2686 119.721 17.1104 119.721 18.5283 cv
119.721 22.7256 li
119.721 22.8584 119.611 22.9658 119.48 22.9658 cv
cp
113.238 22.9658 mo
112.662 22.9658 li
112.529 22.9658 112.422 22.8584 112.422 22.7256 cv
112.422 18.4688 li
112.422 17.458 111.951 17.1826 111.326 17.1826 cv
110.895 17.1826 110.389 17.3262 109.92 17.5068 cv
109.992 17.7715 110.027 18.084 110.027 18.4443 cv
110.027 22.7256 li
110.027 22.8457 109.943 22.9658 109.813 22.9658 cv
109.174 22.9658 li
109.055 22.9658 108.971 22.8584 108.971 22.7256 cv
108.971 18.4443 li
108.971 17.3984 108.67 17.1826 108.043 17.1826 cv
107.611 17.1826 107.082 17.3984 106.576 17.6514 cv
106.576 22.7256 li
106.576 22.8457 106.492 22.9658 106.359 22.9658 cv
105.723 22.9658 li
105.604 22.9658 105.518 22.8584 105.518 22.7256 cv
105.518 16.5928 li
105.518 16.46 105.615 16.3525 105.746 16.3525 cv
106.348 16.3525 li
106.48 16.3525 106.576 16.46 106.576 16.5928 cv
106.576 16.8213 li
107.059 16.5205 107.672 16.2559 108.332 16.2559 cv
108.85 16.2559 109.234 16.4004 109.535 16.749 cv
110.197 16.4365 110.906 16.2559 111.531 16.2559 cv
112.613 16.2559 113.479 16.7979 113.479 18.4688 cv
113.479 22.7256 li
113.479 22.8584 113.371 22.9658 113.238 22.9658 cv
cp
104.123 17.1826 mo
103.57 17.1826 103.064 17.3262 102.465 17.6865 cv
102.465 22.7256 li
102.465 22.8457 102.355 22.9658 102.223 22.9658 cv
101.635 22.9658 li
101.514 22.9658 101.406 22.8584 101.406 22.7256 cv
101.406 16.5928 li
101.406 16.46 101.502 16.3525 101.635 16.3525 cv
102.199 16.3525 li
102.332 16.3525 102.428 16.46 102.428 16.5928 cv
102.428 16.8447 li
103.029 16.4248 103.582 16.2686 104.123 16.2686 cv
104.293 16.2686 104.377 16.3398 104.377 16.4844 cv
104.377 16.9775 li
104.377 17.1104 104.293 17.1826 104.123 17.1826 cv
cp
98.9277 19.2021 mo
98.9277 17.9756 98.4355 17.1943 97.3047 17.1943 cv
96.1875 17.1943 95.6934 17.9639 95.6934 19.2021 cv
95.6934 20.1162 li
95.6934 21.3428 96.1738 22.124 97.3047 22.124 cv
98.4238 22.124 98.9277 21.3545 98.9277 20.1162 cv
98.9277 19.2021 li
cp
97.3047 23.0498 mo
95.5371 23.0498 94.6348 21.8838 94.6348 20.1162 cv
94.6348 19.2021 li
94.6348 17.4346 95.5371 16.2686 97.3047 16.2686 cv
99.0723 16.2686 99.9863 17.4346 99.9863 19.2021 cv
99.9863 20.1162 li
99.9863 21.8838 99.0723 23.0498 97.3047 23.0498 cv
cp
93.5176 14.6572 mo
92.9395 14.6572 li
92.375 14.6572 92.2051 14.8252 92.2051 15.4863 cv
92.2051 16.3525 li
93.4688 16.3525 li
93.6016 16.3525 93.6973 16.4482 93.6973 16.5693 cv
93.6973 17.0381 li
93.6973 17.1582 93.6016 17.2422 93.4688 17.2422 cv
92.2051 17.2422 li
92.2051 22.7256 li
92.2051 22.8457 92.0977 22.9658 91.9785 22.9658 cv
91.3887 22.9658 li
91.2559 22.9658 91.1484 22.8457 91.1484 22.7256 cv
91.1484 17.2422 li
89.9805 17.1104 li
89.8496 17.0977 89.752 17.0137 89.752 16.8936 cv
89.752 16.5693 li
89.752 16.4482 89.8496 16.3525 89.9805 16.3525 cv
91.1484 16.3525 li
91.1484 15.4863 li
91.1484 14.1992 91.7734 13.8154 92.832 13.8154 cv
93.1563 13.8154 93.3477 13.8506 93.5039 13.8867 cv
93.6367 13.9229 93.7324 13.9717 93.7324 14.0791 cv
93.7324 14.4756 li
93.7324 14.6084 93.6484 14.6572 93.5176 14.6572 cv
cp
88.3945 22.9658 mo
87.8164 22.9658 li
87.6836 22.9658 87.5762 22.8584 87.5762 22.7256 cv
87.5762 18.7695 li
87.5762 17.5547 87.168 17.1826 86.2539 17.1826 cv
85.748 17.1826 85.1836 17.374 84.6309 17.6514 cv
84.6309 22.7256 li
84.6309 22.8457 84.5215 22.9658 84.3887 22.9658 cv
83.8008 22.9658 li
83.6797 22.9658 83.5723 22.8584 83.5723 22.7256 cv
83.5723 16.5928 li
83.5723 16.46 83.668 16.3525 83.8008 16.3525 cv
84.4023 16.3525 li
84.5332 16.3525 84.6309 16.46 84.6309 16.5928 cv
84.6309 16.8213 li
85.291 16.4482 85.832 16.2686 86.541 16.2686 cv
87.9844 16.2686 88.6348 17.1699 88.6348 18.7695 cv
88.6348 22.7256 li
88.6348 22.8584 88.5254 22.9658 88.3945 22.9658 cv
cp
81.4805 22.9658 mo
80.8184 22.9658 li
80.6973 22.9658 80.6016 22.8584 80.6016 22.7256 cv
80.6016 14.2598 li
80.6016 14.1396 80.6855 14.0313 80.8184 14.0313 cv
81.4805 14.0313 li
81.5996 14.0313 81.6953 14.1279 81.6953 14.2598 cv
81.6953 22.7256 li
81.6953 22.8457 81.6113 22.9658 81.4805 22.9658 cv
cp
0 0 0 0.56 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 13.0.2%%For: (Nanna Obel) ()%%Title: (DTU Informatics A UK.eps)%%CreationDate: 12/11/08 3:47 PM%AI9_DataStream%Gb",KCNCFbP2J"Ws*ub_(e:)M?!Ydb0.qhVagnsG+(9G<B4GF=5uWla2'4l:*09:7?Y3k]<HY'&1alK0k[oSu0MthUO0!_1ee_[E%DXO^c>[7<A\G>;h1EFt=.m%enrjTK8if!hbn\aWZ^W]r.)mJ8U)q@4<HJTRDTh7+"_-t%;S+HNXeb.bm[l<KN%j.)rQT)Aq^7'Ik%p+l]pB)f-I]Y+&_[^\F]s/#SOkca^Ql,DcLo]Gl4lu!U$28W>aH?"FSq<$H/X.NG%?d4Nf#hH1h@t4@U9mnmWT*bGIlgr<s2llD@%c./;u?GY58n-f7WIX\]9]7V7l*u&g8q9=Eehm."tjl]G>q8;L\M[t$@B6P.NfDkLi[Jf.NlM]hth($^#WU#t,J,DNtJH!T-?g,%k%2/;9%$Qj3Cn+246rc,4>'rU'hiqi**_`Jd_pD<!L&P'<SY:feX6W41r&:`.f5MTVKDZ=m.ECYX@qJ/`(^U\Wr])6<oV#%!UB/n7!%4t?T0!^E:4rk,gpA\GXea"`$#$h=LhlBc.uX`!_<^3dW+rpf..@ZRo,0Ht!9re?I/G,B"kArV_ngNr!6^J%(PU/nN.CdFN`YQ3Ru%P'hJ#naj`m=/rCcY&4-=0lHDpe^1>pjn@\.Z"SSmfC6XRI_qGrS!MnhG8<D>[p]L/mT.q%%)A\#2n?'%Sq$?h?Lm,<5d'FZ$^a-.%5`9LqTQ:LVJEu7%]/(:F"2jumX+/D1^YL%seaT=krcSd$[k7Sc/d874ri\2.X#5@,219gtMRBFLF'-RFr6%)OjW'S,mdsK4Cg/I>%[TKD\+0=;,=K65C'RmpV=DGCb;TgB;>V>Q9jV#b,T&R5WVp8`<do62DoT\W;O/]nD+*o/[M`'UC%3$48@jrB2rl.hq-5e7\LEj[n%=9_9K^N&$a'3#dgKYR%1*"i1iQ=ukgAK2<]`c:&=#fSOW4)$V;rE'EIKtjn:kpaJ[IB_lka#&]29DFukd`AE^e9C0s]cDGPCEt4i%#>=%Nn2IdD.nHG4mqB]0Ik6<6P80rtTt33Ir/H3bk\0qb2t\.6p_ulbq!^5E,%1f&/%m%^-oc`?(]9CQU]/ZB@k!j*R26c%ocAHT%rM'$abHbGR6@Q-IN_V8A7u+KdeFY>Q%tA(<_J^D9bmDq>hcL(Q=+)6Z/UN7bNo!%R/N>;k,1qW5-VP[gOF89f9(PfkUKOMhd_'#7%AOU-Ge9<GiDl;0c5(-3ke8s?3K[$md1cNq$C&B.Pc+BP3<+!^abr\S\.H<U#\);\S5HLDq89T;cAXVYm%bN"o8Z\Iq6i&;2Q1n1g%<)]bWro!fE'c$a*%=OH?V]Xu0plk`UTBZf"$'P=d+7JI_r'1.55_"P3mgf8:F@>$Is641$TYL*uoM^0XHq]Y"5Q.+Bd,4YKqPhpS%d;rPSr(ZKLJ'23k5E)d#94Mhf"Fk5R7e4V!pa@,u?`0gsq=M0TVl,M=$M5eHDr^kq\2*hDet>h6XUSD3o[GeimjMSU=:Y@L4T2Fs%^qUhLTAeZ6I`A\g2me59iL3^I>5#KqloDa>p+l=Vs.VRDY9aIf(&Q;D[Fe,u2pME?W+C@goGPE'hjjNVGt0OoBfu)/hgm(ncMS!7%D*34W,u5)4-1JV#nkiW8g+f[&RqJes*<4uYI!6S1O0a27I&\4A8bEPmF^-"Ej@$`Va6>Z<"Y4b$08m;DH0]cZkmKj'YGCui4ro>b%AG,Q/@.O'a^X_s7XNdM#/SjFq=;U-rC.@QrKStM!]sb1uEFlbqaRuf,/:f=+J&1;-1>Blbi>C-]dYc4dGrO7H14n"3BUqU\1KLY'%Q(co%/c9bF/]mZ+\**R:P=?X,:%k<_Bs(`jP$[ak"('qn<#_OIjE>(;Up@Ejf.tfW>Q0e*9$a<*Z)%LL#a=a:X`q%9V]"+_=H[;t%apYZ!$=sVd_OUU<ThNn\%^u-35OIeYO1<cqM>`ujR`D`5J%'V!s)bboJ,aGcSa_;IGbtVA9>WC@GkstY5H(^T?b?:fC=gWRU0TC]%G2,<D$-/<a?<]p0rSlo7%I,_@BmFcR>3H4=E^0rF]_Ru09:t6'TJ,-9-Nu.%rVG7f-k.XV-rJO(nXK%Eqoa?]l7]V*p[A-.rV!,b%e'XYST2r;ecgKY@Ekf27oARk1_s#DaeH"gVMgqf62F"fus5en#rHO7Co$=Z2IerN`q&NFH5lUE@ro.h']qJNjW#+=9(:X#[hT^M^%\[bE4l[G,1al!HDo)%s;mph(;n#gB%fAFLMqJSF+^"^0.5j?O3J1pZ-p#Xlgji,QTBCF_`S.E;@i;<-nqJM(TSR.oDY&aL9Vu/a\%/UtD/l/qQr_c=^r!qQ<CmG5bWjm(B7+7<02gKQaG]tLti.]+da:Tj`&]"E;qF>?/-Y2@J&rTs7V6VZSr]tLq)"$7drk<+__=7=N@%3ICGem/8DWp[6jO/GX#`)IK(ATA@d:4>huV#OiPn=dLBG/2_0L"(<`Phhr9]d)8Du(>$P"J%7^hErk@qX4a-'j)=G8lW*9XJ\S:@%_6\IMB8\_!IocTUWfQF6]n?WDcMCM6RaiggN3^UBj&JpX3`6?n<6+8lSMkTm.TiGb"1#1!;7['.gDi)/B%_\A:c5/^ek.loA/]<m%dp<:8l6F!h97<m;oVngL16'\SS6=m22o2l`a=KT73Ar8IeCIZOjK1!^2:bdY>7gVtO^6V94gla3eCDpR`bB(U"V'!PQ?;1'DHZok%*0RK-4=puD*#oD`#"V+g4@C*`$o8AM%CN0[Zo$XTj-:4oR,a9>cn]DT\."o5O2J0\pgjY?%V->c*dB#F8.Gj3I9<jsjk>t%>NUK:%=>helk+OA@BY9p(K9LG3iDhQm=kn=2Gd>D1R;#3apue=TeRP1cVo&J7;R8#_05b3/0\n<S]S@f;YS`?d,K;/`'^0D<E(=pC#\5W;%&\ipqNN;DE+Xf["O#ocA*?5cno6XoK62Ln_#5&M2k8<]%!>F>,e2pb:!t3PmdaWf#-a6]G=LTMW_#S98?r[Z;D?K30_j[45g+OsA%K-NVe<1"]!L]M%#!,ZJdTbG5<-"%GsL>.mBEdQSNC(jd1NCpP*YVaUa=/l-%:Spf5:8j2?:)bF;U]55<p"_50MMHoSQ8^Jmc*EG6%pZ>r=2dfh,:F$Blg_R;WO,K(cBACn?VrOq_i`aB^S[N^==a>'%BdVh%8@RU8L>?-Xk]EQK9XhSP]1]Ic\aC$qC,<gMg=g:L<b,NI%An5f%fh(d6Ff'schm/cKc90KJa]t+;Q0,,>oFRoO:KhDb$NAU(Mee!NiX)t4aquMr@qW_sRZXB%N6$BgnKuT'k4sfhnhK`Udc#b>%oiIVBKg+pAT;/p-8C8CcfAMBPasa@Ha3iX$,P5"4P.m$]atJ\Hj&fjpV_)0#eR_=;KuQqTeKNa:IbRPeqsF+@]SrlWc[T!ggb^LR%-ZcGU1UW-)7RrQOenpE7cJW?;RTlu#g8jLsf=P'fI"4.EYf6a(LYWn6^q,3_6a^[3XjT#Sc2lGU([Y0P^'COk;@UZPP7LcjSnU>h%`i8lnYn^a6\d>CQ@:ClPI/k6d;HW`T@(+C`O0*r7-SMnaF5.^S2Jm2ErTc0olfQ@!+Z@m'YnJXQp][?#<!7k]*SY$oVeg6t>^:"0%EL[^Rd0PJ,MOrNU;kQpf_k>CHP_ml<e!"Iq>+?Y)[\r*6T=RsJC-_'$J>UgDV^Ei>a!]&o`Q?M!HP0*OM*%sbl=ut7$9$2on]C=k%na^pEI!"-bL[*M6]462(5e(W\37Z4$jiR(<\QgbQ8'?&nQ@A(aG%j4SDLd8fMpoYeicq_5//Ca6FqGL=i>*2>C;";29@hY@l-[W#%n^6o@EHHjlr?HgQN\&8J)X*T@/UQ3C[)_R>?*m+=gP4:gY-kA4T%F%JXM\a3$--Hl(?#P]2cRTu(G&,G&]8"k7sBSmqLq0)XUj98%k:HtT)G$b-C2iH5gp((8[W3(ABc])J$_!"YGso3SZDXAT*.t8t!0sGce]1l!HI-9Wc9El9<L^q=1"'>tOC]&+%FM[,jfT9)UVI=h%Q<T4iJ;bK#OhOP>mt.Lqhqu/_>g7]t^tE:urGMB3G(`WeDp;Nh1X?fX/F-GAb>Lnn2EfSf6nf0Xq\#9UP%J)!3_n[9es2!nYiBIm%"uC$Ej0B67ZLT!cB@NMA"Hd+r*[V>:YsJ3[rLnA!s/Hp#8<b3mqH*!os":<9CoW[nMWHbhXa0-03l9RIa)$$;I]Dt"Ss6_Kn_L+@%p]Z-#p`.7c&LS$cm5Ri]9O=5QS3WT2S4&l:S4FTo:2ht.3nk!RPi`Zm($67&e+d5`VA`F>J=sa<!,6N<0ScP0Ed%XS%k'2Y!.b]Q%JujhkUo@/l"E_'H![s$mD=mHOJ<V[;TUl-l4U!hW-.3"e+4((DJt2qV'dH#)J0Y6=#N?/^UM<S5GG=<T!9H\^JqYge(BRG+,G=H4%T^g&flVEO95sSI9rYo5H#%n*AJd9j,m6Ru\0FM8I(%@2]&FiR*DLe2nS2qM%L[O,:O+?7AJb&m1>+S2?MmF%/VO/<mSL2WW3Bo^Q%:NqOgE/()DY>Cf#]#*i>bYT6kBG"k_kNAX"5;pdtc;*TJc=tc:<5iogH#@;-Nmc.AVO=-'EG8b-XJAFE;c:RPOZCN>Jt=o#*?(SO%#*@*'`t-hs&[\d\=GPp8+J9'D4HKPNp(h8b_gpGJQ=g4SH43]f.4QpJ;h;;`ECpfbY_sVu5lK0\X:OA>X?CFh3U/_bi`VGI]e$N^%Gts7[1d<"LOaihZd1n1(`$7rR]&[kqn`^AEC"%,K:DN-_JuS5pWG0CE=Z[4\NLiPIEjtTMd,p4FIe$Ti>^ALsJ<f.GFlVk""[RS#%fg]e)jL0B%h@;^[P1r0lD8Ws0pr?/fJ;fs/F-1<rs&nP5[\!@sqcUV8S)gbD?XfkPTRI^bFT[Qu\S`.:;U8QOW$XUUM=66-(+MtM%a$j"/`gSJ.Lp2K.,P$gF^5L4ePNef^Z4;L'9ZkJQS8;"s*`>21.5'WmFnK@^0/j#fp73>l_j:+-G"0bO[E1BSEt^#$l-RbuM!'$X%WHs)+s678jTf0Lt(S0`fG[QS3pktckGs"7[XZV5f@CGWWf]n(0`kaX6<@$GCJ!3Qi3c['o]Hja0RqgQ-g:,:a/g]3clVlFK4TD`+%Tt@#*YjSlX0.]2l;.Nkj:5&kcI#bg7eJ"_/KW,!7C0e1r7'*C5B4WTCpFuc2*I*+%<J<!4/sH)sq()rsCA_%:_6*G_2E].l%ks6J%&G1tfKtd6CoV&2:-?o-\Gjm/2Wb1"HIcqpc*]q=K_a)g1YS]37fT(BQYRjcfOe=NEA4&X>'dTV-X0Yr/6T&^(C0Hnq=B8mJ7u?&t%U?OrY(=]^KFBHr>U7,+4C8@l;XK%P#CoPJk.U0kqgJJA?:RYL]d#q":Ooh!#>#OBWOc-5E<9EHqC3-?"TghO5SVqK^+_l2!gQ?Zg%UhFr$nY2=N7l5%FY(t^Pk^-</q,$;`3-#uLLfp\R/Yi;h*/!-EUD=^26IZ16O"G+"->J75(IiNd89e)FUX:2J7/Vl^#a5hNO]b<Q%+ofdk](hpYlN)W=e[&ouL9h;^CgkiYR'eEPCC.SP_RAA,:pl@^fp':,QAR4FOj:/b&[I\`38"nLM'\W'$56(_Z*C5;CAMI8+FCtG%%4a:T>/[?>3*CB#nq=+QftK]e#2?s`_Sns#M]!2/Ll)KNfC2V@YeWQE6G^JZ#$-D-N.7>$D^4[5Uf$TZ8,#`BO4C'3o]dTZHAbep%iMRThG)rtXZ3Bkd'n)R?54DP+[J1a`fK.ObqYjur75Z3DmI559]oTY<FIm5[Hh`n>a@<nuZY%Y]A>hF&!I$rNC0\%684^m'[Wh?q%*dsMJhs/UsHa)V,6ISH3Hus0H4mPVir_Zia\i,WcKblIr,XY,0K9V[`dM>_a6aAkNY_Z84;5?%,AA^qG4HV0>ff#"q,M>8t(6Y[O%P),MO)bS%J,/t6MQUHH4EX]CDLs;a'!CL&0E'gE80qOL&KFB8>66RQ\R8M%eU8-OF`LrRHBM]kef>lUOqW=ko^n.s/7B:4NWhSi6%cDL8b<@]\-1i$)1lrol0>=5j$_RbH4_b'Kdp$Gt3$Wks"<Ecq*44ad"DoL4kXZ>(+UUJ*0QI1P"PrS0M:44CQ?)P8DMa!R_I,o@9%%;s_.\,2d^iNjU8Op]bN.sP/.gD!eP<3`G//m(>@cr\5u&I)N`N"rXun;WY1?nl%R&8,p)oIdEg]VC\lbo14X&-o^Xea068R^$l;%F&WT.^e5Jgl09PuX`T2^NptI3*jr@9fa^W03,<9q!q*"%8Qk?r&#s/)kZSM:gCJUf>P3LUTs):tG(`bS.r5Ng2'F6gEAf84VWPV[%HA(s6rQrajQA0-I*;2b`I6(nSW;7)_]bh[",B=l+$+itGFuP%#LSJjf?1i2!RDkTqZe3Y@ZPX+X8sm;0IQ0oTSIH,n'?%IbX=>o.%E8)X*`/nDD$Yib%gKgRB2G7TAcGk]`oI^]f>/P?rnr2f:^*bj1-SDs4I8CcP$:7dPQCW)E0mZ]d3?giBX#maVoGBNH_iS6JV%b/A%2+?Q6HJX0+Q^cf7P%'HZo1F$ZATr/XF3Rqlaqqn6gIcKS05R0r<K2R\kQ6M[?+8krfBjQej%Pqf^]\7<8FI%rkWKGMRW3DLP_2Ps%4)^R-1Yo6&D\5LO;OT(c9'eP@>'ipd#$o5_amU'PAJb+(hla0/Y#]IQ5F7E,!T<&:S=H48o5er$:<q2-q)LH"-g0[Rr1':LPOij9%ISS27an[qW5:>XWjSYO<T9Jm<&0(QFY/U?XE,pD&cHjW.3B9;OkNCq(S=H4$+QoZNKC2M8QUd=9BRC`;j-(`40;Fn.Jhi5+D0"V2%Pg.Qq2FS4K)\Sbn8T,Ffo'RN>SjW&=*Mn.=jR(-)dj-0,M-d'6*)_Y,=E5H?E<I>\6tm%S<@QVWa=lam8`rSB6'8!HMMge@G.3M"%[Rki#Uq[A/`i^B0i&9h=CK_^YE)DIm#.1lL#I?AQEOL3P].3G48k8X?oN@WBlLBYYLX2i!O$B-uHoAYf&#W&m^5Rdm1($@j;u5bL%:LQ1/9W\YT4Xn`9,Hj5+!ARe&9.Nr]FHnFaV%Ki:apmZuV.'ut.Z%eRh?sLRiXC?S@m(DjlTo^:=l33A4T"@5FP_F`]VDQU+CCtp%EW%]_&!cu^g1Z4TUZp.F20V?X]i+/91=Hc%2@I^gE"p*Lhg[%S9QKH#)nbu6cMJbTrL-6jlFGjYZG[1Je2O7]WHstA2WfnUB0BBk%R4\[HqPqaW_bZbnU\$+cZV8\bnXR[!1&n!oX7^c?ZX)"GD9,sgIELV^W.@neS=LmgQZ]s2;<Om@PI#@NAo4;bD]U8hUIiaT?_iF6%b!hS#m\Z0^.]%g`-%tQ\KBa_7,(6s>9Ed:#&QFksWltNEFjiTm>52r-s5;m<bs:.^[H6;+!!rh/%Ctf6,JaR@W&At6f+DF1.R[gG%L9R?fJ$Bk3"q[No@75Y[O38#6Fn&qs;nQ>s^(&Z8>o^C"S7:#L2qLM(l#<HOYa9Doi+sP"C`mp>4Op=eZ],!!_a.smJW1%+)\,=V%$qRG19Q*l#X5U]mP4D6+*0s.XD9Zdl$8KT%Gme+d(QQL7qFJ`J%SJ^gRu2;]nDSQ'85Ico9#N<HEY':9ndf>mdNp/eY0uD^5YJ*e%0qk-8,DaoGgoL=4VWS-JhLVq\\OZB0N1;<rKEWLKjGP]9F6KJ]Dj0+b9HqVn8p2h1H&5H7`o0k+<*O>dpdMatj>a`k,kA,s2=HNZ%Dp?Y!jcuP@M:4Gu7DiX/I7jH1an[!sc\FN,Uu,0<^e5<3q0FCIR>`pF:]*A2*HC^U?q,X1N-[MHXWM=(<kJ#YUM,Cb`"Gf)+)<5E%irE2E"5mTLBfCEYOhq?!"q7=^?e#orBss<SHRW/mCDPWnj:[8E`R[u:(QQ(IE?QBG"JepV((hu'8b$D[HnS/Of8HT7+l3/`[XZ$b%-J])omY8im_jH,7534S<dlfE"7_"C3!QR<75`^e>rB8[j-!/FhWRW^4r0g[!]dT9\f`F-WBG/hb6St[GH.,-)0e"<*[^9*';N$LO%S?4uC2a`N%M4+?Qg-i=Ip65.;;X*5/QQB2NopT(`agJJ&\lmkrMIjPmjSH-j-FMBYRoS&.:%Dkie@oJI2+MaWbHC3aPn'!7fTl1l%k(ZcAlT$dkMb_rK0<$rn2_fE%*[AgV*3Q]eVh<^kq&g0ujbRs!$(ZHVh5&D80Vl?TI]TT%4`8Pp]WU0$CV<!uX"B4tT^)DN!p#4p%+P.h24?Anp#)dKO0c=n%BY%e5?F(RubAl'jC!5XK0d'+GPf,pX.l,kAac]?+jJ-tOI51FkFgIV%k1/KD1rCMTolpkhY^rZt]S0tM%5Z9i&68ORt<@:Xf=t2K/@lmI!E9!W,blNJ37#2B,dA'fG`INbSN`00%^m-.$/;t0V5.2oVKbV#).D.?r0Kg,aG!(.<g*bR*J*_R"%!ss4!_G(OZ\J4TOCZci,kZQ8RfS>1PG3DT5>K#0^f-'Qs?aa9+M$MHJqan')i)gWJ*?KkcTKs\%c!_q+K>Q!%TB_H#25]"7EQY.'%P8.-l:\$VVK?*#DC(PbJni:!*WmV>2p^Golf$F6`:F.*ikrlJ">j(Xr'@P@X;fSb#4H&h_q)M3r8[^_qeqZ:hkFr-Sl5:bVAdG#.%[B@+7OM]!Q<O2?VOTFci6]GY8i$1<9mk?2/0^7A";Jj(^,bK4DJ?Ga(?W)Q"F`6L5ib0dePP$O^.4jlBgH#,>Qa"HBl@gnbc]pY,%FWY)`<T`joJGV%0p;h)5["GF82t)A\=&gKRD>.\dI]_20le5qkgo:7#RW`DqfqrMZR;dS0DV1L[g7E#"(4/u'VWmHkEaQ!:b,P`I%/GJ5ZPsXg6EF:^pQY/79GhLc,c.Y<Ih'h:^%6:WrX0_u<aOiWfHUtr4icUOIlRZ>"Cn6hV'!#06As&MbC)!R;QmP[6A!@MHd3qFR%/&GqTae'KA)EbqBp[BTOa9Fm+S``q(;hKkWT^%7sI^8/2Cp4_MkrGmhIAiDDs%cI4X+Qrl482"dMHGO;C.1dK(L)8+C?+#N&LX3R%K-%[`CY+FcB;MO3bnP:Zn6ns$90[meJS:<DN66*%b#"nqQL"=G;/qn;M24'F=&s+AQ2S58IR%I/R'I!nHoP/A3%F3enCSH/e.6$R%8#8?+R7`Ceb@+C'7X#`maY0Dn]CT=PF;`&$:2W(qjdc0B<(G]28".>/aJA!TcVh7BE`4%hRk>Tf9Jg\1EHi5Y^#aWaGppCLTo'VB%I*c''8UJ@spqh3VM\F_<9!q)fgo=E3X4FseX`(TgcCbtL>?;d4=5.u;g?(MDh8#N_[8;7F"s7XE(pmn8[9mf/KiB;`,4]Q+lg#H\%Wf=HM@2ik:DR*m?XEs$SXqddK8a0DW9$:kUW@Y)9"))*G/^0l9)b[WG'Xj<bN@epc=ZrOY(gb;U,,WbjEE(q#3X/L$X?cN=0r:SN%D^m'>$l`fYA22=edqk]!B%*pAZo$<pYpN`V?*2q(gn`/6CdgKtUZ=r3f54"!#C#4T(9BF\]oE#ED5PFTZbmjV,`FNS<Y,$<ROqBq%Ibd+h%<rC)1/I0?c',@F`1Og/f(6^>cQ=o=<eZ75]^L6QFr#Hg-pR>E"_aX3U'/mT!n\CqYW3&@Os'IN!6Pk'`C;*6;9)5,3W>V@%rW$Sd5Ip[=foMa(F<UB")Mt%[K>2aWRr(qSJ))Kq8[`CuZE6^<](sE25q9/)_35du#g]\8Ih&+,(fG`?*o<h"bn:sjD/;5:&P73>%^aY7j3+F^Q:(9r-mbHaW)_j8ekm#g6;N,o36B:1R*&_2T<7;/YhboP2D2g8r3]!t!Bm2D!8hCD(E]"m$8nYcEfgnWbpaG1d?nN"M%U!CA3':+:%qa'j!_W^m;>cWoMk1gE?X`c_e9`/CI7"4k5=*]7q+,nOSe/XAgGe?PcM62/+7B[a#Q(]l&+dK&eTp##PpG9,H9[Jkb%k+KOfpCIfEX;X35clF#HN9FN4clJXXl_6@l_l?miGd>D1R6Nd"s8@d_RJs[.em("G;V$tt3@%sN_=l/r_aQ&n\O;IA8Q:YC^33e7%BJ5?WR7+Bgjd)4f#OasXMMk;cD7BsBKAj87[G2h4\0Vfdl/)tKD7q!d;7&(+3;W)%>MnhrTQjT6m]'ojQA'Fo2jXb;LG<Z0GYY69%FH>O>Yb+\@StpFMh,C4sF-e9@#3f/PEE^fTI-.Cjp!b;=lf>WEYcH"_HY@2qJQZ^<FATS-4)'/Dc4hi;'rQCT8L5RJkGk&S1ga7W%LWACL9.-o`VTeHgh3'=l&Onc9d_3[D:?'=>Ltaa28%fe^l<QClGt'^<8">^&R?)pjRai`[ToXQT7hU%]f-St)F*&/m]M//OI4=EA%,i)>sZ=q"o1M61n0'MT+Url#6qNhb)$Jf=Zgi%Cho;\Dh&DcADXON+;\'5l;2jZtKi+FW4R_J:LmoGFSmdW<e](%hY+K-5]QU%j^%RVStrbk+\[mSo,*Cs6dpMrT,sF*h*:Q#UAIKTR!YlWT=C@P9ilTJNQp.aZKBZ[H_>C^%sR`<R/ETZ=_XB@F#UB1uZnR99cp6VAVO%A&h?G<8n^IQBF^Jome3VZFT@BjZcA.(d+^3\rdd(N,1[2^4'Nr</pQ,j.XB<a9UU2B\aB+I48D9WlGZ840I.:RTYiibKFJ&/s;F4%Y2p)Gm6L4E3J0M(_PlaNgMo\(8),AfDj,oGKIh!s>)tK[D_`C&B^b?1d=Iq(qbs6;2u.k[G^_,cGV7Hf6RNmMVqdBap\s4Rp"j,>%C+W&k9F9K;0@ERrd_CZq:Gu:fgPANVfu5-qL=UE(jV[^N>]Z1#7/<otFqp;*78K61kD?OnpB%OjV9-3&F_Bp6PAR0']%V+pAlI.=%Hr3i+bmpBBmO&&bdsqk!Wp(Usm2_h$MT!SsaCgd$Gc*p9e_%drft"QY,*drT9!.n5W^6[&##@UAAdl9bFS0$dh*<I-iUFFKa06Hf%YhPPbnDOp?17qMb&fA3R5eD#jO7?h;O[8*`I=th\HTU'he9rCPbi]QjZt]RY2nI6l-2a5/<r:k*(%N)rT.E?=C?l_f.af7OolJr@%1u(=J]0i.aN^,$nMS'`SOnOn0G[0d"PP#,9M?.h17sDO7GIg:g\jptU7sDO7GIg:g\jptU7sDO7GFT[e\jps7m:Y@Fma6GFekGi%%IKEK=ma7Tnd@K^QSaOmrma6H+%;s_.\%D;siNjU8:A<sIpZPBHkk6S;dlk:k4hB**]$igRchAJd4*XPONRn</oZ%n5+.JlS*g*IE%KCf;/@Gf'l="".?X9LHY$t]5`;\Z$d!\>,Lj8bVSJ,^^eI)Q%5`VAS"Lq:($BN*d1i[L*SE&%f@U1>FG:8dY/r(]YRXtWh26WMGt%>m@[$(@$@/rJ_Ub<GMndO3;<KGC,'MGC0_[)#rE(GMQH6W+oj.9,EeHU0&7\W_L$`2W.>*/<Nk%F:b>gJN<NaT-!-r+V)OTB$=+$%h5gn0RrP@pMdpb%>'J$/_44e\*qE>IEDE":`.J;lHT79%Vg@8.f.NY:&7dS3<27lIFV,go-g;0T7YPT:L^YNF-3E1aF(GpiWkt=7%:-Q6;+HERHBsU'TWlXhWbPsYr>he5QfgDp.9q(Lf2Lu,2-c:,qZ,Yu.j)DEoLj1&.j.R<Mc8Cj@UC2G=Kq#sfX7\X,4fN5u"f!Il%TjAY51m?tff.T'$?%XEC,i>DJrd7+#/sdu)iZ;2#j.rEc'*&$g;(<Ir'9]W/g*$?qb<A9uCI%6c2FotYS"uW"jj>3aWZICMeo.;+%SEm+HZWK(ceUsB-\M!PsKH@lt[n`qh\Yjedd/"KG%pUefXa0$'E]dY`g*?n4Ld9K[$#&+jjD0?C[8le^F1?@tVh7+^RbT\;GD8tm%)N]=B[hom$:D\A47-85Yo'%pD&qe-PdM%&?-r^Wp'?<a9)^M+#0k`OdbeqP&qrlHoPc?,0S.8(SrEPtC`5lU(8]oGb./X'3XJ8.6%%+RfZG_h<;d$uRdS\dE#,k8?^D-IB;/)kntGmeQS+i'kkTEiE)C6PGL6GOHbco`ktD"_ZmM5;+O%e7>+Lik_S[kk&0G3EFc+7D^-%IAQdsKK!E>jrCi6;62Z&\h0^'-W5d5P>M+kfi?VbU`J`ZOHe*iB6KB$;YcB;PhJDpW?&Ru1gauYFLc9Ig^iLXal`I6MOa'?Xud?+%I6)W>56l'*5$+irq%7d0e[V$K4<b>R=AKjq2dQ/H5PA")L+`aK!h3f@YW6eUlA3;!Kro5HM7SU:eBOp"GW4[%3bC'`<,3?)4ighg%;DXX2SZ*K.@cH20EGGBfo`Op+^.EidUMB1<BD3USG3pKXr`*@>7(-*8L/I^mSR[lafmMZJK[+u9WQ(AUI)B8A/UgkJLK1*JM]>sn%jI\=n8"F:tr`&.":5!"".2Y,,gik8db!V?6_K'M(R5e.bQFiB8[k7;F+UG-KF-(Up;K#k)][#&^ANil4S/8`N`.lUBG#l*;/8fr?%AKdDZF52%9qG3A?F=t+A'#Co22u+^!(&;T&UoRq2W05XcP]u1:alFJIUaM7GK^^HOV]RZY530s:KlPC;;Q=Dn`42;LGUR:rL0G1h%`#UaKqp%Da4iKRl.HPbQpo9SS46QV2k5`iSidll+KNIEUK/Yl.(V2QF(-Q&!h#.q$[4TOD7.BJLo$rMV2t)iqFaML,qH:01T5"A9%.AuL1-f'>O#$@dN!?D*#%UCKs%7I*Z#WX-jR?al2OFE.6"AUp-V,!pDjP5iM8@T?\+Yc4p"[m>q*&'Z%',?9)28&HQ$4888-Ra@/%JqGI6#SDF$IFsTUK3^Y62XF-cq5[$CL5j+2i6F*jZQ%i%;XEdj02EKTH'XlH)SE8ZNjLQsHI;iNTi>kX@G9EI<'&GH&#!$O$C,ZW%4d>B;3/B')Hjf<.mtCB$[D#!5%ZRYjKloG^:4Cd9e3G#=QtXWYc7$,/49g!L_is>IT-Jeg^@\!<\Nbi;:S:>u&q,NMY$t?d4ehr)%$q[8I$&>Y3';LBE>t=P9ne3=,lA-`&hRf!_7CWfs70t=aSk^n93p"TEr&NiM%/MTo^)n<B+2bkFD_W=@!:PVl<s.FZ_nl7"#b:Ci%S(pQqTrq5)8O"8aq<+Mns&9N#kSqbE6NbN%??_&e>O^Os&HRq"hR8`2Y:AmAlRDY@_I-T8X#>if<?Vlbe'tr_\B,YSoPgqq./FCP%kkV9XVk_Ef3pS=lTBRV,UU[(tJQk)-7_-Cf[p-OO/mN1C<6p08TWKF3l7nRgiqk(00`rAK<<8l%\nc'@>$W*'0"!mc2A+`+D$$B,%cZ,jrP\c(54eY(Hr)H8Dca&"_ndG!%HQ1(]Mit+M\!XAT6UJ/$6`,`rP#OR9<.j,Jj.C'?X2VkA_i_/ugNcKUdClH)O\NkV>]oWo%o[8,/IuZV:ZL]X.WT&CtSYtj<;*l&medf^GmAI@mO%GBq7+\IEP.Ho+Zu+DqTCPT$'%3eKm#B$]>,r*pYWLD\Rlpr!6IAitQ8>&H%OGr^?fkc1rW:CkMh<I-kGl[@1gRINtD_J9^0!9\QnY.-sjVQIVn*q>khgBosGIP/s#"l:N[lXNmBG*[_9(a>EoST\4ZP;u('JPlb%nM?57a0g[7h+-V&R/Qs]\+o.dJWKg?^gC_dp<Dqgs/Va)M=A:[!<;`G]IH2%m-H%6qX<\N\amr:p(2<dhtA'kR/IH.p$>cTh,l/*%<.;/SCR%\RU3=5Ge<ZiE\N!`)b$`=^;pToLrV0eHJ,@!c^XuKBcCJ`THp(Bkq#1HpF+2D7/1'r'.Y%j;fsN;QbaUUJ"&'C9\krS6%1Uh5e8e>T<"na"hoXY.A2ae&PbG!N3n>G6A`,6JN=1+'Jd.62RMI):&/$*Vs,&H!;H.[<pl>e!QC[gJ<o$q=KdM9WXi7@$aWA*M'%k98eCd%@jGU"c^Mb7:I3^uY92g1#uokquT+/`ds\KYD?e;/@^/WG\D<S-\:EKZ?ZhMI=e5RM@b;-K7Z&"cRY,5W\IXqH;kA;1*X<%07X45K,$&)::b$IqR=N*"H@7cl=>B9Xu<B:qV)8OLhPjh-46+_.TUDOfn@"*3'N!J30r-h]2cnV!..=Jl!aJ>n=GFYmlMQ,R_X_g%a).RZ>j9-3=(5I9fC?n_Til<g'qgN8pgud_cua7G0i31AeUP1\?Nn'8SFZlB37WbXT/pG9:Xg.e"!h_(kdjEQjrFiaH!<5=1[d;M%pbpc?H/bsp1`TpbbZp.J3)lJp+SWDFD:@m##=b8F<R(AbN*@C6d_<&td_3ql^b4>dBNrsA&pZ]ZgpRIj-@fB:I"AQXo>"QXD@5TK%KU(%+Ahjjo/mtio5-gm)FW;M?M$dB!RAk5?%1Z\7IZ@kC%;2?'1;n2m6;/TI2&QUVM![(.1MV2hF=At*KJS,Hi!]+(-uTua#4OlS%W'hGiUiPIL-<OZ\9<IHOR_6)@#7EPf]*W&:PU\S"[g*q4%;cDf<2U7`Mj0c7HV\8Uf4[ODU5FcRVn>C<1PB:+>BOW*$k^T)@QHpI%j(RG;6ACj5?nh9nQt[QiC$^(=],8)miO2#$!hkN1?Hl.`#d"H2")H,nnL]f%B,Iq=fX.o_/ndGu#OURmSUO.[a%1<e%'BM/$/C2b%IFpUGo^M*^[=`_68^]q-7j8k9r8&2OXRiG8q'cdr\3\c?n?qti*g85Pp,9Q%-O.cDPrkes2/D81%"YiY3cD&E-].&/<G`B(U:<;g%)j%X'd+a^L(DA^J["eg>;;uI_JO6g/+Efb4-+W6W"pL4i]EoSj)K\upL7%$[`n>:6K*;F^\>k:/7>I`4?pf==^JXk06RbE>jKLf"%R]t0Q5Vaf'!o-f+k9kDOk4JK#8<NDDONnaO2ahhm$5eXuBZqmHkn$PR^)Uf^hXe5AKT$crf5K;8nL/0DTPkUTpE/6`43:*q_O"7c%4+_s3s0]FnVdn[&[VnS"`X<6O!:UH=QZ;LDi8keW!"K?W*Od?iAIf3UTN)ZAAKr/0WKHN!^$j;ZNWLTVC+%X43BE=/,8ETZn]UbZ%$2k.b.!SV`PmE-+Ah[i[)<s0>gtVT-RRmKDiYSb74gtpZ)G3H&8%-OT7U?BAVKU_F.L#oP?1Q`D!',\gjr9pRiDZ(cD*59-g7K^"%[*/sPl9'2j"`*oA[(/_O0m\\m26_*&)X"YBY<ea&TLDk4J,qRmOrH*pn2ME1XSaj&8CnEb#CE\NXu3H9N=7k^mRk9.?".c/N<%?$%?j-f\ARJ[dkkC7@!umOdDlhu^Gp9r/fR#](9C$jcg)k;G0SX3Kh+kt7!i(g.Q:NrU_ljGh?479AL=jR9?(;iS4Y^3GU%^9$36biq%iEl('1s1O-6pk7'+ON'4hZ]r#JW]+LYdV?GBc?d?9*.1bV6#rUeST2se^>q1WUnbm#-grs=g+b/H6+%XE8\Lke5;oC#)2!h$Wrlf%b'NHO7nVK6\ri=9\UJYjdA0n!`j.;I[GZIK\Uar:Ab%0Y)q9C)4s==@8hmO[dXbS)!V.q<<R^GlCk,X;Z9LZKgB1IXCD"e@[)LE@%cjF6Vk"4;0^pWM3OJ<aIX+QVAXh]mqH/lb"Z!?2%)c4e=<69IOJAuAf[-Te#gWNae"Q,23qpW!5CiJEf8d&]E!@jESBS?Gt=uJ@a%X:%@X>SD<$!26>"b;)lr<[HIP#UBji8nS_BLo0.b.W3*+S!n<-.0`)RW'F7mNL+h]gmV9@L+sWO"c62b7bES-(tmmaXTL>fnSTkK%>=U>&J/g?'dCb3!41F&PksA-4%9Q`\>1uCq">=YeI?#7h0H\S26.m:Zp8q#>ogTLdoe,l;gqtc<.Q9um>F9sa1[>?/Mk*\+9`qf)%!#rsogK;6D,MU+Lg'PQ(j@(t(a@(itZAHACh$DPRFeY`o&Qf]);-3t1"[@ML&h.`,Hj?IO9JVU5M:3?387i,s#_?]D&qdoVpOD^B%23DQc`11$)0gH>,&nYuk"Gk$Zidp_CCot;Y(ut_'4$\dcUIEeF'BTPLRn&4k[$-"r8C9gIiYVq<dcLrq:^=!243#HE%Z^=="ZgHe%Dp):9a<DWiCB-5Bi3Y<a$If?9T!sOp)Nmf7Sm"[<Mq\E/ea^GBE6!-m`Vh0sTI,!O!kbUOMR!6SJ;),P4%*6c)aJ?_U]G"(Z"'H<%37,mZFJ*L>IH"Lf$:L\;>ASVY.ST"mK034I*5*R&KQT,Yl[WG#:C]S1/'+V'mtB%sGC%+?W,;qK?7]m)M;4kC&1=7SCO"*.S%'B#%#Qt4k1S]]]L,cY-?'<utS=[2g>D)ca&ta%$Ao?o_Pjuq5lp)Lak;E!+5s;6/j?%$-C*HRYg+p\^<;_3@Ta6V>BBbXn@M6LH$$'/.%=VA2/Of^8jN.;t:/C/-gS"WjG,>1@Wi!bog=el5*$B!S\k^\d%f59Fm>iSoh0mIt&!I^F?-D=]N%S!<bX(^-P0^/:<j=$SR"jBQ4%S=r568M,1f&;->)5bj28o(6g9'aSAg("HW)!+S'8I[f8.UsLs+XH"Y(e'`JoJ0CdA=o#$k_A_FD#dd3kCT+ABWY2Xq2Hsl<djg[*%UIpej&Z"ju9^3G@$'cFu5qkURX4$@2rW$+-$@ojTC>'dL]HM2OJIPO70$RsC&XaT6;I!,B!M.LlU)JKK!Ck&W%qre_MH12gK)EFU%m(CZ&MBT>.N[10GJN$J+8-C>=Y]IBX<$e'_U1omt!e,GY!<.sA@VVQ5"hH`<SW94PN8./rq-[mfUBk:^*!2!)d'+@@;]kT(_R-Vs%LITH&2^2!eUG`\dgNZ__U]tqh!!B2S#],#.M*16AjVZWr=YGk`R`I*k=X>!kUWmC=NETD)[iA9;8>=OeM/mC+>cePof6Y\QI4_fb%U,E+5CdYCp9_t3H8;t2de[5h-36c!_[^FTgNl?.g$sQr0YYj"hl^!j.<lKF'5j]3l"I:5V=:*fBE@h<0d`WUDO]YL^-0hY_!3WT6%bM"ieI[uiU84D%.UU=K?W<5(e&`_q`KE8k_@#OVU\"H&CcnnWB:nMr5%?cDOdP%+]!idC7+)NJ5"L5^=<_?!_VEdG7+l;h3k7W?+%1+*.h6ML&.-O.I$]qB/)3$JPU$=\^X`7q^HZ&fl3E<Uk.P[g*uc,piQ`>FbEL-3"ag=/@j!Qc-W7Js")Ydplt/<I-2NnhJY(ua<%%P<+`>g;s1PbL1YDZd#dYg;PI<KOd6M%Eg"K[D`5*505(Q(<..nmn3k#<L90TJLH0X)B0bL"'q'(1bs8i2r\O%`&L9ic3P2#eoX8-%o_/WU#+ASiS#JCT<e+RL<(T@&M?@Q`e,TiMM0,6?7Sm&OH*V4V.P!/O2`fq1#^"S-KPVo"!\dhtX;<#o_241@H%Y80(36Jk!@WP`%@0Z^"nJ6Zu3lr;95%KUlXYra//I2k+0mk*hN!@[kU?!oI6t.$jeise9m2Q::m[+cJ'+3!#$KEHG3,Mn68O())P1b[$1JhfkZ'orD%aNVjg:hn=GQ:+B!e]G72%$TZV:-129I$XW"'eDW!.[Mti19[i^F.J\L-8bAJ<f3^-)$W-g3i+D9nd%uah,rC>#ZN"L`#3)n8-k,I%Quj=DpsO^Q0Ec^/lDDslaTf*q'kACtjE<T;;,E[;S-sGmUqPa"OBKBLa]O+GQ.V$,*+ZW!;!;&/Mit"%A0dHE]J%tFm;A#dOnpHV%!]6Cgg40C,>W+="AH6gHl\0aE[1[%.)^AAKZX0-/_Unj2%-_l^_]>_A"t*TQWYeeGg,9(FJ^3k;NQ2/4ae\3H^r@+r;HZo.!=6!F%/L3^c2G*&2>LC=tm*`hlfr%R@I9V'';7))MH^lm[#L,_$K49qh5F!d'!!]Q3^g7E[!0.7.!Y]8Q)!i5>Ne<]>MX"l<UK.D#.$eDo%6_I.C=lb;?Cm-[p_Zm&j)TqnE4p^\#Mo)3%MmNmR'Poli9(is`/(<(MAJoS<UoC<^P!,XRb6?lG&N/q_bqs-L#gT_sPH5>rN])]P%GmU!7ab>0!U/EPtP]h#QoU,2t08@^Eiau<!0jc62*O'H@_Kn8Ye:83B$\E4nS:-k8g0,=]1-?(L\_j]9@?Us;-*Sm#-O(E1"pVNa%hfquZ@C<!FECD.bBN>g"PJljr*h_ESDcJmre!IDUs*Np-F=Nke^Zi6B[s8l:']Z<.9ul?Tg>V7(B'6\:1Jj8LOEQP"lPJEOn7R:@%Aamkq3!p'PZH'85%H-$_oe,[PfRuS+""hD)H>@!a&8VXg0^8``(eCD1!a?!^me.#\#*R4;XD&C$-qJRc`1'p:k`DqV^-3_We3QRg%\TDU$pC"q2-pG[XGa-tpW/48I=fl2WTJjTo<`IMGkdVkA`?5BegI=b;D(LaMDAX/Li?CtG`+X-A+R@T`T<K8bJ?`cHN'PW$#)X'`%8'0PR^^XZf%<iS+?_O;ah$Xh)1HPTD:!h\!.(DcT:eEbVKTOqWYa,TR\l/`$/X1d1Z@RSBg:7Hi;c3_KVZjMK(=;I("t^8e!Q#\M%#=ME5eEU4pU86&L4:0C?*.a4s;[79UV1BJ^8.E?UVjTh6)-tKDj2fLOfJYTs=PMIfj65CJNgDjhhPa][j3VKd;8OVe["f;+,Kq"W%)V#ps7e\f:%*>1C1h8hD-#^=q('uYsfuP)*4q5:ESjQ.j0@X&kI'0*'M^9m*U2,`c<`+:,-sETG.TllmS9P)ZrMBeG5Ud/(aXRAH%[Uijr4qS&-]Q'P+)HMJ0^nABJ"KGJ71?cL#r49=.9gnQrUZL/u2+qOC>.U\=k"+"Z:eSDOJPs*3mDgV.97P&!)1g)UdTGt,e?1U5%T:N$Pe8E'0#pLE-85I$78"_3'J-nQ/I][1J2mSMFmCqs6K;2j$:Ds69PJEJT1BZ$l73*Lc7psu'gg-t41ggsI7`uYMS]NBrGeB";%l6$Jn'Q)Y1d,*DUOHE"*IW66WFhA9F+d%e2g\<`7(kQI;R;jM?$k+nE`YAq"/P?i_SHt.$L0u`t+9M(&.=P2GHQU'hA/Q?mC[d]%%asc'M5_!L$9PH>8;$3,q86[GQq#_c%#7s!?@c(:^3I/'0!BfVd4^]Ug5U2)g1%HfZj<!5B#H<7kRmdco:_Wt.]CoPX2?Af"/Rm0C%Yg^9Q-3+=X.FU^j!F\I@Zm`a7!(U"d<nea.KhaBp6m+r5$Ha<)A-Pjk2I=N=EWa[W`,-Ee;ZHs:ea^;l:lYg'WY+6G`b&r8b,YrU%9*A\Q/.KBB=Jjo2.5`i/6$BO\'%<MJOS0(24og2]h\LX7"p0'aH#&MoK"skL90Cnt+0d@LVib7lF1XsC9L@Ca!KF"YAQ4f?`-:I7%7!EO7l>$_cmW'CTEmVfTT,NMO,!:U7?3VTOdj.566lttEHQb%.1C?Cp7S<tqBHmODg$;A+NeS*NO@!Y(?l3i0oMi8ue)&+9/l]-Y%48b!T5aS@L6>]mA<:P*EQ6@uU%FQuTo-+g59'uI#Ype9FfWGQ*)_f%Y9bNbuGbia9fm46kdaU0si.LkFmF;3d(akO2"&H%rL_H5G%[(QJ[I=&W:c>ZqTN0C4a_%.JuZn*iL1/J'<3DJLJ\A)B+(qmotG!%ODA7[%c,e!g$,eE#Qe#%:C2[cC4XW<b9:=,S[W"B<@FqDCA%1oZ&)Ol_THcpD[2e?j?4Ka=Pk+m?_j"_fN*@[S,&UjcqCc4Epm7Wi15H#5*16.n3>86JXJ+:Zg%oSNH)2F7s7Tm1Zn]ju*JQ-\G,%_LQkh8f*[^5h3r=a&$&Vekr)?GA3_O(XW4h+Z"ap15[c^6>@W4&^Vf/Ck7<E$oWr-+@sq_(cKH#&S(n.ci_&m&5>Z&URZG,Q6Fm'%A1GaldQhU-DSUEubgdOZ*k<0h)]8]H^0'fSk"mZ3gGfE<L?[,k2MPjA[ks9T:UW'*Ptq2\c$krp+[cul">[02Z6E3,8JtQcnH,Cf%V$<[/T.uHWE(dJ$e6A4C&Z?,)e4SeGc%693(Tf4s"JLWU`J=s)_V.Ql[.gO#UIFG\Gn`tP,ZJ8V[!WM5\&QM5MK#;0j@Xa!;\(Pe%+#gt:*k'cP!?)Qc29OO2)i0+I+Bm'H=Q:[87(nNlOU"PUQAH-(8[rH/q3Hqbj12,3^hD%=@,k1.Asc]6-)XK@8$=Xk92Q(A5uPU3%=Vj!dYU@>W-8jP6b)"-XYE/5>1t@-_T2B.KVqO^L1hc>pq<\b5W6&^mUF%!)49?Hfi[.MtlkNCNDYGmS!]Rp331<gKA]2s^l\]'d%*&jP^=@"hVXXK9U',sL+Q@pKX@C+._#Ss/.(4+g`&6RAjKPmnd%;:p0E<nid;aIXRm9scCq[>5<?d8]RD;$d;(.BWLS%OprB]tTa%64ML$TOcda&iI\.e3KKkgfDX'fL09B"SRepL).2/$qBG;p4/]Y"?'sA3M%1#TaA9_aFHNodV+>;+W.W[#`^0sJDOi/XJLK\k9;6M%"'2e'Lu(N.%)u6R.Z1B?pnTK[71mtp(LUg4)`FZ41dVR)Ln'rb;/+-O;AoOt<I1=K[n]Uc`NI*?d:=WE0^McR'rDV)((no/Tj7,`%4on#$(o)_FF9K3Z(.%I3oB6B0WAajQNK%(@g3=U\6YIS?FTb*b3tk3*=Yp^`8J<#+)M!5`%1m/26&^i6ZKTX^@#S^>I"LXi7up1+%Uhi/!cNK[!"XAAqYWAOWIFkK0P9NTU"A4Ean)@ZIShB(l-(Bu^>p(:,;ONj[Nd%ocX-+72eq1/qN2[$WKTjN`X\$c,QTMMV6;I/p%2*s?u4A*CM#XsXV]41rOVRVtu!uAt]&MiV(</$I.8iCNuPmD9VE*FN8[QucR&<>:0Msf+`4-_KLMkjP'aJ*g@>BQN-X#tC%fE774%A"[B#JP&I/V?guQ?(Ef*XG.rR;0mlg7d0s9fFanidT^Q$6"IQZ6h$'HFXJp\3[]Os%:\/u!lgTu,+^O;&qF/%))t_M!]bjJS[KPU%%g3e&4^_3AeYF]O)JGTYLsC?n):FD/$uV9i)=8=FoYCh#@p;(t>?UNc@p>l40A',XF1$`<RUoH]jXcjWU^($-Z=nY^&p5FJ$u62n%,s)Wf0%%e0eI!7V$\e_JUto?[BpZ(bP+Pdd#4,:.`cc68dI&XsTQV^MB%^*""89P[&P%G=Nj6\\U7IZX@t/'1@MTaI6/kt#Q*]+q%Zlr/HNsUWRZE(BTjLlf9=t<&gO[Z2LMt\756A/Crjg7U\NRur`-nYP&E17+K*ai+A`Zu0tp7>i.&>ioMN*eqAi/K@Rqik<%X\8a'%!XL(95R;%<5h0]^6a;3(3'`tEeHiG*Q9"9p\.ER!RBA*(4#Y8I_59u5T5IZ/Y7_MB0I6cI/f]-]^Ia@Ufd*#P%!IH6ipf<J'([<<%8`7g6\[.;kB6U9#M;^_H:gOpLfHm3+Z#*DhG6DI2@$Kj&BKb])+UFgQ"#-2H$t:I_j#METDNRL&lnWmr/IsC8&kbp:ZPdW.9.\!7%7W_ZkpqgEIY7Y?EfcY/j"I%>C6Ree8An6O].9]=o\E)qX&\;eGe7&iHfHMP[,bT(=[ZSKo!"7`u$^>MI@+T#Pf!^8>iqR1Q"<0#$%,gC*T7f'RU-q<YG$B)2n=V=&?P#!Y'!.g-rD[LBA^b!r)%jNs)0^MtT]-[&V%/^]I5g*bDf8(LW9@b:a"'Bf@==:AL$aL:g!YOX[%I=O\9,M;6AYqV>gj%0`cf!Xl8EYu)44\_CRTsa-!_4@=/-#qS2[[Hb(0>a[*>])l"@QFYql9_!nJ6?=+1)#C;C"\;>+69_eN7QIh%!\F2^BO-f<%#ZH=BinecL*AVJhBH@V-=]^ndE[hqTAK7(T`o$N[hl9V=Z.DCAHW?k@<ii#0hVSke$?Rt*2KME:&p#0;,]or)M(I]%Md1uT5g,g:H-\V'fn,HEo,&#+Ukt)6@;-ipjjpYN$..6/7nFX#.C\YhD\tKN@C7MPFbT2LfN\]tN1FF?G>>6R,+h^7Sg)Qr%'kmZ%]PstsF#3sQEjW>TVu_!VMH1@YR&,MP1%:b(MhniP2]9$hR7=Q*/s=r]igdmjS7i(WbtkL="'p12E!+gNKIGCOa(@dV/P)Q-24_4M%WFaBghJS"8<usYD!5Yd5P<]=Y?].]&,#[/L0M6I]GXQ160MC,F('/*4$KF]ZM1LmJ!0o_B^*[nYcZ^nij!sd.O:A?FWAVCBG-:"L%c2^o)TI_uM%Q<!t'MJ9d#4/Z21u%F]D]o2B'YTa_\`BDnRYL3e(Pr%3'MU(F8MpB!2cn$Up0t[QPq54%jJ2NbahruW*?"rM)f_g5%T!8n75`iWhHRYNOB:d6balD?+5tsX(Hr6)<9D#beI?QRf'$O/bO4.^YT#[Kll"OaeYld0=[m^5#Cb8,J^fm!V/XUAf@:JT,0U5J4%#,Fu`'u^9-JcO3-p-A9T`=mM3qq-<A*[ntY]E/P=f8*fH\ioU;&Yp_i-Y<dNS^HrsN!O%)B>jSp5dll5!=p+tVGQ@YiYa:RDr+cm%KDIV@&uct6TMl(N%d5/@.7t)h^q@9^gl$BsMU:aS`S0?lE=mdBgQT8cV\$R9WlN2CN0mN!V>.W*,!Z,Xr*-T0C:_:G`I!@0jFr^m%L1DRP,!m.LON[3!fI;V!,D=$-'G!HGDNFkO\E;EPLZ.VlcAq3;Pmpr#'h,!aYKl8_T-XM<=CmBTP_+s(cGtGA/BTjclk<T/<T-)+%YVB$V63FklEk4ja&<GcfU_]r*as/UR.m%>SX<`1u@ETDffh/@ZnZh)@O&TD:"7V+4D4&uA`%M-2e,I_VOaU\q;tJ_,AIO+ZN&U@O%?rO\WM/geL+uoZ`"rm%_1;g=1Cs\;lYh`iUEQM>On_gupT=-'kP"-m2)R&1]ETU:CR><6kDCD"c7u!HI!L:eYcSA0F"KLrm@'cp9%+LOcCF+nKU<r)MCh37HCUXMMsB1oj>:m8Bk!/;VSc=ZKH;"I#RZG(N<Y(hr,*fhQN.hW<uFP(7^o!Y:1Gb:)#:(B=$Zu+o1L;`Y-%4BolnJ`+m?65d%)H=$s)&looLs!?H6>janO[6&BrH]3YRl7H0r"O(:t;/IT;%9pj11#dMi^G/?=D2F+ci!EO2?>MM-Gs(A^m#E'K%#f&>%Aec`^d7,Qah_@44,KV.?Ls+WGR>8/.<'MY/:pFIqKUe?km6tDe=OmhD.?3G?I0^krm"?K0N9[=(iXWkZ7&%2$=X,aa=s`uU%jD;gF,&@c7knH(<%4/917&`0D"Ht`i=l-O+3UA%;eNt2$>0K<1^>r>$SX4s0Z!/QC*g0S@b9er0$jBa6M5Vj=FF7)olc[\A#\J--%C;dub>7$E]TTNQ+-)bW8(17PnP2A)0C\2e^A5FH*gN.0V1GGHd[jopHNQ`/.1Ubt&(1Kgb8.NaKiEHThMY_pjG6K3bN'gAbbR&to%hE5V?I7B+<nh1kc]1/*PO"EjULW;lA@T(P)Mlau)*U;]mj/@9L(C0+m`g#6M[BL4iXftO.DMjeo:c"8;nL8K7TRbhZiV<8H/L2-]%G7]C%Zs0C[-1A#?l=5m<nLLi=!#od=Z4kqS-D(\R6Fc(!Hns35%mDC^@F?2f;<Ir)7NI=`%Eu.>HN8V2\)[N(!;iQH$==8mRHU'r%,7qO?18ua+ck*96mih.!B]s,Waa4#bPHs54U`:;ql.Vj%5nsloQE==Mf!I/@@T+.qD+,%;D#Oa.#1+\AC'H"_R%5E\1U^%RL1&JP%8Pg.[g'C&A3!WVE\\8A!'V(qWYZF,b;+4ak+S4j5V^J8@('TTrYb9,m"uZK+cq#!@VF*YsbRmt/Z<eM&f&i>74B@n]W#1mEM\$Qe%&t]S#Zk/Uh.o@GkC/IP]9S$(ANp0Dd&P2$lROjV-7+QH<NL5t"1Os(,*OR!mRaQ*BM44WHn==A!Ka+hAP-QQ*TN?ul"l>k4RDi!8%&@3335TsYDB"&J?9p&VRZQcVJk+'#K*gl$9<Q%56\"W1$Eu\8eKL`>=H=4^@-0nQ7*$m-9JP&74UUsSg?o-tT_acCLn7\OMkQX_Y%GZ&&TVS9$H_F%d\+mTUe&2Df]7OKZ'<$)Qr&l9M!b7P`]eW*`8^mJPi)b=)hZVPm:J&cWH3S]^HNKG&G/$(S!"A^boCi[>f:,\eZ%iE27$$hc?tjrm<X0s8lBL_UsY:PPX;R(UC:R40JN2`I>.9\sHfh-j.lKkEE?pEbGpbDLq6<ce&A\>U#'A6dO1+O0$K<@\cPcdbt'%=<teI7`*S`631f9GSuiW(Ia.Xi5Nd6;ZgloDiGq$dX[j3ini,!>)>G$!],NL`\?p`ii8Ci,DmcZ3n(q]IH9rWZma<n]3;Emn-P!U%<Zqp47..L\>`1VPRt*3M1,P1k(5]Yng'T:5/k5f^H't,]0Q:/nbdMOI1=1X$)%AT:L<ZSD<sd!.F.1[MXftpP95J*s@$V"a:<2jA%hMUDOb'ArU1Ba9/M%s_I8''1H%pSQ3`JAH$Y%YDB8Dug;Yr!RhQU-Qf0oX`RWNTuAAtW)%TH*UAqL#"_OSaX7_a[!I!\ml<JF%PO%?tRS6AP]%efiIf;X5pp&[!i:8b/EEUGmLj!KJC.kUiU#h*D+)l^rN324hu,8iWYOeMVur$ZTq#-R&9A8_K8s1GY6j0b*`'VB?+T8%-k>_WS>_5Gf'?#XjIBUN3\:H)m+WB!a[D"KCU'\X4YVkK8gjUr\o0V:?o"F_Ed#g-PAcT_R\j1jg)Z1`:/V`l'2)`MDF`8V!bR;2%$4Dm97[VWW'VA_4%5CBTAq:28@ra+UWnK+["/[<)U4,S?g;mtu<mh!3dWpT2S.cZCb_'Vmi(Cl$&6K"RRiJA;Xg9EW[n7J(,-Xi*%>%6'SUhb<C7$E!pW+fEq9C&/2W._+Lb&3Ge4_%,5ce\F3`>t#Q[TV5,4&<M)4qt?H>R2nh`.R*Q&9<;5Lg&)_MB`VU+QTZ@J['S+%5`n#-8SuSf'4d;?f\O[C'b;\t4B^K<(^ZYF]FY2U_*F2*"UE0iMFl-lQUtirg&u20A<-sM'H4#`PGY)_d53?=.$:q<N0b.hOS;:>%2s=dW.J*p@^23HKflX(>=Ys[SCmr]b9u3rhgCh1$/9lEf1(afWT!;$;0mV"(R%^G)f&Rn5_[f'$JTqbiT,_p(P_bS+oT<<[``f)G%0FP#F6gr,\"&R1($`=tna^A.;E>0C(M([apZqLP5Beba)P%KpF%)'fLk"ub@7%bZ^:QccFWb^<4SdrMn#Fo:jE"&$L0`q00XVYUq%qW4:.q9!52L(Q6N%P=[#(iZ.D"!NFcZjk.!I+*^)+D5IPGqNGZ3"DM"b?fQ!#0%S/$F!f"-QEJs'1P^#:rcU(!p4p+`%BiAK5*T^%31M/rSEdF%l"Vs57_tDn))+P*1N%m,&;[;s!j>_sFJD`-*Un0fOar<"48P1s-UuCk=rIr"Tk+gnd49nVZ!%]Zg0Xp51?4Bp^)[!u%CS3Ql]7eJK-mQS)kQH.'<NTgIA)&"\i7#MaT;]GGM6UUXLiIDXA<`kc7\$s(-i(P9,QdKU8l0BK6piZ]bVgIU$!o7X6SNj,WE0_]%>)U'2;+%(N;6G)t5`0'i^gp>R,;Gj>DfU.++#PL!`RUXUkFhW/0kX8g**uGU\+`3_d"=X"g?=2W6>$ncb3![0mP7'0qZ<BnB;#!*%G&99+P9SBd\_."%]NB+\gr-FD54"Z#@T1pmPs#dDIg#CEVEgZg#kUH^lP'>Sm95XB)TCkuS=F*+*lqb%#Ff$:IYr`m9;_!9TH'Zo%L]B+IV[ge1;[g#L\q;Gd]s.3P>"-nk#F[7TZ,)V]\Q=Vh)-(MM2BA-H_oS2VXHc^Tm"#P7Ldp[QR<VC57#Vk39d:lj3B&%4MJV,1%"r,`kj1mWB^J;fP3Q2O1o,?]]XYF%B'+u\UPNnBM+QNVd2'jb`@d7fFJE+4-&GINCmRi@g`-^f.,q>T&8?oaD.8*q^(LAkaSHb43%;p;f_Ka&g.^@i13?g`5&Xm'D@`'Er2FRHUQgl0,)Mg-514b1?bB<gsq3Ltgi0REjTf`4GQU*.c']LEXG'p!W:")+8=2Bg*jRs71f%[UN_l0nLD7odKuH"T(6B\44n+pl'qSAS1G>N$(d=WYL^Pp5=)A-@BJ1[6u<++<U(F`R0U2*(cO2pgtu,WXs6[`Q+4\RKnpA`A+i@%/[Rp+(a+o7^0-9/#!sN2M0EC"&2,5`:.bhE:!IGmr>u+7[B)a<dp[gG8:MQgHW4$n#EjIj?Ir#8)h;3,@kc/K@tZLV=E_pqalugi%TLJ7e.jh8G!aRQTq.,;`/bpf?DM>(>3gg8$MVY3G$K"OQ)N)u,VH&L1!ZOCD8@#R8kj+Xlrf'egTs:sY*]+>(9&cMV;!-CrEt=hR%NQH.<jgHecml=>o>$I8jq&GA9h)$=Mac9]r!G>%4(^cF8UDpeqKtoU;);uG*B`1ZaakS`VV>tV*S?1@.%`K3YFL'c33Kso&:;R<S%$IK.Db^+B%3bcC:?K/t/0rt%<+@Bq%cun*]X$IWi`>Ok#Ti6=AHasF'<etEA(J;9qmRr#&8lMG)13pjsVNHst`eohQ+mpB2>$CHY%(u7.Pg?e$4\Ln)u"=YiUr$k.HX`n0@HH&RF`2-#No'ljT3`2f*hVa%=!SS6jQVZY(>=tCoikeZXk9Yk?M#4.FIdS$W)2)&17^k',%==K*XW[13P)jR-a]DssPOo2&MY_sU0LrfpEfRnRXCa!,7^%<h1X!mBK)MGc5JEs$"a2H?kH>sRHP.bm=JjA'U$<=(YQ5n)F:]aMh%o/V:/O%N1IZ;6F"n`6A<3;@f1&pijXp`!LdE_*E0iOmQ!n8c#NDI#=qm"JdhJ\#<0FpZ>@:<Z(eim2Yf"?'Dkj[!!bek(;5ihS2f%XGS6@]`Yo2\s?9;d>%*-D`"(@-ST2K,]Jk;(%KbriC7.n,_-u)n5"O%_EY<1$am:Sb\k>:V?>D#Jr*eL/I]I9Fh1]ALMGVpjU/SX%f;uaV'F>T?+\#et%_V(Y"!8u&A:9b>5t?bs2gqpn7,+'Y.sT7bHVQdB0*YF_(sL=>o.`'AY?cniA8<Qb#"O:KL(R\`^cnSF$UumY%q)Y(g6/S8nU5]0!fl#*uGD`\Ch//8Qk4bHK!jNo(0r/DHe!A(fr(7!]=.ScEA^`oe<n@P(?MtSi''Cn0k^[rr#=Ge,OOZ"LU8>b0%#E"(UMWC$Q2J7*'>YL3G>^Uog&"ubo%&QrcB\AMC[Igqu"dHdnjCF'+T&f@eXc\4>MdGWboD2@>5UUpJHqGVkNV;H^I03Bi'lkVQ%.FPJ-%aP5pq(5--odnc#n;J.&QhBLe[RIiAoJ&dCf[4,`":alTKWA$@`97Ub]E0;?Y:i.j?HUe:(t.OQaC)nLjHmdEUNpQqFSl_K%.3FP@^C7;8+/-iR/!i6S'#bUG`bNK-@n>i72l[nTW1\<s=fX)hkicR\aoOs?DP/5EBS8;'XiU)F/2=,ZY\=C;,2*Tn`&P[Pogn7<%J//LG(cgl5#>A&KdO5?I-3]Re%#:Xcmh#U_9Jk0hbH`['[F'LtCiBXpQOi'B!#BCjR0$Vl<k"F5@t**&X\5I=<0l5->`(PkHC%/R%89qTGr$'i>'HQkN3SH.h4#AL@0pJ08R3GiOUX1,iS[/?U_^LGKL6DU\>0XiX%l1ZYD/Q`ufD6JW=,Y9LS;VD%#UF)C'bX#Q_Kn*q%6X<F,SRT`M"\[Q;JK"+^i4]:9\jBD]SR\*6c5P>C_L,"lkh[R(%;$OM]E$'F@k!UC"A1S7L2Vg)5RZXLk+?/Fd>V+I.]B.\Rp$eN%\e0QVg@6`?^,D.=!:p[t=G=0t#Cq(_q$sQ@j5O`D9Vm@j,,p$Q`"&Y9MRj:<\/aW\jcJN8M@g\bJ*1X[ZXc>?<'"@KKL9_m@NHK1%*J6DN@pi_u[ZnZM^`b#\11&D@>*BF(AKX$\cldO=Fhi5=8[?rMagd3/fS1AL3#]6-X5Y7-bh,>/'U?N:9hguH7%e)'aE)n.-!HmN%''&Mi#SmRNB9n^6@I.Z3pJrI,\XrDmZXOatCTXD@j/'^[?a5,./ARA.-D<^l(lTVN-[S<7oI7*ZS?^EGZ9&X:-B.U@OkkuN;8m@_%gAjV,*Ckr$>6\BX[#2ibi\9A$(WPr84p5=\J7L_bScYRY>)\OgCU5r411],^%6.-Yin-MT<f`O^gIb;97JdNc-(*59CaoO/@/5/G%8%0S>/]IaaWoSOg4+jc(?!-aOk`/7l!90ICmcEi[kEhmf`*?WN*14!&rFRYp,;8,bFXpK7$pGI:Y5gXi,^h5ZCcEoVhgn?q<3HHf%2Ip:\"!20mgbVi3_AS6VFf,C3*nS@".uYBZm_Q2(lrd:`G[@Sb:s6\t0=tW\-o.h.0'C)\:`?s`LV[OH"h8qk!A;uPXk,DPEQ`5c%-0#7fR7gH3d1"uMDrqF</D$lbfHtRjaREFo]XQYI4kt(&h&7Y3)qYc@L@T@0;+XZ4@!#k#l6>uQ-8b][D'MLce09uF755;YW3SOJ%Xd=ZN;Z!KKs6a8NQudUm*:3s[=aqM(D1*7j[r[.d]dU^frJW0-ao=<4c-).67VOFU?[mEDrVc-&p"dU[cS&T93"k0?MsB'kpl2<<%X&o>pQd^jcBVtWIqDeAPqX`UZH26jPRh^B7^,Wm>\@Ff8rU$:3^7P;fT3%B2nC7p1f'UFPpNNYK?dAX@p#i+)gTt4Co62";Df/Y.%pjFsqo3\]inoslpm^Mp@r9d@\Y.saPp?01r?^q5n'sr>dF1:?tc7\Rbm(:fecgU9C/rcq;$U\9sq#B"01&ZFgk3h'h+`Zbm5,.T-%q<-tHr::67EV.l78!i]%S\8'6a)gbT8o>LQQJ(:Eq/,ber:U9R\G>C(=6FdcS,;M1d'^j;('MdtH5fEn'YXAtH@VPIs's!'p4Z2s%h;A3RJ%<-S?]CTtW]G0,j?69mWj1Tp?%'5t*)HL/ph([I1Nl%8pK-7Chjs^U2'.1h.\D,sf/Ko$0(.#o0WR=M&$bbf(RI2lYZ'`V%PLOkpa,]ScZOa+cgXZ>9LHRYh_"MN&Tg0P$U)k/m0Z,@gkN^*NS35Ti#?Ke>0@-\gqqL_m?Z+3H^UlHIc+gGP0@%Q0Ss-sJlRg&O%1RR;27^Hs?o2oneYAV\SDJhrT-s(Z!?*h2SH@PPFiblu;q)pbMKpSq1rq#[FmHj.1gY9b':"nHfBR=@>p'(^VBm]`WmCg1r"#9iH%gRF*3PJ4NhqVGo>1?j/_VsfU'"&A.<V!^tBhPBR6lJ>:9Oa2]Hh@=$V%!D#-o8FBt`TePGb?+/XhVA&*%%M^W/Bs34hr/69,R?e4%rjdgc5@*,a@>3$0&c-J@k'6Q[M_j_H%[o^el,dIf^RX,0pi(4r]q>Nk'NobSg:S;!i86X#Kc`O@n`92a;]*ApT`Fsbc#2CPrNNk;%Hk)V=7,.^Q35PdOnBVES/lC';Lr]+VbF@7iIXO^9fgoH@gZ<[d.$sr",Q.%[FoL4qQMkcI'#Ed>M@]HjDpQ^1YKkI;=fbApc`[S6%*ZQa!rT2`"o&fedh:_JrF^)'E"MW,d7sX[OpG^^)7uT3)4=&_c'K#S&4%]Gj4Y-PY$>%]S0U2Mo"M@RC/B]EmS:;=mjSPF)larL"%,^TlFjQ[IueX+LA%nIbqOi-V!8G"<oaM*!7SuED\3D&q((lW&8^MGV`'MF!GpK%RtAc1EbjXIY;pjqZ!"49muOR]9WA]Wsue<=m>%BBFX"=UNf*Q?daqp\ida2JqdLGim]H`SJ/,e_PK"qnr!M_pO`n2\YXR:S)5C^KKCl]Y^(!+<bE"dd\=/iqMcS'Jf;_8an`p%&mkU%11WlcBYP"17t5s#]XbRXgoa]X)XUMXhf,802U?J?jRCKPW;5Z+k-nuA0(-bUM%i/_bN=7hSYHF10\Y2TKQ?.r49`EGF)cI`5*k+<%<QoB!DVr4@\\.b6[f]N&Sfq6`2T4t8S_kB9*+pI-'/=im9`Aip<hBg1)sqN((a?EC;3tRefG!ZFK8[6fY%RHP5coIlp>`!l6eV1.%8$qa%bNMd].>u(>!1u<1_ItKjZ7(*D[^7>eVEhfMK(#<[lMcjcNV5RFjepL.FtfG/oSE43Zi2Z4;7CpsG(%'8I'pOjSaU#*=KhMq%h0>^.?B6,fHGq8l6cTubhHukFYHCpXGMeq(59OQ[FTtR"G3'`rG#ZfKRB:m:SW@8N*C#OMrM93P;ojCM`1no+#K+5u96b^^k+F"A%rV]4,a.^kl*S+ZVpW."OrF#??kRm3oKK&lUo&iTWZ7iiYm7orQD_E^rGDR0JI"IVI]DV?g[k4mOB.)Q,h<qWbWVkqGU.14.-bRlB%]]FrAIsu1qkjc==((=P2rU-:E[2MbFhVR*oNSd"+nG\lEmr$-\*]HkKOR&D%d?O%br;?QZIX?$!0rD8!B-5mq.]TtQL\KrU`SJKt%Fr4Jan-%p^Y#f82O2%3W?(QOeo4IpAEeVhhZu36e;66;#rnBDcZ-1b$ogC:Og%E>7for7e4k)T90>\D3ZY,`_q6LH`)*ai_Z$oB_%0RI9sh#XqWIG6uu@$pI/g3\ItBP5-q%5VP!RdQ9-_I5>RcY3.G0Z%8tM#:rd_dUi_>r^('&a_YuS\eg4E0u&^7Xor-)"gB*LY75F%mQ2eFG2Y.87s$-`Tu.:ofjPopI?-M&E1$/?g33jAhnigqgAc4Rd6'K5kcVkaM:V/-ZNfh/2)hYSn$WS<?T+#K=G5S8"&JR[_b]!2%o[h^81&K&Xh<[P%8AsAOBc(d^4-6O4cS>h%PUC+<BKK$IpID)oUBa"\[#(MO'Q)/Fg;toH-4t)=B_tQO<f![f4e(Zg(j\(HBG3Ou%kh/AM%\K>X:7^"Kq5g2+=W9O!5EHCog,<HLNW15AS'ck\[`u0r^;'I+lLOhqZeo*XG$]&.@m6LT\tIB?_P!LRdF"0-eK8r?TIagt%''6`2?/9<i!ANV]R<#ugqXLNS"$1sC0/N9D;pU\^ht7EWI1;h-s0(C>flIPSSoUbLA.Fk8mkKaCfT@1P%[E13qNE:'q96ah\:1c1%HZ=HghIR#G]K3YdhLU%i2>04"beD.pcg^5=T6@_\r(nU1G8\lDa6HG)Mu=q,45nkadt(#8Q1k3Mq9@IeRh*;*^UrAi\.4SDD*t;?%G*jjmjUR(hN4(eGZGh5j/-QgFh\0J6N$eV?4N7:A5EII::ZXk6'+AD6C2Fi/3=p<U'_sGMkDjl)+gK=*QN?XCp>YMre`q%bXRh5/%Tnh[fGSJ.m#68u4^uS8i'^k&<nhBL,=^lD!5;^$pS\.-<P<4&1-Vs0k6/mJ+jei$'-UKW"O=(k8F:H887Q.f=2fc:IKtO=\UA_NL%9ePMKKflo--Pu?CMmmWna5:KL.&:7k@I6-6(nI8d_u8t,OD\FmQKGq\Bn+reKMB(<X]&k^LW9,#]Xe#\GBQ,uK<<]$lpL\fFa89(%le$2`?Ms`h%_dF4Ni@It&$oV[1:g1L\&mjBQ23V@$[[`UI/W[(C3BJ4878L%6!M(uq<%!m>hiSem_6D@^%qNep?_Y=d9CIn`_G$o%aVsoPOc=#5P=]X#a.#bC47fm7g?WeQYD]IY].KB@Ppe$A5<H0]d:6?c_B1k-I#8h<B(%aoLg%qoU`WAI&T^Vadn?QH#DDZoamAZY%rTYA5Nn\1`iNJi^Z">hLOsSu<VQjHIT@]/dHh,MW+JqA4Pe#ce#iAk1Ss.uBZJ/&rS&oR>OU;e+Buk207\"/+RHuhqh.EtI9QloI%DDTs_%btrCaTd`;&Sj'<TmhJ9e14T!%aYRU#g:K,)l'"d8`45t@@M:Nll/fH2E<V6%qO"-BT+%ST'+H;T+#8VF(d\Z.mS9;Ze]u:%H$OE(rRo.J49"4/bUIbU`&m^J;XZX7SFTJC)t2RI.doIRI$>7l.'.L448$YUSVQ7^h\fXrS5[%Ai/(e>/94M!H?])Fk1AksU;)+M%_PtGH6rS8[K9-.(kC8srjF?kT2#:\+2d8gL)(tU.-U>!-"8Qg35^qI/$F'!Km,m]i&$%eI'"=o#443:_e$^XXrnk\Wr\5+;a04cL%e-,JV<BcJ1j8]s+;U+o12,h*c@Ot-c>A]E-/'q1OIstV2)*b!*0Ac%,NlRt\qhSQ,4*j<TV89&@#.#c:n8hCoZ7=m'gS^-L-_n[l%eCZgJ6SW>caf)JRU2Y?07ZHp?R>`$hT`.\UNW!G#P>Pg3.J[N(R#Ds\C=GKpoBpFMfTs3N0djqVe5ZjbBBOJOQf$Y)N"=[?as1Og%hXm5VFoM7AnpKkfN4/F"MO$8O7/MEmG's.]lhdaO@&*[1LJ/FoQ-VY"l^Lt"(O,%Hm(9)[!)*?:EOise4*<`:2"Z0;<i;S85-.Lt%=9%`<FaZG[-gfGF,d&gI4$&U:8'`VCcji/.mHr0KGa+,?T3sXRDf*%s))"eA4:*s6EYhH\Mu"ZF_V@RAE9&Hjd2;k*32qgb(SfB=%pU<BC?NMu'Or\NI4_i;cgh3$qA]d[:HZ%NS2mo[^)9.a)0W)aD*udG9]oO5X9^_S>PNiB\hB0Kb;uG;,].*/?q<Zco.<&84c+#u!%\nA=)Y7L-%/`QI&RD^IqmkN=$;YVSmmh>/X8`?-Q^5j5^V!pO<_Ddpg:C?!TnEg7YI'.I'cV`dCSY]dnq=[VG)ngK[`]%UZPK#Oq%I$;RZK6CdtTuORZQjuLDH_I$ncM-cd2fF/Z4W@1bp/^/,AQ^@Fn*j>kB6b`AF3G9%e%,395J]-ZrL#EII!1)qV=AqH+B-:<O(?D*%5NB_HN:;%de5&KV5!FJ:k;HmYJk/Y'/:[?Ajk9G_?dB""oD\+SipO:ZFtgd]\GPZ6]T&CRJ,TPa]3Hb4.(a2k5on*[3^lG!TY7_e%,!9'>[/ZH>kKdEu`*AhUhj#Zbk3OHNBC?5AHVOY:NgGA>$6@dlcI4qS!M]aN52>&04Zd#a3^;@f,4/A+r4\*FODhV5FmA>^ckp,V%2qK/>cF2Q&=;i1Uofi6aIsnfD+m;R@O2:QD7Ym#B./VO)aagPdkfnJJYD]IY*F*Zbr+BC/\00*E@?__%0PY_:J*^]^/o!M:N-0L[%M8Mu0ANrW5!;%EIWgCA^-Y`$Gm^,+kM/O#hap$X)OBA^]"K*#Y*TbC-hqq\B*\kfBEKZY8H0I-,99ZkBM+_@Un;7P&!Qn&rO>6H7%CjMCUda)#2S4r)B7MJ=uN*j#<h2A,FU7_I%cKKh<huCGR`V(B<O=b1'b(8c)er>.3;R.9uH87,EbX-/jFi<W0gUt2/qu5qkS'H;(%4S.q5ipPXQC55GO-Jl:OP^:Z$kBKV4kIbm65k^^lN^p37kFK4_jaCd2O&D]"eiC"\4_L=@@u$XnC"u3]k]`rr#I"uY?O%&H&Y<bf%U1\]uqi<h:#sK'C5M\/?\4N!`[(?-.hQP4tWR2S$%Y:jb=j>:>VZ[l!jS3He?Ba@R5lCAISc&_lIb5](p'J7^P::gE2n.\c#!<TW%nI,T!kBp*E9(B1$>Ns,5amnn1[#DK_8No=r+mLkEl+>8k*;PEs_82tgfNH:@^::WOIMK66j2c[sL2!`e:qh?&%?J?6IA[S:Qpr05%4HqFn`o#]<$/6,kr=jVCmr)::V\ci>?m=9jFhTs7C&AkkJjH`2NV7h>Z2`Qr(<]IDVb>!OIsq=6!E#%nLLkNkX(Qnj4T!<TB2==r%lAn9W(/GZS&sXJ"FoC@fg%C-0,ArXr++/Qs:p]VBg*=q5*.g&$LA"aqd)d@"#IfK,aLS(hb=U=]a=TBjC@9N$-[PS`f0=\'oN,&-%5.Q-+Y(8p$7EFe5Dm$j1-=WF,(Be'GI_N<E^SnkpcY^V(?N#'?e'2IsVo@?VQW611Jq&:M[CV.n^8l9.c/4#'5Q21@php023]"*\%B)h[6p$<-Rrh4YsIFHD-URPC?^7?dV_X+9-p2fDdG(r7FDel6_kiSbERg?Cm`i,a7/tmi(rS6-=$Ll4EDWc.XI&DhZlFHI<FC%uL%\RVo#"Lb_0#8ao+!c7&2nS2+=bgpZLlScu0N[<VhU1$%KbH`cGfZ\K?6DoZ&3OUj;<nG%je8sZ8kB>J>pLUc-$./*9J%J/aGr,?n%p?^$-#_KD@^7;m8kI#o9%4p1j(=mJ32iV^#4mD_#k6d.+%h)CgF4\:`?7;T2g1i_0mp,3ZSU0D[XYjkepT%&+kc<0MCMaN]ARUi?%k@JLt*G8g3\%]JB[istgi\Bm[50UE8$K(dtn92(pKrGMT9JE03l]CToJRQ-*Y;E#QWh#i\l8m99_MD0q"d&3hQ8t<Fr0#Gf[*[F1%M-pEZWOJFb'gV"#[4>XT%&]W^LCAp^eHA)e?P`14D;lm6*D8Z70,[4\^T>R$(JWu4.:-$V\RWhAq;$k9`^[VkVX[h9][`_KAeX#f%GI3/(hniDq)Wj<$E'(,X8?\6Yq>qB=]Z&Ul*0?rK>2-o])L)YJ%WkCjQ)iI/>"[+`$`a@(MSkk6('_+Y<XjKJRVT`H]$X_4eHuQu%X@.8J-j>Ng7-rmd5X=Kd7d4SB[nWg1:+9Xfj+8f=3IXS_E-kiO]H)Rf!2rc!.r*`#[;g&blN:r0r1JUXb^Mj*2a@LMO"@*W5b*,S%#$@bRfFn+f#Bo]H"C*dh!Lt'R)o&Uu@p1-(T`m:'r6ehV^`/d-1pR.P)gU1Rh9Kl<f1%7JhFKTtAJ7$\o!\C!e^"0djm;I9%\LI[%%:\4#8%SZYFZoWnio]BDp*YqGo_0ISY&:F=Y0e$VQhu\",V=K8>(kS7cp-FFgtr"N@aQ!qeU!?"5UQ;GG8pKe\KFF+Y>_X1!(<R)%YV7m1k2uZ\C3G!rlh.ho1H3-`O,QCeh#rERFIW?lS(9G4ctnkop0.<<q[(r"435//%dZ7cZ0sBj^;DZ%%\q^dhS?k[Ve"]]9ADY6%T9sa'#rg]Ble3n26MIP`m`qoNCh.G1$e>$Dbh9dJf2caj%J!p:BMH.O*rWCc$[40$_LQmclnBW_<Au=RD5d\ZcJ7.)V-;#Ej1!Wl%=b`crncX=X[atT.bP+HmO].:]@b]HK]H&DY1J%4S`'\/,%`klj-6.InEVA:^ZQCY]^V@Cml14@k+@8TeR@Q8Gk`88KOHVJpmDQe'%b4c>Xp(i`,<%6fO)'#@t'%%[`!prL(hord6,?Mp#[4?gk\.1Cqd?m\^!)g@^4j[oN!(mc2!ssp.3T+\r<\8\.XN5R2OFYtKmVQ)b%NN6`8?k-lEddp,%%m@DA[VO?V_!neZ[YC\/W&h4Q%8q`e]kLrK9N+l*eL:lk6*H?d:N!Q?G,IpI32!-KZa*HXW2t-E2bORD=ea3-%A^dl(UB<<&PGCfES*"G&4FuE5fX,l^-poCo^J)]CH?+WFcuio3`0C'.kp]J>IM;4P6DLV^CXJ^R'l&p$7HQ6oK]7[n0E<JDY.S]c%X?;>5(3J'9E"82LGuD@FWWfiaC,3a*J+h_%^9O_"*6q6DR3^h71'q)2OVc^A,3`rjMg);[jRKsfZ6\0CbEAr<P-k8[(&7b[/VPr2%ksB+,^[3*MPgIiCD::hd!+/+P7gl$_$Tfq)g-ELjdKHk;mk/P1HV[GGBC$e:M&lE+F3d#DgiLb(kM5/"FlNd*$O%%8pCnnh_s%.V%*dmVeU=\R\Z`.%4H_sVi7iiG`66>pq$uQF37'r+*DPjf._a;HT@9P+"3*DikL.ph_^e3%^_iOsd^eM^l_`JhgCnYdR?/Scj9dRS%%_uH_._7>.1d?.Bhfe35SXS[7DJ?mcW?lf:Mcj.9:aQ!<uN%>t9=E4CGLIQ`9di8Q-@6"1S<s]E?rXlAO-YbUT/&p9`1bI5$%U=4s%Y!2N+TRS@.*U41)oh)3YF#!^+h`Uq!GJ*<;Y:hGKe;D4f6g6Nno\mRbjC=7!l=1obkh!9J*2rXm@-T]NpW*9pCZ"sUGJEaWJ,.`h%^+nle"-tm+h=nO2p"?N5rTjnF4T"d&5P(3P(.Xq"]OCHfn,293II2C-rp4:D55!IH*e$W<9EQi\4g=bJn+k_aI/2Mm55FS!J**Np%I`#@8*Osq>jKH5frI=_.5Q9]<J,O"uIpaiR&TeQ4Qi,r(^@gl3J'5$d>E.#(W&j)+L^ZbJ"!PBuGDs'6EZ%R5ON10QqP>>?Ab(AD%0bu08EC9q"V"@<poRI%$R*'&\Y!='up)I+F>JVrmT.e>.#f[EMA[[a.>U]J.".=5PI'Kb4Qqla`.<lrAVDsei5T`OMmQaaRkifkN%LOBhGiIrD16k([0?=4&XZYC#*:]lqY1'<%Tf[Y;Ff.oq<1tk;`P6-1b3>fTk,Huoj5enQPKn&\(R$K%D[=YC.9Ag,&p\JJ!q=k3P%ruF0cqq:+\I-f:0)#LZ^Zl`7S/d1PXX"P9Ap']Q?K:m]Yqf._immfSPReFGgj.L,CCHi;tf"Le;TP<1s57X-jrTM9fe$[dk*&LCe%d>rpWB<Q_CBNk,)*sYN\jZZr'o`(ZXiUY=VT?BHcIkLb+rjhrJq<(*E>j=N%08f4H\ISrFF/d40^M%nP9<fR.o`(ZXiDSoq(&aIc%5O?aHR/9_irJ.X"]:o6Yoj]ZI+,572#Q4n\O8YmS@e\tNd=*hHEj9;m&:HPeg<Dg:K]XNM`uam#/$HSmIBL6RBZ3RDqW_jV?[)GT%n@AP0CQDbLePW@s&H)<[Rr5q"Y.IK%^AG&p??>_[l],6[g+`iIp>dfL45C>&hU0`r1S,r6*B2Ri2lUiYkgd^hDS;s%Mi9<l,r[a5%f9R`g];_[V[t#q423(pec1Ru0[g5>og"65cq0,$ti&fiiVUqHpR-Ed<:7o,sROe%gNa-krjR%r^i(EMurnmm.rUEBBnVKb#r\kAf%nN5U3ZS]`\hL>$_Y/ZSSO5G2k4#!<,NJIN(PFqmG2nnr,s7,R8prXC;oC7UnrPkD=JG\aRO)&Jqps\:hnoaEtMbj<;\"<NsO.Z6i%:S.CP&"i^Df,t%R?bG]IaT:t>V?W^V`m[n/lV6jHIieX@pO<%t5CMKZn9Nu*cTh<EmsaluIsCFO[\D:9)\oB5*51Lqh.1X)[m0N;%=.fE<F$G$9je&<ob:gR(Zfcf0jB!H#cu3hmah(>T,Ot'_e^r^H*n^>V%tF;B:Ho6'?P,N,cHi)1qO=,Un8E4S\8T.]WZtCH:,N6=%Du.gn^\*6B?<"^[SX3]2mK_YGm"aG^$oFOg]5dK.Ra^'ile_Nk2h1>0*ZijVrWh>.m(L.plb!&4eOOQ\\$QS3]^$ZRqXeh^lG6>_%(S?'N.j+f)9Vgq8A$?b>Y!-ha\+Ju.rka.Jqr5d'n?9Lqnr(inf>%7ZlY!.XY(ODIHL)tk,l=`?I.Kim/#,V/lDHlEg;i'TdHrn"%BEAn(l5kHB#<r1KIiB#RM0ekWTD@MgK.]D&W,UQ5bi3PioSN&:e<h@\iMG_PpVhnp5NR=<[9"D0En0i,naZ2mqo4\(0P^[\ib(LR%b29jGM7MY-=Q.3SmHa4goNTY/;?WG5iQ'jNptOg+?"!"aL!uS3%t<M&IUZ=9`Fo2Kd<Da;gjMMjYk^AQXAIk's7(pN2`a`9;rNqT%ZakhuQ2@3tl0]%sV15u8P,?]I*8^C/bAkn5'oqq7S,VP#5PUZ28:uKjJMM1G?MbYejQf#%`U>taP,U"Go\B2Tpn?;6HD"pOBt_&k%Yk4M_J,:Uj2#[?+T7$ObmjS]4Kn0#=o%pP1q+&0srT?nD!4)@t00aJ@fl\q^D^_ct',/.OhTpTHR268Hio_u0nBA@+oA3iB+E"q(%.eOCH5n3gQo7-_8n,Beib.[`4It.2cIsld`hf'6,d453,miY*gHg&k\4^DYVYh=9tCQCZ$h^EK"BP2i9]@#$?oS3*gqO?A$1c+%h%k,7,2L8B(6NKPSLEn.S,\3fM"qTrlhJIS#H7l4c6prnNMZlX8DEij#ri)FaV%aX(a>Q,V3aqmKN.@\IEJ'6E9kDg4u["=5e!KHV6%4T<Uorp\V(J+eKN(_\CJMTtl)V[6o%5Pb*+^[oqcJ\B[&HfFZ,a7L%`%:DMjgNhhk+9)%J^A*t3r;46E-^5R1QVBbjb$*ME_`Rkm%iP,D7QM$Ig:PsQ"bf73F^ZfV(X>DA`e*\fcS#GbkaecE+HEtDp/,B9(2rES-o"^[,il!HM3Hj6#RpQ8FLV#(K%]IO4UK:`LlrrJ@%fPjT)("rVlj8R,bbT/7rS-M1<TfqFU7Wgibo&7*,3ZQ1r(H]HCUkFNs_5$lm^''=DVl3b7=*A3$_\,.TfUMUHn>Mc?Mt@9tLEQdq%]_6mlGh!*]P9\!-8&'4medL:D!IcU\I'ge(I+CrAJOLCcs/pUtMrImsINM%i8>"/9]^)9cJBpUOHLk:/2;\'+00T9h$ST6ddYfb@%p[l4Ln?!WEX.9-@00]>tHE)8TW@'n)G0BS;hY"':/tW/OqS=!I^q@5U@m;Z=a^=k[-VGe/$D2[]Us:Ko]_Hd4>(t:lHR3'crp9SQ%FoL'o%[^#+:u7L\41MEiWb_pjqKtTP[stA^#B8]FeXYOl`trUBH0(<hhkd@FLM#SAs86)%Y-[p-Rrr%_p>'bc[sd.OV,tBmPU_+>%V970EkBh-0W;DbF3j1[Gk@19s4Dhj]/,u6_oliQ#7AZp=N%=jh\T!mbT)3q@krn`0(4TY8#Zpk0p6c.RkrlYWo[9llrND,[krlZ:%T#?G?WYm1@j]+m*1q7J,7eWDh`Vf);<`/+$a\7)t4stgUB9EnAom=+t4aCA6Pd!s@^SGBbn^''MlTG,mM@&%GX72b9<Z/X/HcfB[%-e66-MSuF[R,srh18V-q`I/L8Re1mi1YN-8:,S=%]_o<]=6MjZr3LNM07V8\!\ISZoTqe?T@1Zd55W!,SJOM+2SJQAp*5b^huA1a%-?ZK$@d@<,pg/5]c[Y\]hehWD,iAHl-[q_s))$I-o7(pIAQ8n^;XaCr(S?*;\Y&lnVpG>:aY/&"/N+WS/!@[?qg\B2J+Q6\q"qg+%\W&uOH'KE3LX?38j.&<,4f;(;1tN0#%dB=6_;s]3G`Q8e^1e'H_$!"lq]+go=GgN<mPcIQ&*3mF8H2cZ1dcJaY_]i?EXLZ<W._nj%Epj<+96ZgY'`?92(8fXVSmXPU?c?-7jB1iE`POMLk`-XFQf]d!Z<_VG291b"^\6CAa,aL.ZX2d5a031jk2Zt1gi2iFM<h?.D?>1G%b,^S1GN+@HDE`4/CMpiYeBKqD4E9bnWsph88$BMdg(QF#I-YWngj/'gGMRPbmC1ntdg[\-^#l>iAUqh(X1@KGg[DfPoY'u[*;A<2%qX-EGCs@+CFJ).,6:npRn%Qh>=5O!AolZ:Am`*qpX0ekRCB3:0GMV;XDeNs-JPT3S6_390S[SVr:"Jn!e^rA;^tON4=)4;[m;?]T%EA]Z(hK.:c0EZT"eb8MH2neA!Hg7+qX_f+4<!BJ'Xec>ShYEV0:8ll2HM)D>gj7$*>,SFOj!?,mHmmG/D?Z]2n$r%FCLs:Qjit9j%m:^0JoahfH(#R'Y']B(cNk93380plh>^buK[t;%->MKA#YeX`;*9Uf[_VNXBGL%;-:<KR$UXrb#'1D)"o0P]M\-.BG=GHIV!MjqQ%k/Q_i3@_>ufSQ)957LG88D;)jm;Pe-?/U)e5jGGaqf]Mq5j$0eGMH-Se-]'i[F`^LNXgUF83O)Rq3p>FacO!gH#J*EBH3`LJ,g9+%ALMJ4;`uC*L4gRF6[!Yu808!@XhX$o'r68JJBg5ndTLY_*N"6LIJ_90hZ9&Pq$G,a+b!`N%4<.hf)S-3`ou!;f3U%g-><D.mFlRS%.H>mKM<"0D_j/9F^C^bmO<m5Z,u:SbM.B1(b:r;n"Sl@0lB^KE#bA:3M"47?V(Bbc3Gniahcn^Ze:M5fh:Ck+C8e`\a?6+nV&i.1%3ds3l"mStRCiZq6O/pB*&!Z,J;`@sb;)t$;5B.nJ4ah6cI=i2\)X;,,"UYJ7O)*8_J_kA220T%&7kOKqmQD"Xp]s^2?ubl0lVH@?%9aFGbhgO+I\)2Ao-E-<CV?pWn#0b=d^ae/`qsClKFt8(FL<7Mk+]EU@M3BmRGgjnrhfRlf2()(W*MD>jX,kAL)NGoOqC2S?-\<C"%$@o<?L@)(M<L1'o>Zh)$!k,^NA+-$kR0PfOm;5d*GDk1M]7jK:m0-N1A'6f3DL!%C*acu?YWTRlgYe5Y:&o_p:LT#QjZ1N'*/AJ1%L!HXC6ZVDE<8_U3>h2KI0$+cO%o;eU#*pVR&'_@C%9?K&6ihJEQ"&CIkbcO*GokiKW1cI+`3-F?XU8+Z>m5"(&)mh;9co.n$O3a^%%H8bPpmOAa"r:W,r4A]8b3nFM@Q331"GYgqFPL-pkXL?>HZ3G+DJj'&Ye.%2-M=^/%^p::Oh:Y$^\Y"7]g%jNmdo7=UJu($:N,+a%5L9?^#kd*R]5RY_n(XAtD3_,nE!>F2Y<2c>n,J<\IcQWPrl(MCqu!X0k(9`Lpuu)Oe(_'Ua.N:Ka$0/lTDRD.IHp8cr$QE4?$],Q%$U)/*V([#lRihLra$9NVIs^1307Ei)O$3EfDquN$CI,VCR>c$rp?hnWs*XC0s6ZlEq"e(,oXRcqeXsSS[2VsUp$?97Rf&G[rTR[;%icAK'b1FE%Q%/c!UEB;q\,AosI!V>6]Nk<X5PX.]TDI@'?i&42TDR-qIc+MH;-FIA0UM7h7Q:=e>Q4*o+8psj4ndO+ro*mirssSE%QT%Ce42i6u[#](Zs2G<$oDT8Mj<Gaqru\rGf?Ya4gZqX+*PU,a\?u4X^\3ruJ+*+QI-[t!YdMj(gnQRhMOPN;_3oPVFT2H>Cj`gd%CX=aR:gVo-4ZGJ_3SNB<<a.a[='Tb1hM0%iL3lZq(hpUS=5OEphpthL>G7]Eqgs)c"SNa:+-R\#m_NeH+:uL5o,n=XSh_If++).a%3*.j^(0u5$)mIH`!JeEhbW;u4VLD,0%PpZd'%s\R$C$:-[6cWu/t#fZ8j9J2J],aF^%rLdIq'`6r0#HDITuKN1)=B(J=t#A+='er%KVBr+@@OZq*lo%QYtR9j!nDX/+9_<[B@:4ti1gG_$kk:#@P0Ud%_a3ogQ"TuV-NBdTTN?_=$.,qp52@Lnt,*nNs$03nGUIR$"DGF%Mon5G!'HIi^oMa_?9kj/lf67I#U<tqJW=bc_c>[<GQR;&6.c'6'N"16D)"h3cq@uD)$#]$^^6_e'#]^/iQIX:N2f^shpNM3e%ih9%i(6fh2-<k4&d?^Kn[KFNAV0%aC90U^no-egZ>*'a>_p'iM-;d<gb0CC"!6+:i)0^7`rp>J7fR*A$jWjY"^`W#E&:e-NJWBTn5a2K%#XQT4G=rHc?[.T=0e!O3b2HYJX1aH,$N:;<H3j`0B?%7HK`N`PUEFqmO`$sS&F7-`o8pV?i`JtT^KZ",p4T(V4Ol/#YIh#eY?)Ve%^A21-S;$t\>\P`VT[Z!&r)`,TA"MBRbkWDB8lP8$W?#K[e;fVrMT>HD#0m$>qo,@V^M#h;ReKGO6.3DMg(0Y/h9^VtFRFnWK;NQG%Zl_,1];>J!C"a$P#>NN^Bg697G!l!ie+%1H>GD(hBt-k2je'^\Q[^Xf>lHbM5F8DK^.e94]'[poWR60oa#fV#h7kB.r1uZj)9nL'%h1q9h8i.VZg?m=9QtW[hk/0I]DJ;:*g@n52`MS'uke3AU?RV?r'`Ai#hYj2K!g%H`aAM`;FWBK+Q,c[l]&f5^:7XLRl(#k\a%i5;%]r>d\A9;@\X6K=V#+']dYfBO"]:q*LoC%&$iJ6<74u3l>Eh:]d+sqc!*]qmh8tCIh7m?I]Im3PT;uc[3-U.+8o;PRHWFPebIGf2.%M7R*[_7t?V^RkGpo.RfTo#i[Ls5U$Wl\WB'0GUZNEFh/7C]=5V?[hisq.;O0e(XChJ,,5uo.E3$Pp`#e++!i6rV^k'J*Hd,*e.k6%=UP^jht(d4(u09.o9Z'E\+aRP1%7t4mYUju(B!A&QT;8UmQ)M3k/ag=q1m1F&bn`bFiQ2nY<3O^s7eC9\+;`Rq"`hs7*C_QNN#F>%ZG,AZV5GA+3>(g4:PBngo(2#<(W+MET7>jJpC6Vt^gk[>,>VCP53/Of5<*X%+Q^\dY4GFg5Rf.AdA,Gja,aJFo[M7brj1V/,`n7n%P5tHFd>+?oI#l3=s7sC&;b+%$nrB-QHJ6@B6;N#CoTl7BN]1N5n`*5P6g0:K[&m(qd.TLL6f0ZiU$p[E/7UWKX/!9fSj7aS`&>BH%a@GV//rlbk_Bh2CKPs*OUIq>poX(P,=5Gk*_>gNS^WXrqs71eNUhWD<k^)h:/9Fu\h09pqC3cn(iD72e;_-!*eBj_q1Oj&:`__LH%C8f1^KIfiNb!8o_5L:#m`^_q(7Re%6r[G4[Z=1'na:Rl;^Adk<(0iTf.X5XpT6gE21?Gip30BlU62\Cfr/[FsifWg?mT[hH*^!#F%M$HdQkjtEB4Sn7(dBmC;X.^JjiM?1Opj(cmm>5_YiKP\*45n\H5&btam0<1H<Lf"d&O1O.2MFThfHi6A$`l"F1q6%C]M?m_BC5C9%fNERj]8J3.m1lggU]_c%fa4,149@l2i5$6Pm;QPnKE%&b.gR1<_[><P7C+&T8!E._%F?XL_#;kAiSdpo=2)aO5jntD-dCZ2/hB;o%Rd28bF$k[drEX<p6SbH5TN1/;!Wdd5?J6IH(1RnVF2/)=Aq&eTTB\-B)!ur]M$uT:ZR;H_8"]K#2U^!N4U@)4Yp9-UEIeWK3P9"1%`URJ$Rnj$0L6!hkX*6ZD9+T&C`r"-i]V'bI:K2s<G_cMf1,uTA\1gd-+Iub7g,D-t_MLdO95"_1Lobo,H@*U3/b:]]&)Xh<F#6(<%TIONW]"gYK6^%p."J`klB?fB.Gu@q(%kiQtk#jjK%j$GOi09.=j1)6k`e!j%"3Ls3hSX<F:Y2sULb5GiV?3g`OFjmAn*n]p7ClqD%k`84pM!%l\^p=E'B9dUYW#3A1hj(CsTdlR6r[>GKm,pV4./a'3llu?=IMX$#Qf*)XG0Hiq4M#.tqgXN>5P"FW*jM/F?Y/D'GBmhf%I>Q^6'CpoJnkM"?^A`ZO2#L+njaR#Tln$NQHi)qEcG/arT'_'cl/gO2q9Ark.KdHCgUk&'ZdRmL[9G[R>:rS*?6rAl;&2Zs%AjG[%q(=!$KOWP3"g5OoaTD3E0@Rm/4;4idiVEF7OkQG`:2194WfNj"J6tc3T:FgC*dY0.LZ.0Zo.kNa_?j5Y")fd-c5d2rBNr,[K]b=:%rf2bHqL"=%VAQo/":tDX>R\W.,Y<o'GWq5PEA8AR8jl!E1kgg4+D7L2U/dH9@a[V"Oq2A.%,>/)oL$PkHN]dH/W*[A#pYe8k`i:k%.9I:bOmjW(3_PnXWsLUjC_ZY!@Y?6,I?6;*__F9b%u0[0'[>Y=!,UhGN1_Y\C5W*/.0;nH;(WEE@Kjlb1bpo0l5Sh&r.hFPV-&@U%6"3`nDR<ja=06WSA=u_YisDiNZs3l"!N`)AG]P&26<00\(ibp.Z&][@"($F'=u?jeOgpK#7,&"pCmlaAM,k]':e?,@O$`S@5V_g!%PQS7RV^\lI\e+uX!fMjA)1W%sA8s=P!2Tt)&#7!q'L2j1=V'h.BjDnFi@1/rV&79:62AI=cn1SL7nKAbZlmX:4SXU<);%:r)1\;5%./G5tYXs]&Sg"<B$m:jJ!"'YU&5c?<FJBK/+_c\O<e=n.$nKUWLa\i.j?`q(Hisd*g;h8?UgdZ@D1_l_!R!%P)bX":+n2"(bQ4$l%3'"@>#uY:B#s9bY@M8lr_CQB(+*P?u2b@=]L_4Uq`>Z)nQ3S'EX_pg:#fkSqga\#9Th-LYn]F_U04;3W'ML;,![q9)TIQ2GJFq6r%()@B(_234m6'Aa>"ZCq-n0eQ!X1D;'S=X.-!@K1DimT0E"U$pqBF?hn<Dn7A'Q?t^1D2k^+g@[Mj@E/[#s^seY6\MW#?Diq%7>pq%$^`34bHaA<iU)4pY)#F,)>9M_=TE#r6KVG?E0>Ra0Ed#d8=%_i!PtFV8nG7AL]D*p!YmA?@=aGpE^=t1$JSOb:_lBbe'c+U7K[%p%I6O:+&/]I,GUu-j"-^a5)QGY74*2L&hud/lXXaT6!fW\K@`Z]C6AUXH7>d6&.>:ZdBrh^m=K(5DO2>!:8sCQs&5YX>]PP0T@_tM(%5#09WGl*k(9L?QX(T/mMGXaB#1/l(?r;q.rUc=,Q%q&;.AI@<?A0YokG'99E`q&Xoh8CN#D>)HS!q$]8[>eQcanZ!i8b8H#p!?N.%D@(p2)Bqm*1e#jP'MO]g/lhE2U=(/C=W23#]JBgB"3pGcE7$4(9A1NS(IO+l!0i_b!m1Vg7'`O$E%iFd\Ncn*dLPf13E!G6:@bkZ%!u+1^Kp9@[34T<@,q;(`CnFK771M/)Y;u`B%l>@9-ZUC>fbH?Uc]/QTTRe?RLhF2<fhs0U-u?nD8]Q!4O]6Vp'g35Y5-D1nXe`mN%:ibK4anN]0>QY;J%h'=`aJq#(#%cT$#>t:_q</ZUA,2LM\BAGO`,-o!L6>UbV$^tnK;e^@>hBLMU0N+uB$?!s9dId`D`mUl]rmU?%Y!P8C#n$Kc76gVXb`#t"ak2EB)WMRNaN0T:!VW[UM)<Sk2^asq"+qe'LpdPP,,rm0N/D<NTaJ-#+)BJAXLPg4as<-qa$_@V9K%f]%4?L+bAnSk*-1T,A;SISpKi=cl<$P,t3;<W/_9.340DKphl\_n7iIMM2O](t)icK1Z8K^FYQNF7S01>K<N":8q"H27MQj`u47:WU_%(n))BZ8<=Wi955-/UQBjmj>=*77282HU?p7<:&!%Pj$JNEi]C.5U7aa%,R*KLNN^?!JN[A%Q\/*SWBQ-8Vo)G]O;-r%SD4eMb+01%-XH!ea!JM5A-e;MJJ.F?KeX'@MaOHKTCS9PL7gthA130K3CD.5M8MT0i%\k8m(jj&)+JeR5]@$/7AQ=b1Nok4dKoUsh2EZVO>nl_%d69Rl&9t"-0J\7'ZD*oZd:.4?P(Mb*l?FFtB_s_ObG%Ne`\#/XW!3D5_#3!N?ld.O7CPs4$^X<6>'(/L/%SY:U9-<H&6lB.(fJ"7%%o8*]%21#j]'Ttqi#E3KYj5sF;W=4]CS?nRL0]_&Pl'?j<oL4K8[#?k7j)sn8uT7b@rF+PiSK3Ob3n]cj]#Eafn6_BG+"3a6+XlN%[A_Lu/iWQ\75tf[6SfY:0JNP(,#Z00lBSX$N=-F0f^\)S3^?16^;_[$Hi9bklehHERYf9??:3?-e&_JpVZ@,n,OGVb+6B7CLB\N(%.:n%8MkUS*Jetbi!aIg1UJs@lZ;RA=AZ8K-gnub?AKOUg&lp)-(G_LK!QW@hcr(D^<G@&H?jW85,@)D,+Aop/@U+kf>4ND"P+bmp%;SV8m=C;8e+V.9(qqsebl]NCe[^C8+N=u1(6\pj^#94A%ktii6<`,Y&I&.ZGb`sFH\P`>J05JX_;Z<;`"^2/S"(R3>K,Udg-rM2`%_br2mbQ]5mGtD*QVPtt?1K[)J$<HDX$>ULi+G8cea%FL2gHpfraD*J,.FEl\@*s4k^o3-cdO&=i(U+M3@=gpOQ_at>_Np:Z@-Iej%WBm0qB16V<-S8?f]Y)Apg8<8tN)U5O)*X.;(1r3g1-T6""OFmV+7TBRE)QNNhN6!?bPhQ=0aM)b>B.&D+?:N%enAZZQFnZ0&i?/O%OOdH'?A',.Jl@78]]>l@8$acjXqS+F7oEN](=t(PCr4Y[#S6)?Q=7_r5_,119Dq>\91gplf=f-g^N&F'/4N=Qeo[4A<*r/@fX-XR%V#XFOM;EEkiDniRD6X(bh$@,oP[_!r#h]@h)>qo%Zj2D?9S8%`LOa_cPsVic^r"SE9ra)5eG?s7o)bmW_>.3G,-5ZU.?k-+Ga2a;%)c>YP7H+5h_q.6_A2@[4HqTUtq]Go/i;V(5%W8$A(12GSUH\;Gen2DA<<YHa)7VNJ3s'CU6o=NIJYfU&=C<(InH&VUmBNeq?W]l#%D*q=]Or`d3.od1J_,1pS<8j3:<T%%70L_oE(flq+nkc"aU]nh*TPD3Wj_Otoc[iTH7_j>rS;Hn(*[pT_IBY425jkP4%\O&RdfPKF%5S$P7)F^7!Z;8^m-If9c"hYY]eK6ci/</Q[![%VRro#B@Hn`FjWknV2n4"dU(-UR+'LQq;dfM2&UJaeGBa%F)d"8c7:gE)E.Cd3U%<u5='(VnO[V]E$%.Vc`6&r["u#]d_Rd"8,LFeM>C`[_eIh2!!D%e#[oCc*N>M;Rhm#k18gKYoC7GPDFP8b;'ke4h+,)phTfcu:6U%o"e98b`:8/\q)T/.(&ZrZ8)lDS-3[O1J6;:$<aCoT\Ua]k?6lV=&k([TL+?)BM4Q)/!VL`m9-`t!us4E2K4lD-#ZJr9(;Hf953dr%9jY_s)B;9BFI)[,Yq7oC`Z("`rsC(2U:n!+hbpkcj^G9=?UEGb:XZ#C@PO:sKJRQtI:"Fg8;c0%.4);E"5TTmk)5E6jH=*M7L<TF%36d.d*X/YQ@+F+W.\/DBpCE5J^`\7QG$m<tnK!6;J-=St6jdOo(CDJrGseL"#/LP&jkf0/TnmQP(D@d@c*^dbV%!PrJjD+#`=Yla%E*!uN)<d!tE726uVBfnM?kf^b6-k*+E)>ko$+0"+mq`$PLH*[ZU@J@-''<*$X),eG%q)i#!MBdDe@8(0M8Q)D+<hV9'fTGDGETln%+V;=RbhJRq%;(e.WuNIBK]IAXP>Pg^0\%S*!4e#Y0OU"\[+f$4GRuI:CWI?t=PTch=:>K[8;9!gRrq.M+Jfd1e:<)&%7%<l.O4@5%/`X2M2l[X56Wl$W;V?I/fE,.UF#&n>97-3R#q[)<;b9iJQkX<ag1?!=*LL"jPKf&<ae9"&#Idq1l6GtSRPQu!KZ?kXdj=L1AF41g%?E=_dRm=\efQ7PB19lgLhD(0h,kK:3cQ)^g0U>J3J9RC89Z9HA8RU8c%a'naH5n0m@c2SnBX>Sc:oN?$QLGeh)M'(HO`[[,&K[]*%!(A<[n;kITIRW#t"]o"2%-L.ck4^a[_9H(GSlN@XTFcu9d*ZANSk;*"NlfOF`YrV8L/;D9@!KabTEpGG2EO$',_-;;"Cdu,bCjk#%J.r"bIt416raS7<mi[&J5B.%<U2sD\d]tR"Anga1!<8iaM$qra&eMTROs&,4lJK=bldL%.kO;%\0B#5V.M"(HPXGtlJ`WZsaH@@4%>u&FN%fEAjanmO_7LBFb&iGb=)W5a/!B,Z5i!uC2+oOdB--,f-Urr39o!2ATL9!=@CdO8M83a^.9l"2e;dsGmZ'::\Gk<b8(q:24%a2.kR(<tooV,ah'VR05.XcN[h"3D_NTe7$J)AB7uMr]ksYt%I;E[oupdNoW^)XgKLHX@!U!LsU!9$hnhcj+#,Y9,_KkE6I22^g:q%7oF%4B#-NYiMhb<"5m(I:\T_hD+9d;MQurBFeq@)OG^)SjKi&^b:45&SfZ"3YQ0O1/Ke@.-?dXBIp4HrEHjjmF[q4^`o0ghJPg$7%"1@FXW,[&PA,2ib?\6s)U6I-rF@0>R=7"MG#'jZ`_3.Hq]#(3Sj.OtNqf#pPN(]GZ/h!-`0Nb1PZ<'d>9GN`LF32Ws,%6]$JTNZ2%fE3?pI>&>X(Yb1'-jWKp2ZA#RqdFD"X6N-5=3_DO#H4e^X^Nm;R`i/%_V,q*M\VS3iOJpqHandFetQ]?U9a6?>aDK>2-j8Rm%.</%#AbITjl"r[U@iT,1]<N:@_/:2ObkY^29"W8b++(q!FK@!E,B76-)Xg6Ml<-XPN=g_`+FRE#g5aLiKJd"nQ6\p7q2!t2D=Vh6.7K\%+j4VZ-M-aQ`[=]>*^s!FSBR=Xo?$Y^n6otK[M]OOIT>-5fe[IqW$e"]FtfCY)7M>uks?HZ@nWtXOrO4m%'Oq5%ZEk.UI0`97aSh&%Qfi5I!kZYIp7[k_&).dLV-!egL9n/X/YX%l6EY"16htQD0sMThAFD$)h!c21A88Y4eSX&YA@piTHlO"bWAD(e.^(aJC["LoRr_oA%<7tMMWe1]1dO!:Eb18*UbG4CD$t`Fu@I]KcbFuV;n>6p1XsJWG"<Lm6ZA7,?&5Qe64S&+EY>WhOg<FI5QOYQY])Y-$2.i&eCc5WH%AeY3Vpl9&WA#I$o;.o4AU[\+@n=*+2>pL:<DF4'L1N`+qB9&-S+*q"b6<,Z2`?gk&qe1Di,52ns^Cr4=W^C6o%V81+&AWF]@3UEg%EC_^d4H.Z@LZ7Eh\=4a\LZ1"i>[8W#&Gm,s6\j#F&2/BP(ut,'0S-I:k)R?^htnGdOX*]=_L6&>l4[hQ>5/-g+!Y$\,j_3\$AABE%>h,gaIBj-S7:)"aC_,kmPf.!L-=PE=s8M)[c%_(S.s,;A?5ikt3eKr<.0?>E"Q.0TAX@#SME8sAX0R\LP/O@EB6AKs\NJ=\a@p[E%'+K@5Z5/4BQ3#G83bS`W2IN9+R^BFoI:trUJCV^PKeqnTl"i!:!5e,jM</fUOpE/`'gi,ZmdS+UPEdA.Ti<2%N]hpm6npFWS0YA,%_!+t4PZ4,!>c_Oi#$eO`#+57nq:%'3VC6P;8Tia6Lb(O-fJ_]-pMH0r]WAuQ'*peEe;fkY\noBG-%S($1CiFKSpe"Lo)4UcI*EkR%V7=F.]WcJQ0C&,_TbMA=W_RdYS]"#h=`d`b@I[)&d6(W%Ui`h&k'Rs7P5a-CS7iFD`uO%M%VeiuO9D_p@j8Nk]Y(=lJBOsY6shF`%HscTcqae(8"6KbH3jd4cmWTg;'^+L/Aest^Daq!uN8JO[^g.s`?S<[_n-n;g=^U\TprKhCRd*n-'&2[#[[;J3pA\s+Lb=LG(Nm(M%Kqch34.P<S?n0q?P%<iEH/,U'S_eqGg)@nLH,;VH$0rCF/ufI=qh.>A:#Ji#&\m%1JYWh,HL%CFVI!TUgWrR_AJo_MahXt%i3L:t%SZdbalgMThI(3b'6W4,I2Ib,:K@cg9=$n"&jlaOj;i*'[W?fO,QbquJUAT,(qpi/Ya[=ET:MoqH]2-8l(:0M0fcd!DIdp>SIJMLt%%^[`3RjeEYonda]._.9rg<QPVj@2!?XMqRl%Xd/inU)gcpF)CsMWV:,"/Ha$FE4!EQ`]uC%+=5GdU?@Y5:!rM=hV#Uq=Mr>Hom>E%?h)fh="*i=5Q\[fJju(L@h4a[g\(Wh9qaZp>NVi^$S<?`=4QrM!(patFE+:3;-.jNgm5!TEWs-BT1BWJN\6;"B+i@POVR>U*!Ir*%nE1@nUMDa^5"j>_>#=+u^BDSk[SW_PXVm,!qWXI%K^V8rKsj*Z0HsmSOK_92;t41!f6CZ<!@C_W*PSTs*F-S\FsW6\A3(1L(IMUR%'nSX-K4VuV54LCOoP.^)!Y]r(-@tY+](R(>cUtDS;ul?0`D@7!mNKSgMGmo;@iJf>Neq/>e6dbogNgRNMF=@[d<c3,(00[PYH$gP%U'4&[Mt'BP-"ou-_0K<_Kq^S(L#PB5R[)RH$'a'`bOAt3$%Ws,!!D+D"7/CrdG$Wk3/Ee%^B#H#"4GVU'6offH!Z7!6*)?P!be2K%Oj/\]_QF6I)Oc6\dthI:if=Kunje?Z;<K>s%4_L;g^k@D&<I"q,%YIklmPOR]JPXH&aVlu"185:*$Yp%:V\oSO]Y)822.QuE?0_)%JR)f_/rHqBmkgg/$PWa.\hj-$85``WJ6hY9A'3cNBV\&P^p#X?;[,0(MU3+leWfR0:hE6?-OE#%8gn9sK5$R#)*Cm&!K(>t;&?Fa%pJJ:%)PI@[!,A)AJQ6/-m[>M:W(mh*<,k8VW66<`(u,V`WVgW7$?mJN1E'jRQ69/YNLh\ib/ndK4!XjGM=I9o,`XU2>ZW2:^i/q.%`J'NJN+=2RTp6E:ck8^]s58Fe8j4:qJj]sOfTJc9:]a:);P[3T?V9UNTW"!KP9),0PYREV`!)$_ljG,n$^_jL_BqmGA2+3DTKF-A%\LWhR16cHkV30;s)]pmq,g@HOP@V]])'#99Nq0E-&!$]Y,-upo6!FD9aNITBTF%P$M91K*DF>cZal0^8J>t_J(<I]be+]&\",:TK%?c8WO]*lXZ8fJHZ8J,[D0+p/e%6$dMj,OP*=IFju8Kqre;c6mmmu^?g=%^&t:o$Zo@$#f!Pmjr).AkllajL3kLgqX(i4'us-lH=+%%CD6rV5U[rLj_Ng"\:?8XOL<@RQri9<"!$<5&cP@H!D#*Pt%4#71%"m0K0WfbE8_;/t)s%#4NfhD*f.P1",dCQGY3u_Ot&`CaEm%%2&(EdJP[@R_^^B]+"cT*X67k&VZM1.9!A=-eg9?\TKcmpX]^8]s'&;C?#o#KlUZJWq)oh@g9>n<@5ekESuf;Yb<]QB>*.oRpi:K(%1cdO0>XPOeK#@hUSb5hSDdN:0`d`'Xh[KLRQ2^L9^O=Pf/H2-$k9Ko6j:6H[r&5r#/P$"9InL'phkL5*rKb+_C@6G0!_6H8Crfh.%b`b^9WA?QJUY4L-(,;IOGB6p#p17J?bnZ>u@PO?dQG,>5Z_[_Zg-IFC/A<+U'o:uADr!eQ/h^:UFrUF!+9N;'pmp"$Q]es-J@``Z%S+U^R_9JHn6f`>;)_Z%1k.he-U"?K)Ilm#0nVrjpi`n#X^4T/*B5F?f.%6ks/mHg?`R64*[:u/<f.W7ZH#SmAau!XKG`L\I2W4(k%MHO=W$:+!tFKsuaCk<lJbCNd,OP2=`<Gqn>hRY$n5d\.hNTCf`J3,8*pWa7=cX[\\_nL_gn)$lQ^gf=-2u1s,W@5ILc0N\CO__];%./!\V$7`cX8gj1$OZa?WV5Nfa;191LX"dOT3>]jT3`Lk[eY)*$_iOj6Q5<6Q@-1K29G+MrP35ReRn;=A9KEQZ/3BAa+SSG]GMB=/%<$hVO-#N8`#ff?=GQr;bErXY9q_\4tj902=$![@(_083!&c@N]H7::hq`3E2%RCV-U1*fUV*ZoKIB]%(_T?55+U0a-E(U?bAlfs*%\6]/=%M:/)#[1D6^[D`[`WrRLKleenWS:mNoq9p8M-dVn=#Z>BND2LW,sr`T%AnCF->q75WF,Cr'#dR,h%B`![T>:]_CR`TWE8iK%;T/b,%I!u#7oGUuo73Cg4E/Z\Ok6PV]!7P)dJ7rB\R$8tVa+L'VcVu&%`.LmbhbarP`I0oE9kGn:]Fgc3bT/7PJpW*^%$MhF9m5h%UHTi5=6rJE$<WYP+A%@\b`OAce$3B1Ym)$<`LD_b_j%8;0\J1N/8WK)&sNrIN$gp1P*-b=6,/Zc@;*)KFDU$EV4;3:#S$?e;DACV%XO4@<+71jY^GnbL^VhEj"bnp?k$h]uiXZ#%;@,iZ:A@dV\UbO1&Zh%&.,Gr0;DhenZl6;s.>"`oX:.[8#%BE]/0siMP)dZFrC'49%OXeB%;X%0N!I<0_PQ4`Zh#ZuQP]K6&R>k*\,O$&ik+n\l/IX!?WRA4iI$Ra;BS6T(KX[>%Dc9*3'HKfecDWcLJjD5'V&6#T&VW6r%nkKdWFW"aQS]UsK^hDhY^k*"\:VjUHOMu;kPB7McY-SJN3Ji+9F3/e>VEYIMdVa`O#e5j;3G$\sOEi,>mW1t0LXr^G9?/f-OY(/4%UW2Rp,h)^s,%,FJ)ipg=1CNEWd0q29!Xb+dJWLdJrHJsp1pGLc,VEX3KnSWJ_8jB3!pT63hg+<FmmH!%@5V<*a:B"/&_dfXZT3M!%),jBX$)@D(D4M@u7C!bYkq$5nGVW>m(M)jY!M@M]S9,b#Dh6?kWpo3TZpAB\-KT4leXD%SF<[BD)9Un[OE!sm-&XI0;Hg(o/0`$5%3!8$Dfej::r3U^bRsOAHKB;%7l[^B1[GB8`'t.#N2'@NUc'F@OJP,&48P#C5ToKNjgdX/g?%_GO%Rl[_I)PtBB;=D+A/.g[UbYKI%Z\=XnbKAB@2.9p5ap'F'%7j;P+QI2=U/kM%MC0h@1tL<0>%9G=-&.`;B]2sDGlH2eBm+;A'Kh<ABP(/t/mNjZmq"uU,,;>[QRn>L%F!d-h)G7Q/<uB.>ZS6W8DJ?_?CK9e<"l5>C"s#MA2=GW:Oj&-,ZXAAY_NC5.UuK1h1=@_PHqAuo,?n_?;^eM+$/>XrC.W3"oIH9O%HZ3<=*$9hGnVMEdO=d4K:)27K$tTX>%d;kWP(9A8a4^WU:`e9G]JUL5IDt:nN1,Rg-nts)'4Sm$"GH\5O]ZDQTXE4p<fSl)pM>K9%<eTQJSnrkn@nF<=,:99fB;Y;tk\,p.X!6=Z$d'&X/ffGW>Z*7L4B&In.=`iKDc$$$%Ae)THco?L2Z-ao!"U9AVuRJ91V5Zhl^=Ip%Ok'qt+\\T:-M<6OC8p,_/"WLZ/HsI($JGVUOA'[>VDo\F5k/ZfLfWpp@+$<ja(!"C6`,JdCrX8tWq&^jTqDd]8J^ra<t0;%cD,A-%NL1/_T^utp2uq%^in4Y="cKN.J4.M"[^4=g:u,<+o8,S;7k#+\AIoDp/<c3>&/`#Q#ca%&Nc1s,LMP$giIUS*QpH9fQ>eCd->#_:%(RlH.W!\a0[O7EfY,B]>F(#8,E8!iS;1+'m_YHZkBJR"DVHgtrDTnM`C&hAWX0da(hJ=f:D$+Dc..;K0*b8-R-9dHrL<M/h$VqUT%Q4/\XEY[cE/@qCPiiK!Z1\@[\a[0_eUY9Bj,RMP[LI8[#B'$*J,!_E,=i/,bCT6<:beb,\:^iO@:\tu(XM?I*o.P(#NWlBn;Khie%cp7lkJ'MlAb3#Ce(oon%!*fcK9fd*cC]r0RU$+h&b@H&,1o=cnb'njHB/+V*GqbY;!Ok3<_@n<F4(UPAe,b2&KZC>c>#_tAQ[o32%!1eG<T4UbXN$hOH`2`m(=.O?1j:oB<eljV3Y[FWn@/t^R=U5t^ZB;?lS(G0CQ(ZZ^Ji*_hNod_W>,lE>b>d5H<DdT8>%c\c]WbXi%4e&]S?0(m!6[MY6*b+'Z,`>j("h?lfmQt5u?;R_:"M%s]&4%BCgS&(Z?H3lmB*Bfq*#e3%S4p/",0'#(JpGP\"i*.<q"=e*aVP\"%(>lK!Sp^'$i2ZEB[0^14(.TBi/s_WilAB$C5WW1;l48JreOdN(Lo=aR@l+m&_5dboYF-i"@P8'h*6k?Z;HQo7889lq1W=#W(e=Xc%WV)Lo@hU'QjHNAq%mlHr6m;lD7np??4//ikCDFi7\?NZj@R[ZFjag)FN3/]:b"OQdeQ4V'AKu()#MDn`)qu7/2"GV%:"=JqPb)S'%A^\(cjT4RTqU`%9XE0i]r'6(''bd)R<1(L&+t'<km\*T,@6''s[DXA[aq^cG-U.n8f4)^4m"(rhd2UA2;E]F%CF#P.p?.A.Ab0+,%e[/o<+PaVJ7OVbDD`F6.`]$218OMVW:KceEc)%5ImZ&f=3b'V.Y\A1CZJq)\d7T1rKc5!b][c;Y3bdjDQr]+p@A5'#[%uD4GT,78%9kJ>F'e!<@QG^nE.EU;mQHB<95:Q9:X/,qd@hgL@-T=]QCRJ9SD*=R0)&[!&XZ-spp2D@h2P!IsBArGSciNA("tIU3)X+-R:Ua^f%b#\uR#B`r$$Xm%D4LkKD/Y#b1M4@Q4!iX=99R9=='NUos.U=oiZ6]4eHtjVK5#WWXXVo`@*#k$+<bS57##tg$mGi//YDcb]7`8't%X<nFU8+8poK_iV\"jTeR/WpJ3p]KP2+@hZ]8D(o2Ke)ri76B<n*7snjdWAupG?/kI-.'?8WE%IX,n%M)`O+L0CN:*@2[<.e#DacJ%@Q)R66jT6kK&aSiAB%K&SV($S)2HqBLVB*"<e/0a&fK&P]][>qQms5Ci3sKT"5/h^#J;Yon2uoeP+ng.\d`m=:J0)4RfbJo=3U`%%EYPhk76Kg*TbZRS,9;+2mOsIZEki^7?>ZAMhh:&"A3q]NVP(c-AUr.EF)orVV>4*,;9E^k4%_WDGoG#,En1i$":QhX/sir2%0SXf%N+EX,]Y2gV<(X`!jFK+Ql10^9<NPC^8W_Zp\*>c2!bC"4<@^`c?j2Uq^D`=]5$L=L;,b8$V[Gp)]U'mTOs8n:ba&@&?rVis*%.\Z%@1)F&E/^I[.l\5SpBFM."oaA:^]<g2,pE<I6`+LlEM9d]VQ6[@2VU,\2ibBM^%oD0c1[,jm9l`uc.*M%`B8hYG,ddNf!kBKolUd$%4mgY9VW$BZ.F(B!e1g>:)5`uJ$DFf"NAdN)[q"+?dbEH@/+aU3-uY*O[j,(GQ[f9uJW9Z6BQ#8^S-Z"']&OrpVeMp-WG#`N[)[kE%c?=*>Y8B=4'O^(ZD>rp=[,<$n-uQJ:Zh:.cLhW4_S4tree2Th]`8I(-Z3F'+kGH98(B'F_ca7tmC:Nu6hTi7E;K$ouZeZO7F-\#Q%^;P>W'/;#C$B/&"I;+EDUjLRsmH]>J@W7O#-T16mD%+D*kY?&/:X]`l"%Y$IQT(5:i*55:BHT$+)fYC])uLB;q@'602O5cA3/+]A%ep'1B)fl0AR?`e-^QWPO%@h-:D=%cj9gsZU;G6cV@/X\-4<E7/hbpT8p#m`?R3]F"/tZl\D,2_o-3@mo:Qmlt\leMn-Q71OrQW"r%K:?tBPO4`DlLefL:"udU_]<'$Ha,*?ESePnmE`fXaO[J:;T9Oa%2PfAgUO++2a\78p/KBX"63#aGIcLGaZu:6h8VUFM`Q3;".f*@%iASMR!95i=^t*^N_<c2XkB(1,SQ`($6>3te:=,\P[\Y#TaT=QANb'?*\cZ0]XBQC`ksUaYQg0>nhH4E#UpbD0%pNK$K4T]>J^cZ9%[CQACI;eM5FGes:B>R"Q4P1EU`Q4u<C&j(X/CE2-*H%W=4W@ZNSscb,Nl9U,b@i/4JcWTJJ59tb!!NR<!gXN%86=D&"A1GJbZ>_h%XWUXH1Xj7GoBb/?Ikl,S272clg'Pf/9aq,HD/-/Y5IAl+TA5AArM'hl@K.TAK@0F7969d!:1?CL]@p2H=bNVP,GrXg$8Og4anJF1%2O=lT:P9C;T)``0\[B&`@g7u*`*D=2YE5m8!G6L/d[SR$:,2.R1HfE)G[DrHK#)5:CCOg.AN_QO*EVi<iY*A8LoSJJdFqT@77(]D%5RdMC_66$HL%08kCY@R)a^UfjEj/XqB;KJk<IC,;IPtO@b9hc\g[V*;H9RV6Kk/-PQtm1LZK(Q8257E'Pg&=FLu`5NLJ.tcLWk]j%T7:F67+0ZN?B%3E*V+jfc>kY@qfkC%M4O#Ws2]4g3"fI<j9]j?/J/:9[c`bB1`1kZ5aq)/;/ik\B\.X)J$Qd]7mi7L:lu_(okc^Q%TW,1kBOPR`]mV53:9>Qi%_f=cqf6gpK$`5fSC)>PA"\oh&#K[_(0XB*_C3r>5L?V+W[$3R\.(9?]GZUYE,4(`r1MR'`ZhWs1jJ;E%[e(;9'&3DBe\R>+`RKSrK(Z!ieiu0bh<:E$*/I&#r7GhFZ[K?K;PAVNi01%(nOR2e\TUoQ9rnudGV#CPL9e.&Y,BUl/_:d97!FJd%i509dKa.Qj>L*AJ&/s[L-Sis3kO.t]B3Te!eiu1JfVY*c87J\8DT[njaQ'S^)P3PfQR7r_`mD;h:9#k[r"P+(pcQ2,)U,[lQIg"Y%@V7ej>\JO@c\;XnB.*PGI=hq?=mW!Ddk$lu2G+R2Hsn$DG[^o.N6D=mktsSII;/G:f:deP9447,m^@6b'Gt_0a[W;<h4"r,EoTe!%!=3[`0DH7j_d?6N,(Abq#G244@9Ke2/.qs6;I'Mpaq]Op\K^l.MX&9jA[mQo.i<iP`o4+_"MtJDPt5$+'EV1k6*5g_;(0@527c*e%2410^_LbtuaPH3KM40OK0X@A,b,>?!r+:q3,2Q^f6&`W$:$l9^]F1$J.4G*LE3IL)0b"LE5L7DQr(:>G"(a?sp'3oC%(I$`+SoV\%"m*%-R87"0i*Ij^#3>2AF>VoVjK[5-`Q""4](fJtgSjC5e;CM=<#1CjVH8YRPfYIk`KXMmhZ40J<.1>lA#`Q[K+UP8bIT.Q_;Ac;%3bfj"RI8WaMX^;uEDb@#.3DR6]:_i-QnVPUb]d0k93)BNPn@U"0j<>5[OEkcjk[G3;7V]Ln>\M_;T2pt+d-QSC@m.!gEZ9u$+V"2%pbUP;l.IVPn@Vh]%ZL&BMp?>B7*/T0SM7@bP:sGuq<dZ0nG7YS2!Ec>3a#oG]G#sq^*OI(#.K04*S:E,Dp"sb01Z+s(IJ53#rl\E%@k+BeEj4&nT(:BM;o%^W`I,[&P1j4,RTIaREqFur*u"dl:p:C&g@Ll(%MABIdnMH&@7#fmF=@jnbu;2S\;pAu`:*$b:5/OMR<nn[%gdFX'1q(Kfa8.0045F.IBX"o$Vht16E![O9XTo6N68`6SCE&sX9/rs9WQNn-"Tca+Ndl/DGqlZ1JkuOP3;c2dF,^i3#3..>+Yt1T%^1B%^)/JW-NpTBO/0EW)0+32$d@5j2-@khF&hJe#'@%&%[Bh66SI"FVGHQ*Y6G%?b@4SX1/k[VXRcr+]rJR@OVJcZb[9JbI#pR1l%<hK^RgIQ:Qoguq4Q>Mc_,CO*R:t7NoA5P5rkmT4kAC&5)*F@D.Xro3s`lUq,-&4hQ@tb5-C31UA.Lk`%:":gta,@C#`L4%T7M]QE%b./fF+g`CZCT_/)i`[Gppkd;<H)eD`\PmPDe9hU?\=7iLJ;hl;=oZjmC]dM+<[9k;ckk4L=9fQj6@eePnV<:5G)qQVJbV7Sj]3'\%fLcVWTnO@ZZpn(t\qNs'3k&Zc-k'$4(*_"ukmjN&8sJ3s8@`"eZq<HS6k_OPnqt]gM1oo#O"V0!>HrWl[A.:I4senrgM$^k96(R]%/h=W(jE`nBk3>3*ZWSf>IQN@Kda"Ers$U5R/<I->4OlMn.prNpC[`ru\Oog6KNF0!pjk!_-q5Q<>X:Xpp??)F%\fk2't09n%MJ(o%E'R)<PieM8O^+PD^m"m'feuilF`tk/m,l0j?g&>Ib7>qr^pJHRj!Iun`*e(##N3%g[:?=eP=$qR3/uYKn!;o`L>*J4;P.Knk-sW.%Ru=]AXkeCU.iR37Tto5uCI;n3kdmL>m;N2o"'\`+Xn&.).;(iC:pP929H]l7OMOo`65)&PJ[#d6Yiu\=[rr\;BF&8B66rkL*c?l1%`s.'Fmi0/a%RIB!7aX9C%L,04ZmL$Q`u"[c1TesqPtR(.PT\<##0:UqDnd6u,0bZRoN+RRZKl\@=&"Jf]7X/F.%fi6%]/h88,Lca%C.7^u;SgV3+OG1QGdSN.EE(?Bf'^)F(3*RbWdA@t(k@V"hOU6_;B!QPP+Q+)D0X/$kr'ppP;#b($a"bjI@-X4KD>R'YgCuN:Jg$D%_:Y1]>L79]$iufcD!g[pA110LQg.ponkTH[-:4<oKY+_lbZ7?(YnXadq:*F`nQ?\C08/)c_^3(U9t)OL`$?Iah-D7n8XLZhGHZUD%C2F=9N`4*U/OBZI5X6[[e^2Z>[Ni;n'juPR_2a0QiiQ^`Cm#K\!O;I/i5TBI%GWa@*C%r6Rh)]JM%/BKXEiu-m:S=<;W5%*`Z;0+%_r=ACA7NMFA>R"[4L-a-0>^ueRPF=Oc7L`!664:!p&f\N?QdUQ[/ui!\2SXn@QRl/H+-W@O0sYl"7Gkn:=j/@ak*,@1s_-sJbMPZ%j9O)`Y+[Y.:h!XB;d'D(F1Hg[7Jr-$5`%Q?c(h.1mq-Tc<C2gI4U'lt<suAjZ.ur)+?P*6U?f_b=q@\&RLBEj+$b"YYPX*09S">-%!5%:YTZTOJ'@+\A(=:%JKu(`I]Vj-n)B,QF&4W4',JAfIkZKVF.pA<\.12s;)H]iGgV\Pr5d!g7)r`&qGI)L>I4>5P32cH[79!Z"%qNeX'YM[sH1naM=`I[2NJQR.W6;@9r3bFm3-Wh?V_%dk>N5F++f$igK>?p]2qPI_ac9B[QTYg]\Jgb`47'Ei*kYD:,%Lr<U-[U'e%T!q7Y(HAVG(-f:\&aXA,fh$0>1nF87qQj`W8,9T:!kr7^prWM/J'1T_1D2@>KVc;=V+%a&>]MOGT8OU:knu/j&@T:_d#d&HA[;iP%5V'mF=k9-XS!;a.0%rNMh6YYdfpt4bTCNJ7L=_lAVBF>q,%rUE\^3"!,KS%,qFJuJZiPWd=)+7fd-*/`NhXnORrqO#"/Y87e>n:;%:ZY"G23rsC,&!f/loP;Oh7]eH3O$UmPJKt#EAZ`^c*[]"(:R4WgbW4EQm'HWiRScf?1"/7?gc]A@(CKmTib:X!i+X1Zs")3#NqFQ%*JR%NG/h!oL"13-4c0ZNJ"jH7$EZ8\Vg2X`@g4O*F<m2C2\"gOa;CG_#(Xg0BoE/s647ncc2bW)T+AtC(L65+NVA`*)tf,1+S]op%_f<,qdnb&rDX1iJ,<8336\E9TZbVn#]7EX/oDstd'W<#u@^1h+T09LjkjBr&hf<lt1tY5qiT630V9o'L`hT2\9-HGH\-*I2qk1Io%"[WC36Ak:@5di0;8$_ZTE5o@B#_jT\%U@9JUn8=?2mg/@(:uljgSX=F5m6jbI_+/EnrIF<6fGHGPqJh4!"e0'7_i7qN.p:J]t@[l%LdKiY4$VR7"--((XO.HmejY<4i<TQRK=1#u8LqONdYKo@mO9LLp[tUX,Hd_(5nuC_BW<KS;Cbe"0.5Z?PJL4"&!'aRe14Sfg+=2P%"h5*IGA(@aqENh%3gAu9XofGOFDUpbn;7:bl:Fe@DZf01VEkV:`5TfCs28)Y*A7^r?-.VsVlCGaYA9`sDBJBt!PDaY<7<b@h6u:7%S93&T"rY[NpqbH_(j39O@'g2-V>"d_Z;Rc2=$.f%8tn)UTN6T10!9f[rAc"g4+T/"@rc#dn;1iZVIsm!ZCF'&K\,".Et<fgc6\"K%"T97;\+D*rqWl26H/S!7)D0npTc0(J@?B^UcD3sE=WDjdD.-t0SqW=IOaV0hZ3<\coK@mA9(5MV=S6;c7p9*.$hJs\a.W52/s`EG%b;Ij5(Dn+Y4l]8e[s';V3<G&=UqJ<ug":C"2nK[qo6l<:>lSt;>_DJ/+??i8:mRd(/HaT>7B]nX<V0^A*c+etA&i'W?tcl7a*K2&%(RMjIF.@(RGuZ_4IDC8>fc<tX!.j]/,gs<PRg(W+R1L7RN_CsteF$Z3bU^+;7F6i$G]g$USY<hYG7OKtg3S;XZ-e_3[fTXKR_nSm%h27hKHg3qMY%C]n/tIFT9JXD",nfS:eC$2"o`Y/c7+@&O0\YCp,^IKPnW2;ad7V,b9q6+Hd"!Mkk4d,3@o_&+kS?EYBl&/4%+nMu%2F>".!(PKu5?8>DrmAa:Y$UiL&+"%8?f*t1\HjN's%I+Df9jEa,L;:R3Kd('Cq]>..RtG76lc""B`/JRhmjEjO7q_iLC9r[2D^1Z%D*/LC`jS2c.;taBUr1=Dr;&Z\:Anl2Q70a,hnauuLP,]1nVth8PH4Z=8>tU)MjA"rJEttN%Ri/P@2M'_#IZZSh4b!\/Lnt:#F7(V%ku\tqa!+h$=X;]g)^3PKAuFeeA::8_.6/jKDTY28NNTSC43_!0oH`F9TW'^cDHdHud$pkr+i2CfCb%*7!6;Zp=p@?0ZcVaQfsBN5%I<-pL<UC3(_KgEG`&&;BlqVc#*p.$\6L.?/NJ\mDnmg1:Wu,gc`&cSNd=`<-9Z0N62P:&XTp\^4!t:\Eg$,&M5E`X71Wm,kE6H%9%<O?ap,848,0"%DVNa\fS)I'9Jr<r,oO^MS&YN3eWqhO='H"HVZKj3\0qWUS&DB%quXL(^2lhVgcR1*_ZATZ8_"AQnB$E'OD\E_=S%8<skKfKOe.Vr39@4%;P0WB"@M<MP7\Vbj&jK[eJg9)gb/mkNag%S)uaS<873^kZB0+O("\@</6]K+d81QIEg-E."c>!Ft1.W^eVr%Y%r[m^J^Z-?fHAnQJEhuVfOB(h+]_X8_kEYBDor.66+!3]DN\_*D9<3/i,1QL6a``5eQQX8G@EVAAG""-@l)l3^JP/M>]tT?SnZs%8+P.f$I^OfR+bpqh/i0e\CM\iDIsNd#%;!g%qt?S.>]:B0<HhrSIj3,cCg!><uYs!J[`@!(LZC&f(rcDe4J)lm?Vt>Bt(s5colSd%pS"n%'CXS+7nU*)9RlGi)M@l]m]p\WapZe-D[q<0p@'")i'f9HZPp2b<aB1E0sA">(YSr(?0rsON>'"hcYfGkiN2U#%e):c/CaAU%g8KV?!*-H+Q"2S@muCuUdaMj\!is4KIXbQ[dMe\`f$/O<rUWC,`.#-B(n'`!Ap_51c2sq-\4uV!NWt&K0@GBsbp,pF=?G'e1VMos%Lunm_mV9iKfD?>!r?KLL;]nhEcJkbYen?5!V[B]_ep5kTD/8$(GHEA]G\WbVmYRP"=uYmsC>1Ym:4faB@gI#)S4da2N%$Gtj7$9'%D"01TNOk$/<2a);$;jORFWhbrNRQo>n9n83IK)&NkXu#dc%XZ3FVL_EMeRWrn1kZeAJJC_cT+YmNk&Df)OXHF]PF%nbV'-(H9HA7%0>VYmX)2AS<+-V$M]-04itE<:7[N^>/"72!NHVH#G$8p>Y#-#Q_If.fq,,YC6)4DOkr%qBEMK)4$\eHA\P_BVa1@_NgOfld^caC8%CMQG1kqm,(\(T3V_[IJCb08*C&Y`i=f-k;92-UkgYRSCK4(Hbg&Xf-qR5E(;4%C[rI^;LFM8&i^.F<rL?gIRD]hJTESlrs.>s''9%`C<@eRWN%3G8/L4e0kmL[4l>0[N^as>^hMJ49HO>/g"*>!n0"HC^#eRfeQE.mYmMkl:[2f'p7pbS!=qPjd-pWdjC&DibYKKV%"@q%pm5Z"US<H.U;URYk-E!dG1O229jD2bW6p!,Q#nprH5;g*)K"m.J0CCR?eP;PS^KW5gaFtf5X^>f7h'fK(YKRobaHhFdV+V=/P=^G%TP:0\_^!8eZUU-HhcTii0mh6j&AUH]nkMu2B"=G7YD&jf'oBbJDO7M'hp0fk3,UP],",/#oA)fV5bMP\/Z;OR-!TeQs4.\#"F:o[%7Z$@&HIB/tIQ5!QB%H0$OQ;PraFr!C]$[4Kq&teHRl>/*@[Q:O)iaPG6]BGAO>1ma$OeaM0[X^bBW3s'm9AKW)kA=5.FUb%S<M&N%hG'3J/dr<?b>$g4NCJW!Bij\i*lCH[gs_6TUL7?6c-H)i*VF$(VMP&VY%?W_cO;)Ff#Cp!7ZE">=^%jF2XTg2Hb*q<Us[.&@X6YQ%(cOM(>*j"*`Z6oD;]ON*Y0sX/dmiZcQ<V#ANHWn(k4=__/_Fa;Y0e/#JKLS3>O2(03,#aK7rOYbA7f"]FA$;p27g-2D<Fck@((:P%CO4\sg=i,ML1-k(;_$8H8[!1\2*;?em4IOK)Es?0`(#YJXh$OC8MmMVV4j34m=S$+2,7g-`e\SY.KZ+4Pab!PD,\m%c%/>/-+tbo%o"&IQUHR\">M!QEjPV:A%lI+nB.=hM\5U@?/JThV@A?4n:T*HrZa6@N(=;8QXe*6%I(31F;b+=?]Sfrc(g&_CNh=bi!Oq;l&1;)=%(/IF>o<RI2InkYY'5c1HM)&E\g=s@b4e:0M.R\B+E^b7W0$2MZC>?JqE,Bp=i[N@70mY<iN#4!\SMdT60eEYH:H-/lo;@f4fb&pJ%A^Bte2G0FfqW>rFitSsI4^HR<))8f:/1FB<3B#>?g0e66L0\n(4RM#7)*O6E2Xaj`26X^#jVfk']'Nm</Y6i2-P_Z,4U9G_GIRBH%B%e7]J(j!eT<dAl)%[Y)]_7b23c"_:A>d,YJn+2-\a52fmFoS2TMKmFP1Mp8)"-7DT!%<0?S+^"[M=h]k;cfN#0kB%A:K=QdF7Mg%F(Z!8Vr<SJH=Gn8n_<>:NuT,2G>3h#aC)eF#`iHF-O2"c4foB]]XtVW"MXPgJdA\3(n"Zg,aA'5TVudlgDc?keU(5#CX$5ulb^H/%pP`l=?bVP8l5Ff'*(,jKWit7OF;'OAO`?);cCA?_]u,5p$&"nV,rglLnQPB<C)#=lG#ILaM9Uoa-AZb;)J/5CS?lbSkhMn0UGYg%%f=FM52X2f1'Lk-\NP[Yf6Y`t]X_tMP[M^qPqd[i<K:9WO5"a@=U9Ut0BbYjmEhg"=;;W_mrmSGJ@?`#mGY-^mD5269R)cR2jSbQ)%$K=A0rN@^MR's3BgknOqI1<9'UX8ni22\+R;3[_L&Mn3Egq6M`bg<_BUX5d_=;]D$"+8rPIrgP9;G3A.(*">?N8S)N1m#Xj9=s'c%7c\A7ecKH$(faU-UUX$-oVs0K\qRlO+P"t/$p_hZR(#],m^@)(l;u?g&sS#k@$Bf/0j$?:BG4dR&*QZ%+BpgXW;tgB0Q.Ll/aH(D%BRX\1r7MAI&>^/A!UP)i%B-3CD9PQo'>9hc*&N#\T[2k%IWagYM+Q*)7X,Wd"i,Z8hAm"K2*f7d#J?PJO;%TpnVbV^(:?/g3Xg>=%&0bTn:&QgLeXZ*r%QhX:D8TLTP$f=8',;ru&lh`99p';^f7H'HU.kk:QM7o+6TUNk*)eX6rJJjSPdoGGIrn&u:pa.#i%I&L.!&r\%Jk^C1#b$bqeB]"T9N0e4Pj9:E[P<@l`fEZ^9hlYLB8tB!=]WTN>;K7c416h4igqI6981*n8<tN&*M+24rbro=2l:u+EE:-Uoq5rk%HHQ<O(B`\2?L2RWR\$b?oVg42'hsaP+bBQ_CWgK1.$L_i4ipPs,Bh5PGo)4?oRMr?X]DThRXf5sDNfA/1?%&0Qs(sCL5aBcM,rVp%>e-NP\a/tG[@[)s@<$b$@.e8U,LR_K6J?IcL7.cCl2FMS3;Nj=*aT8cpY6qAb$7[nl*;4B/5.;d2/YHK`&_$[B?HMYVd7;Ec-cWZ%-o>5I?E)sEV.2'u3@Z^9%.4ar?L)'CIB?'+UeEH:*ncJ.WMs$q9"L.LI=>l]iEhg.oLlQCBT^.s/7N`PFd7^qr>O;Mq9,QY;J$*_%aEi\REQVKTf,EI]1@N9KL+-&PoknAG]?7f@M]oocU21+?5LroX$aX\r&q+:`i+te?/YVhRHTn3>I(/mFosCOTU:eKI5/)RBjjLkf%:OTG^XedX_<f;:`2('hUB1<N<r%^EYLba#8,a(X:AY%A4TBois7^/%KB7'OZebill"Ke%KmC!dbR];HpWfen:Pr<D0,4k48R/ndH%5<24$-c`1aj;>QHNeu5j-tmIljjsX<)uW1!.2LdHG>&0P'.UVFm?i/I@B9^QSm'n:[@('5oP<Xbh.pT,VkK94Pm,<D4k>]V7Ak9q%<F^YCNE'u=Lc:t[ak4b#c!\B70a)o-WM%9hG"ASZ`%r[7`X,59TXo:PdJ9)36=euZ&l0ujW]i1seJ7tG#tj=PoqU#Z2)0BW_'UC@%;j/_r#7A0V<-q6e;IQ>&9`o!!NO&^VTsa7)(mtmj"^*>AR*P5V,`1+#Lo>_W!5MNPg5>Xl(kAHWX0K6\hjiqQch-;&I>]\><'J&J%'fIRUZ<h9?4S]#bUaPu(HPJ#>]kM-1g+q/k"!<_o*(YRab-[mTr7"RVA/;LibYfs9V7Emj=ZR9F#7HEH,AQEH+]m+2<@SAT9jVab%:oiS&)%nB^+Q\ipJjq]+],E5Q7_:t*+S+E,A4UO4A@DfOrk#m[2>YUdFH(;--,"l8UYCFtBt=)Q&!2F,2Pa;pW5`O.>/hQqG%f>Y%g,e\tP-I<[\@]eo%q*S,]5-7Yf;HrGBHhaSG:`;Bje`$dU<,9+SS<$<)Gk<BlUk5l5i-Qn0Es[=Xn@&%?#E3$#4]3fdpmSGC`dGu%+V?ST-:6(ep:]cbDFcho<j51CKK)QP?I_$;-!_jC8=B:RmuSa85^%75hC]4%qcKtD[\M+FYtBs`D%*o!QW<ik>4-'P=_$mPnn$cX%(#B*WXr_IW>.rc1FW?k.<aEYQMk"u&$km,fq=&3U1KW0!*CSIrK7Q#>C?0Q:CbeE0<SX?TR@QU$'U<O@FY4_q>1HQCCb9dS["79j%Q:rD:=oTbNDmstm<[ne729ng=b%JHRk<3g==2.(('f'W0*%pioFT*W2.\'4ZXGqtj'H0A.(nhS;f;dg_LoeR)dDodWcbtZjHT>rJ%;XJoO=u8f$iT*jRd6QC!=>VuiKrmMAiW[N6<+tWQR(9Ne_*_a1I;iZ5U)D60&D:aa?7jlq@aXnDqd@oi=u:$NLNrN1dGW=/^&&M"%Rf-?87<l0T9saIIVQAboq#]if$$aOmP%:#X6fX,0:9?"Hc)jIGn_*1*>(H"0b:-l,R5\I"1P<SZBGlegClPcQR0C[UQV6]a=ihum%A@i9h<QZ:f>Vlk9nCjpKFe15?e7?lRk[eRV0<VtmMg>I.p0`*"a*p9jRN4hA/@HU"Elg2;OE[sJ\SBd3o!o>":>[H!*nW49hBT`W%0I4!U':AT#W7_D+,.#%V_D85!;6AAaF0N7gZl(+g^A:t@N9-X0>2nc7_e]UWZ()3hc=.?G4oa@EM]@Qu4M.3po`Jfs:Tf.)FI+Aa%AnQ7-TmB_Gg=^EkDin""Dk1WAm2S%Os"$jnopZAHR[&asR]jF/6*k@X*i3^L(SKK`[q#7$BK&2bAXu1AgM:ZB0fpk&'jN5O]TTb#%k>nX]:_c)^WG?'(<5n6H>4JmrdPBq$j'k#'XVJu+VR8`jdh80$9dcg2a#k)NBBP^AhHqcMV#cS*X0S\JmGi(gJ5!HLate4]j'oHC%"-J^5dJ_1KX;,R5P8+n/Hl&M>P$Xp.[q9F8-8#MX:LNVTCEu5@P4<8g,0HcN=RB*'Plgj);9h/,d%$H_eecoJd!TAMU=WTX7)Si^%Xqg%,Sb3:MBZKi,%%[%t3ddjJhTsOd26*1>PI!E!4@<b0Jke@h]%8`[o))sAJkjFLm-P4Poa*\@[,Bfdcrm!61H@$hobk>Ab7f!?%Bu.KRU!o%$rZ%DLUX!2lcrm!6;k:/Idht1K#;^&(?Fd*mFOhi'OO%jU+kcc=:fjf?d&Yt)Dgi=4cJ<+G#M:C1ktBAaXKU4mGk9sH%"k-a0o"I;WB*Ipq?7S3>aRk5ZZi.%^DPF;N4sdggb%`;MK7.@Lfc$?8_'UqfnO\X2'u,FEP#f3`T5J_BpABiu6[Sc9Zp#h:,0B]B%@q2t,juuupfu[K%nB'gT3QlhC2?c"O3+.&#7_NlQ_?$Z/CL@mdK#f#"S@`sjBk+,XF8FCQi@_MF?)rE)8D-a/GhB-@*tBW4<,\+k%??k,)MIda5F0BY%3=DJ:hLYi?MuK6#X['f5=bS95`bCE+]*573gkghU.`LI,D0!QCm&_c$<FY#kUoHeZ(.V'MW#_EMCMe*7YruK\%`EK]29qpLD@[/o`b4G@3I,<ADW,fiaoP2s)aj9B(0_l\q-+D(s3Bi'9`nG[pr].1ik?jn?\eL<$=*YF,g:`N8BsP=FKgNJl*dD8c%m%'-aAhX\f^tV%XW6\l**'`J)I$N!q<$;\6('Mmp^F*Pm7qD*1Gl,Q3m&I7LA!Ub>Whc]O28=&LZb-X=1<4KnhdZ>?DQ=EcQsHlQ%2T!\'%0sMt?*^NtApMRWkN/dB5Qhg>&qP,ckU_R><RC0Lm#JW">;(-_=%3#R#CFIn=MKuDctBI2Tr<2nM@q&1]I1slOig2U.ZR>L%_=F,+2Wc_p$[BUlP3s8E6[($)Fq@a2)*.B(54&Jck./8;=^QHK$a+T^ENL<sYhFAGT[KfAD4##eaTGP?GO-?21H[Cf%9H8"7"st$%bo^.>3\)1b[B[5urNUo'dlZ^4lrom;85egtZH9"@d7/FP-N]$jX+>"A1001`?q*U!=5&n^Efqn$ZYgPb+KE#3N9TbPrNWltpnZ0U%cjdjX=+>G7@&;\,p+eCF6[PB_Nh*1nWGN161*]`3#9IPRj8NS"5hF)S4msNI*jhE!_3'H90sh:7*@kc5#/u"pqeutG@Rd67f(ltl%An5YHO>4K7O6;mLa7sV6?BX[r2/aQglHc0t9KCAld`=?g<-FRY2cmae@8L*oTfjcG,iII>/u<'>)n26b!F9d"m2D4"ZX[Z,2sj`i%+&hR=fZUfd4'R8O.\Ecro=\SC+h.c+p\XUt``O0qq/gJm,Uh^`[nH,-^85_JT$(LfF^d!;S`XN<q*a"eT81nYq/,T"X6MfPL&8pa%kr]s8rOj[fjn!G7GGsrs4Ii^\:OOF):VAO1^KmBGXSP&LfuhD8Sqk3rht/;UpA6tB/dK"(&'t)7SG&6Ke_IR9kM`dNC].;Wh49<O%?hH9>0@mbe>7'6H,KZ!#4"k2q:ZRb"4cqT_(7OZJS?fOMZD-b_BD6ed*ZC_QRl_cDi\A-t_Yslq``(,^-K`h!:AjNUE^;g2minm5%XG64`SU!Q'no4`(K\@C!JaZUAL7kV_2)NPN"E!L?Y]V/4`1<65S@5VUdoC6Z7S7?:`bH$!W,N\)iSM4e3/=s\WM'epV;$M4T'Fk1%/:,9[p8iuSMchTJs/m;oa4BMEElYoL_B<CObH;ShO__;O:$>2WrEB9[+g5R5b9^u,54pMqm)t5bZHdhn8(AtbaZ<X]8F;s=-0pp]%LG",38]*nSeX]7%fr#L_1])2:F_77@UsA>UM:<F?f0ED0Ba&:Bjjub52CqhaZ(t;ch)3Pg/"h",H31FPL)*;<cu,fI:@%9+-lh66%0f/Ro-lh7!VN![>p2h"oB&<+YYO0U/WlgV+i@ERT!%J<WRl+adcAJ@)gX^PFgDO_;>AuiUT(i'DGO9<`Y3_RmF$@VH?e3@l.S6J:%;St4Vi?miT-Q3=Nl.eMV:cP(1HbL?aUP-MWk4QpR*(hG<Kb]PYKHG7ZDt]6Y&O%52M\\FT(ThIhW_["H_p%TWK]ohCM$sn>_ef%-%C7ZE9aZ'1/Z>!$S?%D^f.7]t6&\WHO2<Ti6IlN5fhY&U%N>oL"Gn-c^prCAHc[WT1>^Q2@f&HQ!o(D#=Dr%P7W5*5d:YSi*4T9D=%EHS2Z>An4qmH10<p]l[kG%Yn`cOP)cInJ_G%_h+!^2RBsTi@R4/p,r;2$j:FF`prm>CYJ4QfOpBQ\piRN;G"mf[Zlq5Q/1ff;)f`%5Gn[srAQ=FmdK$T-au3P#h[i.[l6C455J\k/Cog$m\:\YV=jW_feoWd*!1<FgR3I1l#<l]p;E"]nm7n'@@(hRg$]S<>+\"MBYSdT%.G/K,K\cB;gfQShD=-_sM'%FdYl@CS-1"EeYhL(dS+tB`mn^,<:Aj>8[9)ZiOu_@cfZoOBgI/,ZrqTuPkfL*U^&GSBH000EL&'Kh%>;%&AHntW;l].$$#Wd9WI7Ona/'[YacuBD&g%m_>9%"\3\#BKlk(`*'S&76dNZ(Ci)VEUDZ]i/1R&fH&X?'W#\hrbpF`UXj5'!US%euUFIa/UCDcFVLeM+Vf0>2aAEp7\(A:)D6;;n+1Ooc9`^ga"E*q2'FZllpKAO)KGI*r*:d2m_)Nr10;2ZZN-=6WSoop#G3'P-Y=O%Y:M]bh0%"V\f$gj'8iZV_[^_hd<+DXku&VuPDH(T2mhGi8Oq6hG3%fNI.rn]M5E@TjQ!MKYq^=CM+5sR,7BIlA>AC$AI(;aBY&Ia%jPrbZ=dMg#SnbYs;Dd2h3t(l#Sn'\6\6-=^^-0MpVAgm"-F!k)&kt;;Q>UMFKk!R#NFT*1@88;@DHrOtHo]Sf\g`fj#tEC''2Hpb%F/%'(j5t9'KrMsZduA/.n2J"dU?TZT2'p!-Ls^;X.!EJTF=0P_R=aC>MOd-lh7.6b0mV]<),3%BQ>TBUe71tsNJjVPT<miCd<+X0%VHCDInWcV#VAn.&AH1_c7aiXtH*]59:Hkak\oAq=`4^Z]BY&j6HuV2C(7M"!S24W5a`)LKBY*`j*RLd)KPd)+JAnSXn,''cGh3Wp%h3CJ>V#.eaa"m#+FPC0:206*Nl!g_O#C5lseuP9OLH1cKFlQr9-JXKu:7XI)SL>Zq`/6SNfSh-GcQ)UakNp^RXC/D._q!l2hTiI=%PXke\Z^aa`e(gF<HEL$,e=_,5BU5(O6^N:]<r[`DW`f<ko2t.&RCa\j6QN2N*O"Nq,5H/4pICap@:g7c4*I#R=2/cV+PebmJrAg]%e3\B"/orto/S@Kh*i7*:O@=/:Tt:oR*4F)Ie<N._qpRZ=mZ*_PmbVo!r)*#i7EKY+WGu6u]"ImH3B'a8kSuq`^$-$Bo>U:=Trf<T%MFt??pQ"Ha3#"nB0rRY9auKjZ*R4?1T9TsT2bsSCbkT$eVo'B0;C;dt:qZ6.nO0,eVGd4+GiZDtGbTD#Ah8\1K5S!0jl8_q]887A%-g2!S)`p&uW/(7?4RIkJ+(mPkcPQDe1*#(2@TAf%Sb%X%c1pM#$nE?h`2M8Lo'Dh$c9/MVk47kj`b#A/:%_cgRejn7?!/%.q-H0D%_5r0lYnN8h\6fOuS$18Y6rJIn>>22`1TB6se51nIABYUAG@C@@hQS=jd>.SOQX`OM:mIFdURj\ZoD>Gjbi<@O%)7:\X%q9*]l0="%NtFGBe:`ZgeJNTnD]lsigM1QffNA8^TN0tGeZ,l5P=o[sK/Ih.:^6Eea<p308%@M@2o`0*,4RRh'6%7cHrB"m(kGt1bi:i1k2(i6%<k+X"DY:7bgf`^up_n@3N-q-<diZ;%hGN9h``:/Cr\bb!E-IgEH1P+IRr01c`_N2DS^i'-?fUS,J[H9loOs9W(c)9+VMR<gau]sl%jGkMJN6=9iN?(6fp>n7)EB7.]j8'aH[BoF/@6;N<Amm30p5dOLTf5mjSU,@d1Z_eMAe7mU;o3R#a,Fs2(XWd0"e0Jp.hOq,D&>e9%f8n%$Cdo8j#UqDXcf=48\^P1]KH8*YEJ.dKQ.e>YASV*>m$9*>lBBXHj'4d;7nK6g`.[h=XI_CQ(t5!\)I=$4Wc3V.f,HBOf7sLH%&_Dt]=e"Q3EIIk8hK"\KSB0I*0)+SkYrKs'e((2gb<6@4CeV,_c5#Acj2I'>Csd=G0\aW#pS`PF&F+Q=(g!Y+2sJC&Nd@9;iu5OO%Qu\6YWj."F-F/8NmGRl/n$2']@7lI@mp4-l6k@02*\X\0q=%qbr0-G(r:CP1qg(nnlhB7hCu`L4L6%qL?U";RM018,SQ_U)&(a##%a?2WC*1T>+<NX/^k0$hUe0T7iQJ\<[oP%3k];ZP.?E^:#Z(Wka)tegi+0A>2q-76R1FWUup!?3c-Yja2`A%+_[r3@)lUQ__n4nJ6%J%hEeReEbj1aVkaO))Ii?lGKBH?&E<U`d>>chVA&c[W?``j$e!SK.MC$2cNIpsEpDeX]:jL(KWYoP*@=qan&Bn"tL)G'7<R7h<=`%r9^k>Pj6!Y0YEaMl_fpP]JaW&GL$cD.;[7Or&dECY=fGhcOU\]oZoZ[]fXP]V]K)L9^V`kSilfDk0oJT-=P+C6DnYTq!Ql,d*[^8%e&9s9%j$_PkV0+E_8EVV6ao?n4$A$-Z`hh`4N:Jo-HH-kS%Hhp\1VK-Y_Qk(HF_?<D)G&j3Eg![LM(80QO]F)@J2&PlC>WgE#oh&%R8\=te;6Vj:%d.&>ZBGBU$-#]NRm0JNNJbups_rP:@H"Jj6P%=-!,_G>,N\`J=il8I%)hG:4,SnNI#<lNR`ZZj"!h4Z)d9"cbo*a%[Z,RXROR!,P67TC[_^f]Z"Trb\&PD^@ko%LT`B#7T/tKK`np:A3e9u3gM:0@Y'":P(rW>sUGpN?COPLo/B\S,(_q_'eJRHobhV_t%1US!3/.!de>`p2:-u.6_A;a+BOKE$E3tMnnmaR/O8U1fB,B&Pt#*6q34NFQ_"Pc`FR2[j`81s*4<gBeDameINg$,[#Bj;[$+S]o&%B%D[Hj:N6PVfm*OhSTP\rUjZj4Q:.RbT@0O/+pb&@]U&>=Cb$jIU)hgU>P`^Bftc\_XE6^!IKT`-pMieNYoo!+t:LVJ"Bu&k7I5D%Ekd+*`b*^X54.p%c#.>u'qL1U%EB^N*][5\29=IU4GRTd`m*W(-oS,tcClYp4-iNu%2YTe*@<LkI(gRT$?4i=_!u\@-8]`'ML$cF%*@V>7hAF&'g63%K;/`OP3Hl1q]J4pmWgM%e!h=Ih`l<n]*<eF]+;fq9S/Prp1CA*pZCd6/r(p7@o>UdUW?Y3KI@D8[aLtHc^.1Q]%P>^CnMXjKAaEFjXq<#*%*NpkuDeU8,m^P^]P)=(jX=2uuS&CL?b(i"F-<@oDWM4dXIM]br.,VOL=XRR@DbU,P@he#DlI&MkQ;i1-%rlbWW*ieNR&QgED)erhf^I(J2SPX4&[&W$RE^Nu8^Z0Rnc<o1AC=M(0[;9I,ofI>7W4D3ic--W>,'Ej]=7tmiR6FAO^ZdA/l>_$l%\pi*3p;DUI(j5fLHXj,Q%G,niC0eU=r_+1/EWUC^VH<FPVVP/9qFr'^X9p*Af(GLr+T0@geFf;;eSjmNar,@#VL+gBa!;]REVAIn%IP,*n=EXRi7*0+B^EZ4ENR[WjDI8d$Ja.2srMI_7RlL9m:tKX^?-6U@nJsjVrO@"K>Us<E]VF$;4)A3IEA8\.WTuL>92UD6bq8+Z%lSlMWhiu4&q4kn-gRV4#\9E`WZ"\@ZVH<F02_R\#lSm)I)QGKP`]Y<<Y2?`0DltJ.NCo]/@bBN*+02R%oSY?Bq2\P-c_s!%IQpFf%^3S`[VHC!]=P%J-.jn06C,`-X2nbJjd2]bCFo;ddpFtZFHNJ?gP&30VeW8gs'AA2)Z7@"X.d]e+).OnGN_n>GEkb(!koF=SEa?H?%8`TEnopZilHm3_3VH<FPA3IXOlI(Ll4'L8)E2E>aRi9GJF8WUu_bmpX<PPf$O%6/7GB?#lR(@aq`>m$<HMk@'g97b]r=51%Bl[Lo%_o9;1[BAEZWd`!fa#CbJ4hVoonUof"WaB](?,Y]2Su,T^Rk&^Z*-M4W=7mMFJNlb4^Zebs`h$X0W9ZCUWo&at=7aHp9s*^Do"lEJ%Y2>amb@B,rRlHV,R4"%,o-AJW:;hKuAmN19Jg'WgPGme+>qgAEI)i8Q2aYZ_Wo(nBa:[b79u!qNMQT*_?,,Y'^dHMW8$;/:L18CA%MB/t)ht5C12`W/Wb$jT3:%+66E?;<dhsfTdVBD2.]__VIU07")D;88c9NSMsa+bC[Tj`.c`6`VHq_W,/CWN<Zl"sO@QhH1!]S"S.%5/bC,R0Y='0NZ-/01O829b_'om^2;<B7JcaIcL65`#aE9(ouK;K7h@dN@Re3D(dOpI;Z((Eu2-a`UdFXs05[2G^P#6infA.X&gnq%>[)W&n"4[SXl$mZfiE=_>.4+heXc(#g<W:BTXjSo2YcUaSa?@On,;VC`H*2Lr8oKMQ;@O-rul`4mdiZrZU+RBHhR-A1YMB#mr)gA%*dkPc^&$-+OhJ<;r],=Prm=X;p<r8lK7i(5cQ.DJri/0WroNM&K:`s/r:U$\f,K56b<c#h,<J,=H$H/L[s7r;NMWB6/M4_!\,5[e%ZTk'e3V3&SA*[r.^%qW^gW(,a;bqks=^QT_p$gb%5;)?SWu;=im`t7D>O0Plm!j"I<js4<D11s4hcCai&,s9B#fZbIQ<kY?](5;r%\%'"NrK3=pKR/g3b4b+s9C!D6&dsO.LO1q+H[kjPToo&7L;pfNEMn\4B329I>>Li/A[bHbH$JhlIJs6l8MrL"am.uIFf\#WMII3:%h>2'Mi;:\N(BHT\P1c4GM+LcM/q8#L1Plc]D]Ns!:*u5>Bf9:7rIiml0;s9\gAU1f(73Y1Sa%dmOR6uUcUB7^q/C>%j6UP(gD-Zq%q%?;6G0iD4Wb4nlg&5om`OWRos(1]uqRu(<?a&<k>Pbn<I-9qRW.46Mgj6<tf=e\h[fa`+B7RlfL&:9%F](E,KU:TTf*u?/iQaI^%Bc/Dqm=?hpMX&tW:Jnms]O$4tfD*tBINO%+X1f\DColK>p>QSSk@Jr3g".14s1[7/Z]-KcZ?Gk?p0i7BK)FTEH2BsXlh,s)nqV!r%p4mn*%BeV2@#\IFlFT9oqYBuV]JIXq&,u100<Dr[=8\D'?X#DAq(LX^>44&rT2;8Bk[9$<L5jpu1<9[/>+Y!PJ&G]d(=;dNaB*h4%gr.+T<Hr%+rmQ7T^YW64?Lj:HQQe?OUMiq1__O+^Ga&6TcJq,2i7AdpCjG]qk<@/Jb*i59.YZQqp0F31pm',%,(F_35p*j>hIt++%ipQ,t^Gl1l\"X:PA$8&O\g=?7R+,6<]aebIZ.VVdj-h!''VbgBea1c/R]W2g^9Dn]l.Lu52udU[ID,X@qWI%OYDO9KSUX?aH"H0X%^V-IZ(C,j'EM5NEFeQMA1];c1bN<*cV#C7J4mE-Sef^VuKmn>llIe5t'T)kb4T0B^cghQ^qX#]I^A<->mdM*]*d[@I36T/=/f^G`%`4`qVqk)&Oa.J7ui9(9&\%f8Z[W;&_(^;[!5F:!]jm?Va)f]QCQZ9^[(4Q0]mU%m/I03QhmAL.MXHp2P+3Um(hu)-<<SVM<gOi;n%mXMh[n8W)pB(GD3hsf7mch8/#?rT+h/\]*TJA&^PqBqF5,c);AqP7$h]67TtR:d64DZ)K=3"dV*pNs8>oH3kGe+f1Tm^4RiMIR"#%LTXlgFh@3ESADh"[pRh,Bj?[^p[kJ)J\)k(G^g6!p3TY9BqF/6I/E1)LEV*HMsii'>n^:2RhHNT5@&/(k5Y3a84lH2MmHaL_W<mh%UQ`@qCt+:p,YW%Pa-%&B*nft\Y[L$0@S>8?2ugr_/:G5M+$Wm#!Z3h8l0;d1^tk>mrNq-*Xuq,RrYF3r*rUW[btjN["]WqGZkF;%%r`T0]`%!ek00QhA%K%s7^e\]qCC2_d]lWn-8TR-1MRH%+)s+il$V9.kfAbMT<VWPsfS3jT_U]cXK11**CZj0U0$BRXIlciRXH*.L%o1PDchn$\B:rZ[[7(eHdUq.THOS9FI'oUVZJ>s>Tg^p:q.fFbdqr;L&lcimW8ST58O^L"QJhYM102WkgYd$7'I'JodeC5,"bi#\3%VQ^c:UB1=9:qi7s?-&4Y@jSN;r>mFkNNieoBR[\/L)CLYYsTefQf.ulg4Tf)Y=q-;@b$,.fuA[#;^5;7=7>mcf=e#Vhq(JiLm@)&%J%_:)&_DJ,T891TLgq<o#e4'$-=6Nq0((sP-=0B68\.Qh#&rLY]TU_jVC`"pKm1U%%-]F4am1q(5eG&B.H=MW&Tb=9IjWB/lpJ)P%?[a#A:+8*.&0JWSY[E5jgss\[%<[+PgU_Un@A4uRH2(rj@Z,::o&7D6rRARYe=HKk4,LB.b4\J6=kbTXVgK8D!\NTWYE(mq^[D(l%Ibe4%^[gkso(^,i0?LEd&!C<"8K)sNl)4Q(qb<5.BD_Y:FH(/+-B2mBo0)pB;ptC5kHsW/`T5XCVp]kdoCQbsp\4-?Y.WZj-INPU%'gJk(_O4UM8tCO'OGQ<q9@Oihj[g/T?_Yh6)(&?sIYg)frqqU>o1RRNaf;$AbqDq,H:u^EO-<FRNiaVPV9V>SYsb;]-0bp8om)82%WAAKORjAMT1_P5_?Z48qTLN_si>5fC00ZM\L3jqRo$aT;`kSDmSrN>n.jbU:hapf%#^sk5LGn,dCUJb.dpknO_64YUo;FfXTe32>%._bF(UKn*_88ogBUBa,7qfVp7Ypt]VTtHS_<E$*lcH76s/Yak]Y@X?`$B=N%[a3P`Qej5>HQOjY@.3"=4#>%5a3,D\J%P>!_nE!@%7ID5-IH+O+qSJNeqfu2,@,N]A4!!>(s1?]pRP+&aKsnkugN`@3Dti2+_7q)lrOfAc]@blJIQ,TFIfAhJlX4r2amT3'j5u]!TDQ6m%Ik4i,fXUp*oBtEmgt^`]nmQ`N/LaCX-5i:WMgs=TIpQ<.]Ci"G?=k;W[3I.6=5JA>^%^m.pG^scs5WtK[EnZLMc]L_mEO*%IRa"h%k2r5$Uk+N9/\m?d1%+6I2fAWNh>VNZoV9UuDZ62D?Pumoc[C64%Fj8sT[,5VG.G@'f8?]NMp$=Ya0>WK:$4'1fi":t.'qAs[o_jk%c(?rpgtI1-rSDpEqpC>upWX5HY&4*Ho\6d5miO1UQF=BRT,uj8I]\!Gn^#&7GTK(rnacOIHLZE"kLm=d;_7+4T,PcT[f'Bqb5KYt%'AqGSNGN'b[\Gf-YbhkG9f-_D89'!t:\cbXh-u*W)DjaMA#2(g?6aUi`f%SUWt(VIH#7=!Q$1jqR9urVrct8SHH#oXqsdG]Yj26B%=P_@hXSY5pDKbO\pm$1Fr_Hl[5O(<t]APeg!/E^Cent-XRfC:Gl@])0%pt0+F6!b]1?(]Gf!do"pcYPBHKXQ<q"50TpA9oO5hSA8%pZ=PMRL@?HfC"-^CP88Ob;h\jJW)^/n=?V(6,`PNS)*o#.5hRUkUrFGdg+=#Z)MhV]`O\F'1\F!jm'73]&Fgff^"#LJ,S?Ohh.Em%mOg]sM2!j\g1JL4L-h)A'J"C9/kp8(>^N5Id]UPR#+'1.L*$rPm,!3aBD_5qj.Bu`^%LQDLVRVrjL0NN]WqFH'V!I5.ZVK&Ie.<L%Mrjaq'!SnAa!Rb"cSn8iH61girsFXD4O<+#H&`\6?f7iFIS.j7__/?0PARM8ndsRT_Q*oKQ>\q$EW<Ke.shL3,6On5`5DOSepfHd%m?Ojpo.7hD0TP8HSqVD%%Qbl+pfWD#+mo58F;F/T*k7jj2g[o9JKp11,<On/GK?;bofA&<<h\K.$sr8Vi3h%j)_uXi0)euPY"_"u%0mH^]Dtg:ofD!6:pZ9&U1f,#YbM;rBZcj0-h0,2gk3CER9/k/OPU:S!NgTNXCq']?XV\Hf]dLLE:AZ.:?J]#.1MPn,.o1*B$3e'-%'jT4>4o6SYp;+b`%mEJqs3daQ."%`m2Hfq6!&<%51<frQ7SY["3MR6+L>_celp&ik2%8kt=#;D11W`na/p*L8p$"9WUQs`WVB3GB%2Kr1/9U%T[>kY/q3k!p5`\PaimEAM(l"8$s\UI64jQ.K(1eprAj'a=P7uViqZiY$%R^eH_-CJ<"8JD'qa\D\]mb@OtqTrH8dR8P!%oltnpYe5]"7#E"mM9Z%r]VLL%Chsb\05QSa_C+#rCHosTj!g9H6VpZ=QWE9a&Q?Ql2H!%r/fSPda-+e`b)4<mceQe@;n)5NYYP:j%^:EFdiNOM3qCaeVFF>(13o9ER9,*>C)r(2E<M-Pia<J1)T`82X4DGXPPP,AQEkD2GPp/66bO>C:/<]U9nLk["I6sE1-^#!5j1e&/%a*Dr.rAp&\cBk3$BhIp0E>J"Dji.+hH-JS+4\o"NGNZJBT\;<"T+2_s:gSR!lQ'7Hn%O.$G1C0T`Sd+LbGuLi2i=*jJ$%^"e(qBk%CBo&&\<+D^;;Jsq_N)`Xo8O93$$S0T>4Dj<Z:I4gRVq(HmgiQ<EMPr+>Ims$GPTXq&L6];pRc?iSbfu&4?;t/&W@gmAn\$[6F=FS%q7MO\^TXBI@$:$Z]@+=D>6<R*Rp2LLGe6aiBdk6eGCTPg$4heK2g.Fbqg%]!s)np!q#^LRMuSK\Rr0B&g4^`(pe(U/n@lAjcS"9/%$\Qd=V)K@F%t<=3GN[#]?Tu4dpqMLj!55m,G^B,H_M&/>p.]r.ikfa&:%fnt*WNJJ`hk]"LMqLl_Y*]=(]W7eM>oa='9KEfT*On9%=hfmnkVks.V^N?FoePr@I,k7d0>GIJreo/'/lW5Q(]J`G/UW)g*qcP1k]^<5/<kG30CpA=m!C;URjp',#/.=eqfrk/#oLE=(t7?7%pNQ*(e)&P[\$3NNnDa8rT5ZVTbtl#&lhYn]KS?]]qaFf@d&3t)5N[r6"2sc9Fr2?)=VcgX9p)>EaJs,dVe9,Qqd&#8g_OBg5O1Xg%DoPB9&BVPm=KjspZK(d2fDr03YC_81lW8@+5aL"3i#Y]f#Y@P\&u]X+,/]_)XRm_YVU\G;GJ8%&=2bJZgT%(So;hsBHE:r+Fod]-%CL)Q](5\K&L2?P`l^G[&3qf\s,Fo`Kr.l%ij4\YVG$qXh:ttGrpm"CPU54H'El7S^$WZ"##"W%-<CFEI#)sp"*m'&Z400mSMVD%1%%:-C">*"<>F)%9C^khG/6N_s-f!!gd0Gt/=j.)G:#@3(]6DUX)%[!o-)FLHu<EkfEnXs=P\Mn$MgCOo&H!@1;*?&17L)'ZsjS)QJ%bSqUDe)l<;:t5`OmOF,WK,Q5.S6i6G=LSmaR\D&1q?qpil;/G*K?L%8F8qK-1L0G=4[YT[Rsm45M=\.tMR#!R&$`F`C,]K3M-H2+%X0"aO+uo1`]`bBe;=(+rDR6/3.]^^GU^oGO8RLM8XI9e!3kW@\f8\nab@T3HNT)ClT!qie_uHehCcq]:nF,P$$d1JH>i1ACcf9Lu%h]3tI5ORU,M$k,sZ`7`9ms?VXZQd2D2K@L1`iUGK-t'4C32!?."Qh0f9@8NpIM^.s)N'VHC>2jJ2>sW$BpC+_3FrGKK>rh>[VabV%_0:HmSK;p\DZ!EoR+N$&%YsQJG/fVP+KV`%*2)PbPX(,:*\/#@>emWoic6I$JBK^K6K`YGa:=4e/q_#*<VC2j*3:GTpj57``OK9%%*fDi$<FN^IO38qiODuc#(kFkA:[KSONOCZ;#<3-l!.Sm#)0BH*,MoX[npr-r(>t7EDa200R_2:>&[Ai/dYAb'nO43R-ife^<K/dN%RWt&Pe7>hZ!-BN8^5PEPOk>E&7T`)ihb15eY3Ep,$jaeZf2)u%2`G7\qd$R'DAY2FqJDY^rllkG'K,?>X;jQgG+1XMfc^RWbhM1e%M]Ku-jtQ.:BF?l=MQTX8]V\-XYm/L>]bG6L5nrD2KdUUOlj0qh)M;$@SfgH>.].l.AWu::mQ(k(,#uGH!3&4[!$IF;S$1gLVXpg$%.hmCU<2''l=:N<XY-a#GFo50i7"3m1;nO/W:ZE@GZcAU>6)7-mFV/n<gUNH_,B=EA9MPYMd7N8#Vj"o=5n3t^Bq3a42Er%b_bU1R%W61'[@Mq5s38Utka@%MB:$3:L7rUJ*p/7ukWq<:%.dMfg8Y6?8hV_=<&R$MXggWjYb0V>dauK&g<t^4u'%_hGH;l4.M74)UP<ia%%&d4iT+jbZP@HuVS_0^u<>uCAUUC<BDn;QA*7mnCUXGuO.MD!7VSFfWTs.alBDap<mgFnR8$:n/73C`49"X::1:mG\X1Ed,o^'rV[%8!lFe=::kW?A`m@$a"D3J@#RLR#9^9r)!Y#+U6dX#=:2r,lPe:/k$Isr!'F#Em"`EhY<?OJYF%qR7Gil[!bdEj'IZD=ZF>HaJ1k$%jC'4ZBcKUc-mGVt"%ZD:;l(h%eB($JQ;PSXZM+,p%L5u&>)c$_)&_#*3$0kQbi1)R4r]QYfKYZ>E.p]Q/OS]&&STc>ph/k_SVC0K%BVOGMOG9QQpqC4mVnEdS]#4\6Du:r=85ZcD=[7B))W;`HEMEBFN(?NQV`*rSm(uND@80^<ib>g`Z'La`FJ>m',hI_hWBb7B/aaTR%Q7@0[1j0m.HCCoZ1sDR9#Nr'8=N?NRN=[aK>2?Cub18"gJ7Q4rH$SRUjHd]p8Q9?&<&_qqU$Rrn*?m$o_2nhI6s-\6L]t]jMT0XD%h^RO"[O$k7O)1@#hOCIC`47<HAA_8$W#?@-EIc-m78/E,`iVa_<sc_I8C;]g)%n;:FFh$r%lG];797l^,XdsSi)]>L&SN[5(AC5R%eG-kmW^rJ4S!,m%Ot?d*IPd#NN>\E>+eYU^'oshb&JVPdCSKNfUXdMkNW`m+ZUoC%F=(e=cJpfJlnUcmSr071OZO<e#`9D-p)6hu%.M^#L<lIc=8D=ldAfFiH#uUlkh!?=h'X.rjUge>\GYU"XoT6rB"6)%cZlMpKfa.Z]Bn(Y8Xj;QL!/;jf6Wr!##(l4">12lg;`5_7%^TPc8,>@]>-6"`!%=0qk%+.*bZ_B/_"roC%!MM+$mfBs+O\(Wsj:tUMTX`J)QDOh0YGk73c"/hkD?Wp(eQ2YuO9l8?.LKMl%^$3d%+\bnV10&Tj/;K$=h@LTfWbL:/#7-`7*;9tO/1^"=qa[`%6KR)US/IGmGDMVh4Vl"jU%^koL[dUn;bb8K2'NjF,t[a_WOALL%WAet%gaqlZU5iFI-jtCoji9H-Pdo?X7?T^,Q&,92A7De1%0H]OJW%BTAR(0%J@%a6->0&K7,gL7)$2%BCB2t^@!d^[Fk=/_,8*?1>PAEs%J_FRlqmr,')/+8too'T!f*=c'H`jQ2d27-sntr;p[6?o1YYid+&UVr`A,rMC0[Q,?USliHZ+OfK)&NsO=lbtB#Tfj)]`b)T2aQA0%hG0\P<?'.d\NBMK?6QUAoSD;TbJ&Ka?0)O?0`$_SA89pFfEZ/L0b`_47M;&q0)O)nTU,[=GKH,dJC[M:C#EYXXa<ISglWJC-:?jL%hb89TemQ5Vk_(NR6/P0@XUp9l&G756S.R;0*<77#L!Ci,a,3s(4]TJ].AqohY3nDMe&BXFcXC4kU8=tg9:?MP/uMm>FbT8c,<J'S%V`k5N$.KNiJD0@gD:,'i#V]0+!38tKX2367Yq<A>I0$.b$arC1E+rkh/"N0C"KTA/Z'Sq8CU*D5AR`.qJM,G0)jFa"d:h0W)6p'7%H,s0mQmr]<kY_L-YP^bM`KM#XN$of>(d]L'IOi>mZfa')$B`4kgRU8pg,.I8MVW)0s-+"Im?DM(E=_+^%9U^bYr\pJL#l;*8=e<%%*b/S^,Uq5Q@$dSoA^_sZHYM1i?MgDDCl[0ZP;h<D<9HU(eE*d<NfPe8IOgS,SF_0I=qVgJ:B>&SlE@HeH4#>t"Mqokp)I,]@D/":%A7:,AnT#$A)R)c^S^UJ@Sub\/W]2j>>S&_h%uQOMS%^3sU!ukY;m;-m:W5drf)+2mDi[k.^4Z.o$h;--$oB9de&'NXZZ]9gF_;D>%1L_$&=&!"`#`0SY6`cAlgifnh,*LIoZ%/n[;:d%tB@M-\[3[N(LfBcZSUb4[0f&n"jfo??!r+4Tl9f8)a'A8Ki,1]6<3-e@FCZU_%-6KeGBZfr^Y_D4bnj#;SjXIj`0dKM0L&.0l:`A1`Z)3U!=fk+C(j1p7f/O-&1n+a/3%[1e8<[-c,14!5:!I-)HoQ5>rI@J:jZ\6U%i=MIk_a%;&$XBc\q#Juicm.l%m\K+ZahN[2_KQH?R+36eD1SU/i4E8s:ngN<D<V&00Fb%n-E$BsjWa-*\u!s-[A$:r6>J$S24>S<%%@-O^0'efm_Fk3DIN<Y@VsIduUB+!,"Z5@8+3/';g@QIAgNea[^QF1k^8VRNN\aKl"Dj$:1:"o.H\h2cl'm["f$sQ^&@MKqAq6pi%[6\"K11rDt7A*M!2BLggB0/E)q%@5\g`Q/gL;24i=t2:27W;'/8n41.G5NkQTuuT+Zb]$T28;Ebi-nP#B"Ed5FPW^1k&ed^AFPD:%_(b<9T#Y$K?\[.DQK0(UPX1sOa,SHrdT#%ZFH`E'TePT##ucY*gW0U>44KkCE'gpje=]o*,^-L?mDptO9ntGpiu\qD!R`6hK!q\X%;mtr5!\lFQ]u`)TD:X$2*05p;e$+RojdsMe/lT[\'&ID)baCdme=o#@6(k?3jZ\#@O!Ca=91rM6D8eP5.#IOb/-PrYgYa8dUR*kQ%="W9N\?D0<7,((:RAiVU`/B>Zhl>2MC0T'@+uHTRobO5ulQtF41j1%9[g4/"pqbcDlljB'H$qK)"]$(]LmV<Y%!=apLmce'Ud)`j%U/\Y\DRs)VoVP9,R(MT$k&nGSc<>B6MKRuDPa,)\fT-k1Xqc[#*/5).faVH$J>8bTHS9[j>dd(oXn<a<KG@d9T[IK@W<$H[3kF"6%+;,E:Yn*.o"Ml]e>D0Pi[ZLa&9fn<!Tf*1,U2&>*J>0A?n2booQXEZAWOXItfEKS>B.#jo"*O'RKN@h2^oC5lm`gQ@^m5s^GB*t5%J_F"\Dr).d2S$4JK-$FsYa@hD-Z83M1n(/V,nO(1Z8!bB62eA@6(PAa"l_"#=p]_>Li&(1'8Sdp!GL3<P:@c$TpUqA-M)7E.T*23%bpYS0TlBU2#^6='&rcZIn48@"JBSgl.VaD?U/!_+&-+nZn`4N=>6Is/%(sn_Y_QiK'JkD6@YiFM@HnmPf5N6]:/7D=Kj/nm7*`UM%LA)2&8U,A2(1QZ4pJ=;C-AGAfpH6=A$XHS=&$LNBAKq,I;3Hr0/g&;^_6WO7aQ,U\#:,2"F<K[*S/#n&D3E;C*pgC-c'iQ)U6YrN%`F[g/g<M^)P-e'i/(j/'&U9?oD>+acrIL;".U3Rb"0T&%AffeB%-Fsk%:4Q4/PEH!rbCJDJ-o^j&-SGZ4-3DPI4E;Q7`C-]6pfRi%fT#3G'1ipA2`]er3Cncl4Kqo&IPIWA/+r$AZL>'s'E/WUJu1=+9kb[U)oX7h/O4H0mWMlB\/D_@kmSdkbQNMn`Kf)4E/iI?&IB0[%f-P+;46Y(OOpPU-E801GY0l$e+K4PRHgDUj56JQ5i3@k_V6.WrkGG0c!!H87XeY+)$A?jD!7J_@fMZ13k)g?$HRdI(%IWF7N!+$c%g#>^O]E[!8,QZFQc=.IM\ff`[C30s%/#nV:@gic6+RM-:OEh>jY'>Gj&T;cKGK;jPrSQY$WkekQL'8(X:(\e8,/]>g)NJNn[fm]n%#3I^q!,*9?U8ZV=85ljG=YPs)$G)Sr(iBIm*&!U%;MC2c=;M+nEEs;q5\<'i19rhH\rak]@='=,p4:pA9_u>e@VB<r,@H`4;%Jiu%*?T(JmLpdrU^"0dM:dt*mFhZgT>D8h!2Ui+i,o,<eH6&-)]2bXfpY`hoS=!2F[J*5MNDg5/rJ^=\8[0DJRf*7>;0g#)(7$^3fW'5%!_K9o.E9;`Vg4U]Ohc0R7P$6*PI\YrV./26]igKQDe(Rfahgm@3SM4P%K_rQ#/o.LOTkY^d2FOm(PKduL+L/SHk#RnHVs%%N@Vk/%n>(qD?.8$&IYFL&]El_%VM7d,&LhbiM2_d9XWh:M68qC.'\KL;o>(!\JQ*4f)tY1[IVCm&$/2YuBf$o<`431D.aBLL2IOBMih<lC%(nI@P%FEN=cqRIn1j5U_39XhenN8#Hd+6Zj5bCCI.E.Z]aBV-/AUl2/5ifjD2/W]r/e&Gl/GLf7R,*;Jk8?k&ak4C;DF\r1G!o97%:oH3g`8f22#V`##]7bd*.bNA@9tkLfXZJrEKOV[!3EnURgaL%4ICBKhld=.AeiaE^!I@$7:4gEZ6u9o$Fl_=cONrP<Y1'41YWZV^%FVClZPQ':!SJ,kJGXE(*)R_"e(iL]iB^.=fb!/:&(4_Vl;o:_ms*=te-+_!Hjaf@(J:Z#H+<;B?!Qi/)j,kgdW#1S,C`,"0!K.6V%U#iQ$rYXKp[,4,-jII2hHjZ(<g%6n!eHFS";4>R`"9JPEN)jgMmN?u-L'>#sB^<fRZk&09[2F8!ksH#GLKD:FO<ON^GYKp\et0pX%o?t..DjUkMC_e*=I9\tAn$.a$+][!r`sM)70_3nY#QX-XTrB[C1ZBG]bnN]J7;PAHnV@AjMaOQ7/d<T,Y/W2^24U_u"%JrcN`Mc8%AOD;+Pt4nDpj8K?L`iF?e:cIt.OR??#>W6!GGfmXMCKi/6*BcqaZ!WS>ZZ,+jaoK>k:pF5&IE,6:f[bb&3?dP-5T*d4b/4-JSs"]%rn*8;H9^^EjT&_/!kDfJ+ZYsajbB09Yos"Z@mSJf-9Z*O0QJr?Mf@3M#2cp7G3jRWL9RQVP!';4Ul)5X(L*8_OIZ2+?#HRV`D&Gd%<!WX<Vh4m+&\,?Ef,0B07$/R8R_s[K]=)i2$niIY6=:bT]`o%7;-1'BfM,cZY#N4Fa;nBuJb2!Y*g'#n/1rmRP8nfU!mTYtWoL]P%m;,jc^RGmN4#'I^6fPAIMn@0c^'*G9e)>oFEcV#0oaY'(!#/R-]-$&I'-s?tYE7KO*ht:fD<G1kQ&KXogm3a5Ym=-$LoU1'";%)D%7o+mg4U'lK%QkHH,GAl2JhqXt7\n,SafjEaFWPn0AS5XkWDW>@<<PTMX"]>i"iu7shsR/YL*C1Ci:uQ)`rIj*(pc/:5!+a&3(-o'%@%LFJVYdp$X'OKNTI&\p/uA*C#iV.>,Pn@Q.<NtG"`UQ[+BB&(^3Fu*;H40dl>=_2/AM<Z*,oPL#n`VJ't!2(Lf!^JF9$3Q.l;d_%nCk+]EsJsO/3Tc+*:+j2TA31-Z$-+V-2YU46W&:u=VaJYZ':"4Y28C\k-P_]nX?U?:tjM!0F%Zn'YlajA?>ijm(7]gFmO6Ym<*5S%Y\uQjpQ8i0e!A];>$8p'::P*lCF?;R,g/4r_*D54m<O/\k"n)EGQLm]&.D+(V<5#_HuS#KG`EL]$A/q\'[;eYPbAU)0<>G?#C3ac%K,!W<RmN6'@ZY1i.dXgJR^%-=n/-`=_=>)-$>J+r$R5pWkRu7m[K82YObQDEJV#%sQa[86Z>0.t=`O:7"^uA+KXsm?.S<P8RUU+_%"BC9O*428\_'q.j90U.*`"`!H7r]o#O*Y%MV=[T>77oN)JcX;Cbb*j1Fo]bp]g\$"Sclrb*:SQq>H(*$M2KV;drC9Jl\C*u(CjpW%*%-HN$&0\F)^g_7dGN$,S1c]]K$GD>O$SR.\A34EUu&?*S)m&C!r\Skfth!W:R=5pZ(3ft<K5J2UB(uAGSrY"6BR6p(>(SR)\UB^%qhUBX%U^ss_,PU5["-NR\S^_qQ#%kWVb6*a0N/.`,Y/4Oa\BhE0rF5]P\2sb5h0q+Em\2i4U37MkX8P'Fk3ApX60dYlFDP7ft59"%e8d_!o?R#.cT?n>P&Veact\UI=`33>N2JQV2<r^(#Uj6%IGHR/J5fV6!/(p?ljAIQflfMFZ3_c*<7r%(q@jn(iWnL0P9O",Q2I5B%j`H0,F&&MJ#p`!Dg<=bcbWA5=q#lUR2N?*m-+FStep0]o5,\e1p!p/``HZeW=PP^jV@*Za+TkVafK*:udI0.Rjt7I#"q83^q?AJj%3Y;`ja5_``-up3+SFN84lm32q:M^g&resJZmmfFu+kKIXF+rQUYY,oF@M*F,(hM/-%$74&Pmu+u=dpVF3d5l[K6/(VE*J2gIApIj%Xg?-jomr5GhcIf%L_[k;oZ`]p9PrPbliFL^:a<4]*obR\b<"Wk=t'XHHq6d0;7fM>,61)"a3@.BTi$!?(r.>Y67,VMV#*G][QPkm%pH5;ni^?I'FS2pu>B7Z+XXiCSRpc5kF;PNY>.5(Sdg@N0!M:4G"=SM0m3<sT#[FG2AD@rk!I6sdQ9Qg=E0n^OIo:B1H!g-=[K-Qf%=2APQ.O/@(m7Mrf!ka2iA`UaI&qtelaW8`"R2^UT<+?5HHEb5CdK$IN*71h.7LnBQ)4rK4Y]Z#b2'fl5(qYkW(lF"!HGO&q7VueK%Ye3[+9t+d3N:t[#aqOFoo#J3m`SoE+Ze)AL1_MlXa<gCaT91BuAOREA%cI_fR:WI]J0B^0A.$>r1Ldh,i,]o81SF'15,BJ97W-,g%."B$m>Gd!4Z72NTFmfY8h*X:nqDj<F27aM?LA;b'T-/\/CSJA8PljQXKn[q!6sH`9-S8uo"tW,+6JGBqWtU"?3HQgVV%),`?YS_+%i1M++!n&`hD2#n_O0er<(W0XB%Am<$0IDL\%cdsK!^W]a,!d4lb_b>N@=t3Tkg%CYP/5hL)DPhm"HGqrP9B@$b6k43eV[4VASd._%Up/3mMLe`k\$?\keJ<%hL1Ppf!oKr?'G(;6-i%Mp=SPo3Z4U&qUM`IrJTaT>6oj+A3%QrfVJKqZ:oaZ&VhP]'KSdYKj'AKEeV]Hl%>cb7VLQsa4a=gOm3^>Ca(qEbIL(NHU%]eMs@ZY%fM^7`CAg,kVp-Gk%=Cjp[q6iGN'kN9,XPmK$fmk6'XWmo5g5].4OTRo(:^6r!%c-[QqfifYWRi7'UYn%C<m0:QM>#XsY8'fqQXhN:\p+h/_2X$@`a8d+8C*FDG]^gLjQ.H/ce_-q4&;/JONb-6d2]1Zpa@V9?b_i(/%mit4:e:PYG'oeDA!<WJTHP-jPh_@`PVl()pK;sg`+XcB'@iId4ZR\([.hIjYW^W)(<s8OgUhS(EgN8uRck8bCSB#TG#9GBdH3T%-%n^,8h=Z(T@X0^(_*f971MHj-pX<Zu[TSh#65h+qf"5AX6X*l!#**h".7:W0lK%teXP$4QOaGO]"[kbh3lO(N@1"24,(`A[S(IHZJ%:GJ1GP^t,HU>h@-H]#5p7\)eM>u=OBUP3M/Wgg/\2$He'OE3-%k7pa,OF&ln;b/tr'dGfM2@Hi-iDZj`('g*!*C03_D\47QF"bLG%!HTZB>N/"s6gR'UT#"%I[('mnfe>>";,R[R?oW%_8O5ELB`*VGPXL2(,FE.IL1P0=JC[:Qbui#CIA"Xo6$BJ>AH''9)Re(e-)`,c%Q"(b7ioZU_W[.oVNNn8!B>?r4/!i0<1Je&c3uS_GY(j!c24AkW\;"JVQ%LDaLOmWL7W7E(Z[GLO&O<oYC55&Y"bdf'V[E%Y5i!_=%<mE:NpG'0$'p<GD;QML%%7d3l7m@o!c7'fN`Iq,%^Ndn3,\aeJ1N9Vc*+^+_PS"=(\"`#^(otd@Nf=]`C<A;@>nD[D=K5G!+X?'u%W\5i9ZuJOE$_COH.7<eD839h0jUA["E87N-)_UL4Z4tj*p,C3680/*X8#ErH&7-G?4i?%ZpDB$W;r\bCLDM_;LfJ>1L,dTXM!:%(%_*K*Abl!ai<%?k(Xq&RY<As!/a%nR5m?A45*)]T]0>5D.8\&.4*eP.RTP?dY>ul;e8KSpD+](m,oCN_b*47QLi%>Q#b5tI7etL-l%_^O#PO?sZhJ3Xs_B)oC_YfT2@=j%:CLeq#dS7`8a.R^\m2o2q+ZA0pb.O5:R$5ca(9#$]Z3;M3M_mV;4(`AlDjlJCtJ16*EO^b_C%8RUgFUg^5D0tAYg!AJ/gGmD\POJ8I9^4LsD!Bd@R&j\YS!scZU4/`BTCfW2d40Xc%_Qt4]1X;uGm#@@ZFb1QIAGdbM\W7/+\U:>8%[*!Ca:pN76nZku[=@q6sPk7,pGTIE&VH@!M+s*NsA5u9R!gYG]A?TTuRj&ASs3rG`T"6f@kCE;I@?`(KrsfV#HRoFSLK01+kWD;t%<#m[RJPSa'TIj`mN"$>.CRi,,;3hN(*!4:*cFO!3W<t,!F[2=5E#R)J"Og:0dU4i1G3C(MJAU_uS-AYI48U"N'8gM71:K.A+ksXk%q&o35hK?qTJHuXsD50$/:(sC^4$Zi)@W=&/2S_V974"tO2p5+3fo\@qNlMD7YJfp*_.\4i#g&PfkNkN:7F8n$ec13G4Ql&Y<V?/S%#?$3im/EPAhHND3g5V(bJ5D38+Oj@`bM#*J-5"i@S$;*ln.m8Xa:%5Fm@[.#26#>l)ATr"FD*sL7N>8l,o7Li'ZcS4:1*jp?B>H3%4bE8lD,hc<b?=0d@L3dI?T5,Bb\uu)Xtu(AEEoHf3(9G%660]q[IuX^Wq;Jb:bF#\;c+cO*_E<)L=SaW3lOHcLJ`&8B0@O6c"aH'%L;6q%<)6N4l)>^;4k276;^$^5;*,4$H:98JS=U)J+_N%K;a&-HW^3AWL<f-*,\@4aDi*]%MJ?hWkKof8m';lje_!_Toru:>=;JPQ%)JTcT:(VD6F73!"HiI%o()g(M4X,c`a&l43&1OX+\9K]jLhba&726Fp'=/KD'o3D.Z*>JBPZ/uPe_i\nGhK0a-sTVK%8]Jn+h)YX%L'nk38nEINO),FDDJZ%A;71OVMJ?g\G,D4T\-mIq+@Xfl;cGn,MQ1*ZW']h2/g;bnjQaSbLe^g$?.PlK8Y1$(<,FapW/cg67@;e3%]2<>#7u[A3!JC&D#BMDiD$sc*78YD$].Q+!N'.mnCWiH#"$qQoi14oEnU$52h(pY%\e'F_('6a/g8j>tVh%G%PUYh%OSk!5nsuA-%3qSgt"Kn;G>h5uiFS9QM"g*i_$Q96+$D`2s%-&i<Th6$_XjEAiY^Nr'k?2K5Op060M2q[G<Gi?LjD=,o1B0$p9lX-nH]!NYL9*fM%;H9R+k:T5LLk4BU&r?LbP[7ad/&`qL31_:j!IG524q(<t02c*A]G@RV$m[uY$UujW=:#1h..FRSP!.%"NGp%bX8sG1?.J6W`42k8%[DC].@MR//f0)FH%Rk4H#+PuNI![;s.hu8!M;CD$0CburUcHP<qhX@n.k!nN7*(&":'XWQ<Tu>g&'.VOQnp61<hZl(!1sS!_a-m9%0c.*d=*LCsatkM1Jl*2!4R7aN_P&uBD#K5O\_:P(;i8YX*!=#o+`s<d#>B?-;?`fSe-D4E`%2#igi.d?75</n$W8lF7Y2^=NipC%%X%NtnOq/QJf*tUJ@=VKi*\c$P`YIJ'-OtdPZ3l:$+EPFT:M?MRR@qW@4(C>^jEDt+X<DSJTVi^;;aXJ7GY:qu>)=22+GSrRR+9b'%hXH])L"r-I[t;eP=ND5TFVS_S@V(Z4@2UM)TaC!<7!a8[MoirFIgD_kQY1`HYruAYVB4r%_6-C18'E;H;uoWG7*qt_6,Y\JhQoj\%Gq)d6.1TRt!@;;(;i!"aK*3@8%5]U_<AN@Fk:rm6)/`huPU?j[T&GXZ[*S)`<[tXI*$Q0G3R"'E=[`Mi+-%!:GY[0S`Sb\cBq?"H%kR@N/QaP\hEh=aIWF(RC";0irXZ4+R4k^JH*0H8d.-".4lib5Q%m\e3QP\?=;H1aLBLqkar0;\k<MZu'6Fi,1f@cg]+2S(Z$PGXu%CUg*<_%(HPE``A<;$Ug5`aSYFMK`ptJfXX%J677`I[Du^/D!EAgp\j\cd-Xdg)^gVW0jOA"-3VKB`^[jW4+540L.gS[WVq`j[4mc%WN9QE+^&k0_hEIK>s@2[8nJb=D;r2Q68s9,ANWSHN7<-,gf`Yl3bn_XA!lLYYp/5RR[0.hH@hFu;9:I`[3R&s"-fI1ECU6TK&E$-%_\YsdbYh&!3(975oRuN6&Y\G<8@cbn:Y\jn\Z"k$7j1YELG<)MVOcMfZoLe(Sh:mb,!B?ip9D%bZQ\Y##F$oo\U,@77.>"KZhTZ%%g1FmVn\RD1eRJ"T).K2o#T7KdF[]!*opB"N!1e1S*$[U-c374*!1m6LTF::b@Y?'mAASc`?8F.'U?<N!4qsW^Bfs"@-.<$Tl83?s%\&-XVH31Y'2+B-GWo_qH0GlY4(r@43h@n,T!$7mqD#$!)1R++=Tch]^p7a5hLsp-,C)$%XBh[cNU7DuJO\^9gQAoA!GQk?B."nSi%.O'0*("^`:>KY%nTheDAlra?UVSqS]CfcKRgQfgtG%I&nXro?Xj+,6neOb;*1L7h1`%3C8/!$t"ariEEFbR=7MGX^)ZHD*a=jVOk%AL?22R8_/QF9Os[Z2hiH"W7&UM?sV$]cC"HXP2Y-13"tAVqR._\mi3jJ/GF/`-*Ydcut%r,tJKI<n9XE>/Aj+d<@+4otk`[0\r*g%-D+[6WY\GRWL9Q#5bjSFC:$m[m2:u4!j:0T?u(.7GGo=eF)4l->;BfuK"+Wt_%WkLQ\d)`=KMudX-L`DC1Wc7X]SUN;cK*A%uV=,%\q7gRoV$lc^8elh7Ul(kOjU-ndri*!fj"^.70ObLBWcsN3PC9HrS2G)?,*!NY1[A^eJ;VOeg^]jYt?/q4`l6qe=*?d,/gS4<7OR_%7CH4lho/^Z0c'`t'%Uqpb;lDk[f]AeC$1sPAufq`RAqChO#03Y<GBlCB<$RA.PaYdWN'aP.P*KU:@sSM+Z[PY<=mkR*aA%]at0R$%.Z]CfatPck:;XdZN7/=d[A#ii,r1)rG,fm_N)^oDA!OGS`[^;,=f\X-DTO;=egeSU=qqYB^*]=Jf2CljB<6\\MO@S*<R=`fe$9cO%C=A,A*YDnI@a8*;0euc1;Ku.:aJK(m<G/k4E?)6o+#1:1lT2ofLiM3'@t8Od'_$d7bVDJ'XmYg$ekuj^6&GgOj`%=hYY7K&E??%N%nU4tbJ66+/rl&,IKX>`SE#(?eEEDm4N!CVfl^3I,V)6CoHQVrg1\ZuQ"BarULQi@bFuW_>J>FL.9W3+OD\-\h2N`-uG`Hps[NCN-%/pR09]J%l.e2I?0>>Gel-QPMUO[a2h_c.i62-cmd:e4Ut[&Z3nSubmV.LWTlcrs6n>s9b'9X:)=6`!q>6AmY"83tk9n=F*hX#hko%T.RKX[*JJ<]3nMAp/A7>nO#&IoMCUMejdm;_@@30D[cFA!Mn$&:':X&'*R^NoU]N:JdkTdKu)Ief#TQM!/dagJ6F_cF+/jjl%$>o%P*]qR^=Q/s25eNV?1)AO7M_Y,QZKk`HDD/i(JY4n&=sGZNA7$7J]Dd<]>qoIDc*kOW/8oE;BMnjIMgb:)_IN[GMH(2bYcV.9\SPj%VS@J8kK&'I&MBkh(aq"JJXakL..Z-@!<d3]UH8hW=Y<i:*KS>N@lD3!El^S53U%<@.cb2):&s6MMO=ZMkILE=_[caWTPE,P:i<N'%l?!thS;#:tEGN[N:kLRB1q3Zu%F/C`_*RC`7+\2S#/(@Tj-2SG%ddb+i=_)K3!Z\q#>!F%d0GmlB\qNk8VMe*CUQZX.dP;uT!skT%#HEX^<]"+t6U[]&'iAtkhIGff4iQhHXMZ=i.rbkb>$M-&)Ma;bm#ZsJSEm';EB(a;Y%oPZHd2IX]J=]^*T<rB+kbN?.ET$EP.Ulb%OYb'!:`cBSN9SF^8fun7U;sg$<^"a1)qEtV9]UQ;&.G%k@>Yud&67a'N7BnCYo3k,CBarI)M#%>ZKcJW/b2E;VfMBc7qKsT8!UX4%+c8$V6XA<n3*em&>\a*9W781N7*`UD"I.gS:rXZGqW9+9?E@SiFI0n3DqY6([F9$IV&_gk\Ok\ZAQQ-LDM!s_Y!IO03"1eIfXNn=%n:69"KoEKSLO9=Oq$JP]lKD;+XI!^D&960Bk%^1^69iH5q_Z.)2_kQPHP-o^Fil>&Ls^pfIqfZ0pM0CcNH?JY\iHAa6r#)g*sr;>%U[1;S#fV1imqE6)6,^CbpCo:kJ^kPe^)=2q_;<l\ecf`fYiLN)I#=<PHJn=P77%ic9L1^VqNN0p@L'.;WF9D7:GA6eJt3`qh@"DZ%j)n<;;4JEJE*Y1Yf?CZ^3>=g7[bl5@8@4&]T6^ck+T^M?*8,iSBddhXH<NWo3@%Tf/HOl['n*FH6G)6tM$Q-HM#/Vp+!kG4mo)JR%qdY7:,/H:3_XbesH]1"X,"=kumO@kAf7nlfSJ:Nk=O^<06bH1q@2l!8\e0W]8(L4UR%m5G),V$8ZpSr80cDPm4N/>XhPZ)g0'"aU%iKg\-C^ggE)rs?$eAZ*X6<3)5-oGcW,ok%'UsP9d%Yka?.i^W_=@rK:"-9]#R^K:'\+[WYmgr>mqTJ$4FB1D>8J1qC]VcV@CX6ME%HYM;*3(sQ?ilfII6i>*@a"#MCla#TGR%h:HTN&g[-mEeg_ImoZor:OrE/5Hr@Q^H;a)Z4;`5YAO(ZiV^?n)Y>?]/C1:[(\rW`AL!%rnccS,,c%Q'nA>JGn`mc-#9q%X.G=`3dK`l0!_.6nA488HN3!9XMm1kVbRh`-$#Bm&iknhTBfD*/R;7L*n>traaLNY"\#V8NZc,>%,!]m_-feARLT.rG+kkjS-ITQJ*>OsJ.OU)>+A(+]?R-C8B3"d&,!['3L/;@L#YQ]U'bX0(5fc,#d2WVN:cbMc)/MhV8qc8fI#r$(%7hXBZP:sUq_L%skVdk"L&]oQ5M&`8+6k7[Z,):.t&N8L'g.n\RHf4ULe=P3g?mlISY2ODFj4/CK&K9;&O@U%-MQ/1$PG(`K$-#_;%%V)Cb5T3AV5eUYXRi_`5"7NnE!^]dAk6H6#6+8hZ9AQ'KP?9<Q&AafF$)0F1lofAGnP<l)#r5sh8c"8dmqIeM\f=9a?AGZS;kSis%>&H3(LbQVBCF!H#6#.u%5\reZjd6Di<Km1uI]Bb;dib8E5[C-)VQNc+,M/ktWu;l)+N;uS('rH))h7?KYs7o?Eeq:=3D;T2&e$pu%!%DW)n4FX&Njac`EN2jU.#5';'Mu2;b9-(I*Kk;L.:$bNkV?bb.#5;53DAe>^/*dn`%S.A?m;L15qH1VdQJ`l/W&VjZ1=d&7JYh0%&f/P*\O216CQt;BA,WoIith/qC`ENB19[lrE?XH'*ap\(OH]H%7X?F)(i8ODS!"(H^/4A`TdO0BH8\1'P5X=?\\cM'&Fga5e17US%Mib.3[9AZ@V-(X"%bq(\5O#)D?ccW9p0o>9:R-G?&HZ"q:oskB(_]_D.+sE38OWc`jV52)Z&%La]ARVI67q%!E_?Ni:Lm([M^4A)%c'Vp_1ZgF']X$,MJkN^`(Lu#p],6/C/s/-g`J1/4XDs$:c'Vp_1ZgD5OLD<E*i>7O0Jl-Y\E709^C'9MVf*i7>ku_rFF^M\_;*S.%@<-dmNU$b7G/7IDBij-@=N"<CF`2G>8^YO>FsE9q0nK6P1l)?7%sc3V;@;YiQRmeLqEaaGetcpT)I/&FbTS*Gm@:m(5j5,5Kb?A(%1K4?@`\r!;XR"Zi2m=MO?s+q&;=kR4@TEE[$_=9i/T4dCS;kHs]Oa15!ZS[2^-d'5P),5Gitkb^1-j<X&2dKL.u=LQ@0u'4Q=;oL%/Z6\>eKI*Fl`.:l>$Y4#;upuW124+87GQ%+)#H#hRC2;\Rc!.!j?BRSJ70T)j.1d'Ij3;UlpO<e&r('rJRNG5H]2!/aYk5FN5NgU%(H7R70;X[@A@(,_9^<7o*sQ,AR4j3h/,3^'RJGd`ciI9=2hh[)PTFJqTRpDblWSmW+X7_HMo9[fW2Kt1)?c;+nk[)FB"bj0Z9j)G%?4QWHC$'2jbKMC@"H]ouJ#sJ9dj58H';tR=Wu@e+CC.1,!E!\>#mTjtO$%'EK[nJ<AqO`:UTp7*AS*\C:/9AJJHL\8jP;T\=@:X.%!+EFOTj!FH4pp4YKSG[L@/@:/J43ku:IEMN%d>CR-bSWHS52#'[2Ib`5mWdP\jalBXsMdS,Q3jqlD3VNl4DHEkh,.,Xl40%%WV^S%Pm!!l76&t9MH*C/[M2(F:2HJB/YIuP?'':>>g:b4ViCkN>;0WA+esFT+LmH"1;]c*\IUe<W,O27;$r*jPHi)Dm&:"uSD5hR5L]HU%`g=f4*YdXR8>)\9e<XPe@!V>H_]nR%]'raBd2HR!Wl*>WSVjq]p/;AY5=A;(R2Zi5(oIKBTfIuG+ZmU23Z0&0S26pU9&"TjX*Q%(%C!1"r<X0[].AJ\::s>(-$0Ooh/[@;r('<f^Zt]9!Nio5&I0kLPEH;Oop/"rV`/Mq+@R%gcmN0JM#,fc"Z;?esfU9[udkeBk2H5nk%,!gnF)J2[pA*B;1NK\q#TH^kJ#E04.\=<>Z%L(j9iTf#>pq=p,7'M!8V5<nF>bb-]e,5$;nCH`,>HI%a(b9-NP2!R@F\=H?3+<`j%!jtKJ;:H]lC4^E);8^2rT2X!DNtj6rO]n*qd+/FuJ+C&.[^6A[*YURO&F`O4dh)tn6Zlr(1tAK`feg:2UA<CP;#R@]Z=-Sh27-V?%PVFfLAZZn;LT0\L!ln&8p6C&eePsR-Wi?hGc5rra8@p]c6q!uX0,D3C:DIhNF$)=E4p;)^;G@EmKkhRLVuSPPp2*HGoI3)Q[`/d7%*Y:ROM7K,HN/f0mEj1KV"ZOKK5Z]Jc=ir_a.[k(&3h95"A8I?:ChIi,fGUsX2,kHV49]]R5gAu%&k?o`5RaLCF3DUW:IQ#4'FQ*s%prBn*:@*[ZmfaP6:C;hI+Vn'H.ZR>Imr>?qpJbAmUr3SVWG`554!U#FG7\Bc`l:*ShkD+t?-pf><EA^Q47Ucf]-05Qqa(f_.9jVR%:Wh4(lb&2i):K8sqAc/?7YcPsX-04KN.IB/<Xs)Q:5![J_4ahhkb7@m","]G9e(uq6&&F#?c4.k%cP`2<HuO!cA;BQ_#dZ#m_AlK%(@@.F4^F,[O+Dtl`d(Tef\8)61r9\J`'%dG:)L,C8oen2.Lf:"':uI_>]K,#+Z:U,EME*$;r]QZf/?hqIOec/E?DG^qdM`k'0_VV%JNaT@/Z.So>Y]&$0OUel"]$h0*pM1N'`u`jA0&1I?q)S7TIhRh/$^s="2mNY/6:Y]@\!t9'fE6S7Bd<P(1F&(S4XnR+UsEhY(]I?%!E%f,dR],6_Ih'T8Vkj:\n!Z*8c>+FI$#Bs-^/,-7@)(d)H*;<)_05c'R*HE@nf&&P]_MNh%o7&V6ao0[M)Yt5-jW#Xr^`?e%Q*f%(s6Q&@Uo_1M.TrLVs8L8bJdSC]1Jm7PU,o3@R`kgUm'gQcOa31U!8Sk\K3_JfNCO@IS.X)-1;7N&oN^B6*!Lf[7MueFfMZ08<qhf%!MeR(_#PYYTL-e:Gsoej.99VtXfSi#n5N^%h0Y\<;.V'F!1V7`"5tq,SoPX><*`-/='a!Z;I.I"WNHt?(KXH^XT_^(,gW'Heq10R%[@<H4neeop3_2kY5m`i8(WT?#R[(FB.8j=Wb32CU."2O$B>hh/95A)BEAMY(U_6fJ<!hqs<cUTCNV4$]daV:nSjplf;c8%+8o$FP%.Vh&#$YqbUl=rW&3ELL'\m!ZRX/cDVP@UiS-&U_9JjfJZa)Do8R'-KA]=dhJl%LQf]JMmD6k,<E\X-d<IVUH"bA2KMGA'u.Rq/S"%AS];cC1Wi`8?-F@\?elGrQ<h=;H:mblm:pNWN)6*%?$Iob"Bc"D+1k:5Z%;V7HrCF8JL>n#@g317L#eB"%lm!*2Fb^B>MJe%X9HH%R<>r]W?u8T3G;C@0MEg*OCD0Y')[d3XJ?NY=fij9QRZd+!g3eEBaGc*YI0%34R!>QVBqV"N!#-GeJ9)W15TOs@Z]:I6"kr<]Ok_#%@6EP3_JaVaO)1pK@YH'j-8fFec5Jp&2.uMSCm_LsCrU95j[k1EHn(IR@bHkbiL7(W=j:*1i=<6'AMoFJ)6>h+'f*ouimb1p)doLK%oKui60,Bi=kLECo!9dJJr0-?DdX63mUsT`(cfQo5ZW2Qd^LXn5lKN:R;Mp6eVh:ae_2822HR4I^:\P\B:H(g:EGF76(@:q,MQEGY%M@@tnC^Gj]3[/*GkMg:m<gq,jU6DU`!DV6o7*Dn[7fFWk+[XjG4CYRn=IosUp*aoV'bYD>g3A3gGrCGg0nKDlb=WAt8<mb`=KojI%g-(2CmdV.7O<te_o3CUo,$Z4s4IbZ;>;qFRGrCFt_&#A:MG(`!*WF?\B=U,DIS[&q740=W`8phkYfo[@Te/R?7%7V=en@]1>c$(r%Op$8V=5mO<>UgL$'YtYK'?;,*\OFX1mFklDEiF0B\K2?SX-fpuD&?og!JG`fE#.q1DF23C!978uI4D`$2*-`4'jA=!'r&OhRc[(3%6j(kVDHnY'm1Cr_XcPW_4@Y)CHn`[\"\:A4M5r,3IdPUo$kNc65K!o5cZm:F!D6+AX?*^4;URQ,S3L)cF=/A"NKt0O$;L4n.mE"A%;FELf]2j\faO.q97$G:BA&/qQ"C4*XjGanA&u&dm-m)h9O$iO3+L65[kb=G+g'q!Sd7D@oAMK0+*/,h#i[j2YP9ehh2jHAV\g!.p%3K/kakBb/rJp!RkcATmQ@K9h<$r%rKo4f$&$XPMd]ss:Nd03Jsk6tZp,T6^p`6(J<'C6sd5H?@N(?;FPX,L0Y<$f71;CC00WtVV&%'?WJXCV+Vt)09[Yj[@1^hu^;;fisJQW)_6$[\Ph2"CiCN_q9\N#T$u[lY)!]06L_k"ftShN_bq/_h;m*cnCD4:g5>W<E9rk8/MQL%XQs1C4bR=BCHj^.,RE-5$r[OK![6e?.<9&e`?#_fV3;(j_OKZ8/>s:5hJuYignf+5dMW6Oq%C;>;7eYMD$$X>eR<2YFVn7X.kT&B%E\-i*%o,QhNk9gpQA2:ic"KCcLmf8'VA@Ya6OP@d*+HnQCihP7i`Ks@(:BerN%LuYcikUt8)9iVJm)l6.t'mR0j@Hp@RK]'>>(/T%NPcA:C/m1#8OX<n),u90iR+KTf'(ZgLG9AXBR>(oGdLrDNDd7@(1S*8T#Pme#FYJL$[A*7Xip5<ZtU1R"OD6T!I3TSM\G+19-JM,%H&Rb:?tNm;iW5>rc+2jB/jn)uF9!%I1:depgd:LpEJRL^0R%g\-KbcD0#dGG%$E6Q_[CcoQDn0tj,kHLISi\3NE>6k/Vf\5q!\>_%MVAftJ7&Fn:#1J,Ya.`G2QBdbf;I?:9G^jN']@LBDmc&&6r"@"0g/_k26!W2?,q2O<2I.aMGdWo"XEp'JLVOe%nVIo5g%kh'#e0C%<LGC`.&6*Fdn(9o3iQPb>Ek]3l<,Jd4/j\R8h#E][%%M\PZ!Qu;X,ts%Q^ZI5psE)Xt)eb?u*i0C2:mEdn2bm=t,-L:b]LpV3Mb*%G?QGMc/_W`*"XG\\>3C36EW0e$*DZgW@dg3E)2VNL2*P+&ZsP:2oa9-f-ls:SJ)2.Z.O<V4,2DEnX+!d*[@f:=r4<jqI!L+p!m*'%@A];.-<b+OW"&rGR'<+&SgR\jI#k'cd7U+!AJXVQQ\'pu;NHW7WgM7-4[rU(ZlOOFT$_CHS$aJ>U:\XM.[TC]pK]mD$GPUlhZ\dc%ANHTX.0^B(Ubir9G?,K+,7I3Ai7Jm2j:P-Z:B_2*QBhs<n%j@.EPM30-GA$^D1ofK:jF:A?mf=7pDDe;<D]WJe/">rCeuU"5VX/<%9DD1R^,ZnoLh'N(L1D,3C#C]OFp&aD1gYA=i!$$aotU]J/MJC[fgm7:&ZMc9Ir9<9%9/RC;BQ]qSJJl1J3$l`K<YGd*9,+C'nYOZ%X6Vl:YckmkH4,p-$?I'(gIN/OBI'.MS=PBGcedn4:fX39;1da;Y&WD>eck(QelC`LME)!a@jD(DU_+o(p1\I\lpLm^'#<m&TMTWr%#CEf:X*nd>+X-t:k5/>nI)^7hL/NWcjE.aY>_2I#-A\1P*ok_sQg`qud)L4NZj1b8>#3sb/(UN2Z9K1fMJH)-%FMs/NqHpBO9Ugf%>`Kdrkape`F=k&,imO\,T.OX2Tg_m^])+80b,W!U>l]ZG"KA](OMrO`3]QMP$nCCkKG>b`UMZ1Qm0.=jr6sN\7W7Pfh=0RXk7<2h%s0m?Z^><'tHMHpgmZW9Is6f7qoKI_RpHQ7tmll7#o&JPeh66?%$Qfn&^]4(LYe0E'T.g3P8:3iI?Wt&6@&s&%"!(]q!r~>%AI9_PrivateDataEnd